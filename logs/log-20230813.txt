2023-08-13 00:00:00.744 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 00:00:00.755 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 00:00:06.415 +05:45 [INF] Executed DbCommand (31ms) [Parameters=[@p0='Jeetpur, Padampur' (Size = 4000), @p1='Kalika-02' (Size = 4000), @p2='ashish.adhikari727@gmail.com' (Size = 4000), @p3='Sahakari' (Nullable = false) (Size = 4000), @p4='Nepali name' (Size = 4000), @p5='2023-08-12T00:00:00.0000000', @p6='2023-08-12T00:00:00.0000000', @p7='8182' (Nullable = false) (Size = 4000), @p8='10' (Precision = 4) (Scale = 2), @p9='2022-02-02T00:00:00.0000000' (Nullable = true), @p10=NULL (Size = 8000) (DbType = Binary), @p11=NULL (Size = 4000), @p12=NULL (DbType = Int32), @p13='123345' (Size = 4000), @p14='+9779840382936' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [CompanyDetails] ([CompanyAddress], [CompanyAddressNepali], [CompanyEmailAddress], [CompanyName], [CompanyNameNepali], [CompanyValidityEndDate], [CompanyValidityStartDate], [CurrentFiscalYear], [CurrentTax], [EstablishedDate], [LogoFileData], [LogoFileName], [LogoFileType], [PANNo], [PhoneNo])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14);
2023-08-13 00:00:08.263 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 00:00:08.267 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCompanyProfile (MicroFinance) in 18603.191ms
2023-08-13 00:00:08.267 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCompanyProfile (MicroFinance)'
2023-08-13 00:00:08.268 +05:45 [INF] HTTP POST /CompanyProfile/createCompanyProfile responded 200 in 18608.3815 ms
2023-08-13 00:00:08.268 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCompanyProfile multipart/form-data;+boundary=----WebKitFormBoundarylqgBAtJdvd4ABUAy 1496 - 200 - application/json;+charset=utf-8 18609.1487ms
2023-08-13 00:01:12.078 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createBranch application/json 74
2023-08-13 00:01:12.085 +05:45 [INF] CORS policy execution successful.
2023-08-13 00:01:12.086 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateBranch (MicroFinance)'
2023-08-13 00:01:12.097 +05:45 [INF] Route matched with {action = "CreateBranch", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateBranch(MicroFinance.Dtos.CompanyProfile.CreateBranchDto) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 00:01:12.120 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='985485a7-90f9-4a52-8120-81dab43ff7dd' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2023-08-13 00:01:12.229 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='985485a7-90f9-4a52-8120-81dab43ff7dd' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-08-13 00:01:12.249 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 00:01:12.276 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@p0='000' (Nullable = false) (Size = 450), @p1='Kathmandu' (Size = 4000), @p2='Fintex' (Nullable = false) (Size = 4000), @p3='2023-08-13T00:01:12.2506588+05:45', @p4='True', @p5=NULL (Size = 4000), @p6=NULL (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Branches] ([BranchCode], [BranchName], [CreatedBy], [CreatedOn], [IsActive], [ModifiedBy], [ModifiedOn])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2023-08-13 00:01:12.280 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 00:01:12.282 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateBranch (MicroFinance) in 184.626ms
2023-08-13 00:01:12.282 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateBranch (MicroFinance)'
2023-08-13 00:01:12.282 +05:45 [INF] HTTP POST /CompanyProfile/createBranch responded 200 in 196.7805 ms
2023-08-13 00:01:12.282 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createBranch application/json 74 - 200 - application/json;+charset=utf-8 209.4550ms
2023-08-13 00:01:19.895 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createBranch application/json 74
2023-08-13 00:01:19.895 +05:45 [INF] CORS policy execution successful.
2023-08-13 00:01:19.896 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateBranch (MicroFinance)'
2023-08-13 00:01:19.896 +05:45 [INF] Route matched with {action = "CreateBranch", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateBranch(MicroFinance.Dtos.CompanyProfile.CreateBranchDto) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 00:01:19.920 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__p_0='985485a7-90f9-4a52-8120-81dab43ff7dd' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2023-08-13 00:01:19.991 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='985485a7-90f9-4a52-8120-81dab43ff7dd' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-08-13 00:01:20.055 +05:45 [INF] Executed DbCommand (21ms) [Parameters=[@__branchCode_0='001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 00:01:20.124 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@p0='001' (Nullable = false) (Size = 450), @p1='Kathmandu' (Size = 4000), @p2='Fintex' (Nullable = false) (Size = 4000), @p3='2023-08-13T00:01:20.1205600+05:45', @p4='True', @p5=NULL (Size = 4000), @p6=NULL (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Branches] ([BranchCode], [BranchName], [CreatedBy], [CreatedOn], [IsActive], [ModifiedBy], [ModifiedOn])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2023-08-13 00:01:20.124 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 00:01:20.125 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateBranch (MicroFinance) in 228.4894ms
2023-08-13 00:01:20.125 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateBranch (MicroFinance)'
2023-08-13 00:01:20.125 +05:45 [INF] HTTP POST /CompanyProfile/createBranch responded 200 in 229.5178 ms
2023-08-13 00:01:20.125 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createBranch application/json 74 - 200 - application/json;+charset=utf-8 229.9450ms
2023-08-13 00:02:33.946 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/SuperAdmin/createAdmin application/json 232
2023-08-13 00:02:33.973 +05:45 [INF] CORS policy execution successful.
2023-08-13 00:02:33.973 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.SuperAdminController.CreateAdmin (MicroFinance)'
2023-08-13 00:02:33.977 +05:45 [INF] Route matched with {action = "CreateAdmin", controller = "SuperAdmin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateAdmin(MicroFinance.Dtos.UserManagement.CreateAdminBySuperAdminDto) on controller MicroFinance.Controllers.UserManagement.SuperAdminController (MicroFinance).
2023-08-13 00:02:33.980 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='985485a7-90f9-4a52-8120-81dab43ff7dd' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[Id] = @__p_0
2023-08-13 00:02:34.048 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='985485a7-90f9-4a52-8120-81dab43ff7dd' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-08-13 00:02:36.951 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__email_0='admin@gmail.com' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Email] = @__email_0
2023-08-13 00:02:36.957 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 00:02:36.984 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 00:02:37.176 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@p0='000' (Nullable = false) (Size = 4000), @p1=NULL (Size = 8000) (DbType = Binary), @p2=NULL (Size = 4000), @p3=NULL (DbType = Int32), @p4='Fintex' (Nullable = false) (Size = 4000), @p5='2023-08-13T00:02:37.0628372+05:45', @p6=NULL (DbType = DateTime2), @p7=NULL (Size = 4000), @p8='admin@gmail.com' (Nullable = false) (Size = 450), @p9=NULL (Size = 4000), @p10=NULL (DbType = Int32), @p11=NULL (Size = 4000), @p12=NULL (Size = 4000), @p13=NULL (DbType = DateTime2), @p14='Ashish Adhikari' (Nullable = false) (Size = 4000), @p15=NULL (Size = 4000), @p16=NULL (Size = 4000), @p17=NULL (DbType = Boolean), @p18='9840382936' (Nullable = false) (Size = 4000), @p19=NULL (Size = 8000) (DbType = Binary), @p20=NULL (Size = 4000), @p21=NULL (DbType = Int32), @p22=NULL (Size = 4000), @p23=NULL (DbType = Double), @p24=NULL (Size = 4000), @p25=NULL (Size = 8000) (DbType = Binary), @p26=NULL (Size = 4000), @p27=NULL (DbType = Int32), @p28=NULL (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Employees] ([BranchCode], [CitizenShipFileData], [CitizenShipFileName], [CitizenShipFileType], [CreatedBy], [CreatedOn], [DateOfJoining], [Designation], [Email], [Facilities], [GenderCode], [Grade], [ModifiedBy], [ModifiedOn], [Name], [OtherFacilities], [PANNumber], [PFAllowed], [PhoneNumber], [ProfilePicFileData], [ProfilePicFileName], [ProfilePicFileType], [ProvidentPostingAccount], [SalaryAmount], [SalaryPostingAccount], [SignatureFileData], [SignatureFileName], [SignatureFileType], [Tax])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28);
2023-08-13 00:02:37.180 +05:45 [INF] 8/13/2023 12:02:37 AM New Employee Created > admin@gmail.com
2023-08-13 00:02:37.207 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__email_0='admin@gmail.com' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Email] = @__email_0
2023-08-13 00:02:37.291 +05:45 [INF] Executed DbCommand (43ms) [Parameters=[@__normalizedUserName_0='ADMIN' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-08-13 00:02:37.400 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@p0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 450), @p1='0', @p2='8347590b-3841-4569-8f77-8c59cdba5409' (Size = 4000), @p3='Fintex' (Nullable = false) (Size = 4000), @p4='2023-08-13T00:02:37.2332438+05:45', @p5=NULL (DbType = Double), @p6='admin@gmail.com' (Size = 256), @p7='False', @p8='1' (Nullable = true), @p9='True', @p10=NULL (DbType = Double), @p11='True', @p12=NULL (DbType = DateTimeOffset), @p13=NULL (Size = 4000), @p14=NULL (DbType = DateTime2), @p15='ADMIN@GMAIL.COM' (Size = 256), @p16='ADMIN' (Size = 256), @p17='AQAAAAEAACcQAAAAEBGk15BDmi3p6+L7Krz2wmz4sCk7uxyC9jUtQ2eCbXncL2619Qtr14VBnvIGQsQCXA==' (Size = 4000), @p18=NULL (Size = 4000), @p19='False', @p20='AUQ3G5RVHHEBABPZ35YV24BXRNADTBTS' (Size = 4000), @p21='False', @p22='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [CreatedBy], [CreatedOn], [DepositLimit], [Email], [EmailConfirmed], [EmployeeId], [IsActive], [LoanLimit], [LockoutEnabled], [LockoutEnd], [ModifiedBy], [ModifiedOn], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22);
2023-08-13 00:02:37.427 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedRoleName_0='OFFICER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2023-08-13 00:02:37.451 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450), @__p_1='4acbdd75-a4b9-4444-8f78-86c713da3054' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[UserId], [a].[RoleId]
FROM [AspNetUserRoles] AS [a]
WHERE [a].[UserId] = @__p_0 AND [a].[RoleId] = @__p_1
2023-08-13 00:02:37.453 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedRoleName_0='OFFICER' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedRoleName_0
2023-08-13 00:02:37.498 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__normalizedUserName_0='ADMIN' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-08-13 00:02:37.566 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@p0='4acbdd75-a4b9-4444-8f78-86c713da3054' (Nullable = false) (Size = 450), @p1='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 450), @p24='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 450), @p2='0', @p3='687c765b-be78-4bcc-ac82-b645f20b59e1' (Size = 4000), @p25='8347590b-3841-4569-8f77-8c59cdba5409' (Size = 4000), @p4='Fintex' (Nullable = false) (Size = 4000), @p5='2023-08-13T00:02:37.2332438+05:45', @p6=NULL (DbType = Double), @p7='admin@gmail.com' (Size = 256), @p8='False', @p9='1' (Nullable = true), @p10='True', @p11=NULL (DbType = Double), @p12='True', @p13=NULL (DbType = DateTimeOffset), @p14=NULL (Size = 4000), @p15=NULL (DbType = DateTime2), @p16='ADMIN@GMAIL.COM' (Size = 256), @p17='ADMIN' (Size = 256), @p18='AQAAAAEAACcQAAAAEBGk15BDmi3p6+L7Krz2wmz4sCk7uxyC9jUtQ2eCbXncL2619Qtr14VBnvIGQsQCXA==' (Size = 4000), @p19=NULL (Size = 4000), @p20='False', @p21='AUQ3G5RVHHEBABPZ35YV24BXRNADTBTS' (Size = 4000), @p22='False', @p23='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
VALUES (@p0, @p1);
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p2, [ConcurrencyStamp] = @p3, [CreatedBy] = @p4, [CreatedOn] = @p5, [DepositLimit] = @p6, [Email] = @p7, [EmailConfirmed] = @p8, [EmployeeId] = @p9, [IsActive] = @p10, [LoanLimit] = @p11, [LockoutEnabled] = @p12, [LockoutEnd] = @p13, [ModifiedBy] = @p14, [ModifiedOn] = @p15, [NormalizedEmail] = @p16, [NormalizedUserName] = @p17, [PasswordHash] = @p18, [PhoneNumber] = @p19, [PhoneNumberConfirmed] = @p20, [SecurityStamp] = @p21, [TwoFactorEnabled] = @p22, [UserName] = @p23
OUTPUT 1
WHERE [Id] = @p24 AND [ConcurrencyStamp] = @p25;
2023-08-13 00:02:37.567 +05:45 [INF] 8/13/2023 12:02:37 AM: admin is created
2023-08-13 00:02:37.571 +05:45 [INF] 8/13/2023 12:02:37 AM: User Login Credentails Created > admin
2023-08-13 00:02:37.572 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 00:02:37.573 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.SuperAdminController.CreateAdmin (MicroFinance) in 3596.1861ms
2023-08-13 00:02:37.573 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.SuperAdminController.CreateAdmin (MicroFinance)'
2023-08-13 00:02:37.573 +05:45 [INF] HTTP POST /SuperAdmin/createAdmin responded 200 in 3600.0760 ms
2023-08-13 00:02:37.574 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/SuperAdmin/createAdmin application/json 232 - 200 - application/json;+charset=utf-8 3650.9406ms
2023-08-13 00:48:37.516 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73
2023-08-13 00:48:37.534 +05:45 [INF] CORS policy execution successful.
2023-08-13 00:48:37.615 +05:45 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. For more details, see https://aka.ms/IdentityModel/issuer-validation. 
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-08-13 00:48:37.707 +05:45 [INF] UserToken was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. For more details, see https://aka.ms/IdentityModel/issuer-validation. 
2023-08-13 00:48:37.708 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 00:48:37.746 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-08-13 00:48:38.506 +05:45 [INF] Executed DbCommand (29ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 00:48:38.517 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 00:48:38.591 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 845.4879ms
2023-08-13 00:48:38.592 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 00:48:38.696 +05:45 [INF] HTTP POST /FinanceCompany/login responded 401 in 1143.2899 ms
2023-08-13 00:48:38.696 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73 - 401 - application/json 1182.3044ms
2023-08-13 00:50:14.826 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73
2023-08-13 00:50:14.856 +05:45 [INF] CORS policy execution successful.
2023-08-13 00:50:14.857 +05:45 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. For more details, see https://aka.ms/IdentityModel/issuer-validation. 
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-08-13 00:50:14.857 +05:45 [INF] UserToken was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. For more details, see https://aka.ms/IdentityModel/issuer-validation. 
2023-08-13 00:50:14.858 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 00:50:14.858 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-08-13 00:50:14.885 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 00:50:14.930 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 00:50:14.936 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 00:50:14.948 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 00:50:14.959 +05:45 [INF] 8/13/2023 12:50:14 AM User Logged In > admin
2023-08-13 00:50:15.001 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[@__userId_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-08-13 00:50:15.002 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.UserManagement.TokenResponseDto'.
2023-08-13 00:50:15.003 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 144.192ms
2023-08-13 00:50:15.003 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 00:50:15.003 +05:45 [INF] HTTP POST /FinanceCompany/login responded 200 in 146.8177 ms
2023-08-13 00:50:15.003 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73 - 200 - application/json;+charset=utf-8 176.7370ms
2023-08-13 00:51:37.961 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/ClientSetup/createNewClient multipart/form-data;+boundary=----WebKitFormBoundaryW0q0PEipAACmHjLP 8215
2023-08-13 00:51:37.962 +05:45 [INF] CORS policy execution successful.
2023-08-13 00:51:37.963 +05:45 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. For more details, see https://aka.ms/IdentityModel/issuer-validation. 
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-08-13 00:51:37.963 +05:45 [INF] UserToken was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII of type 'System.String' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. For more details, see https://aka.ms/IdentityModel/issuer-validation. 
2023-08-13 00:51:37.964 +05:45 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-08-13 00:51:37.967 +05:45 [INF] AuthenticationScheme: UserToken was challenged.
2023-08-13 00:51:37.967 +05:45 [INF] HTTP POST /ClientSetup/createNewClient responded 401 in 4.9977 ms
2023-08-13 00:51:37.967 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/ClientSetup/createNewClient multipart/form-data;+boundary=----WebKitFormBoundaryW0q0PEipAACmHjLP 8215 - 401 0 - 6.4145ms
2023-08-13 00:51:54.983 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/ClientSetup/createNewClient multipart/form-data;+boundary=----WebKitFormBoundary6aklf83mS9RgAifW 8215
2023-08-13 00:51:54.986 +05:45 [INF] CORS policy execution successful.
2023-08-13 00:51:54.986 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.ClientSetup.ClientSetupController.CreateClient (MicroFinance)'
2023-08-13 00:51:54.991 +05:45 [INF] Route matched with {action = "CreateClient", controller = "ClientSetup"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateClient(MicroFinance.Dtos.ClientSetup.CreateClientDto) on controller MicroFinance.Controllers.ClientSetup.ClientSetupController (MicroFinance).
2023-08-13 00:51:55.016 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 00:51:55.022 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 00:51:55.131 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 00:52:25.131 +05:45 [INF] 8/13/2023 12:52:25 AM Creating new Client Ashish Adhikari
2023-08-13 00:52:25.867 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='16'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[Id] = @__p_0
2023-08-13 00:52:27.453 +05:45 [INF] Executed DbCommand (34ms) [Parameters=[@__p_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Type]
FROM [ClientTypes] AS [c]
WHERE [c].[Id] = @__p_0
2023-08-13 00:52:28.107 +05:45 [INF] Executed DbCommand (32ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Code]
FROM [ClientGroups] AS [c]
WHERE [c].[Id] = @__p_0
2023-08-13 00:52:28.854 +05:45 [INF] Executed DbCommand (43ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Code]
FROM [ClientUnits] AS [c]
WHERE [c].[Id] = @__p_0
2023-08-13 00:53:06.587 +05:45 [INF] Executed DbCommand (45ms) [Parameters=[@p0='000' (Nullable = false) (Size = 4000), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3=NULL (DbType = DateTime2), @p4=NULL (Size = 4000), @p5=NULL (Size = 8000) (DbType = Binary), @p6=NULL (Size = 4000), @p7=NULL (DbType = Int32), @p8=NULL (Size = 4000), @p9=NULL (DbType = DateTime2), @p10=NULL (Size = 4000), @p11=NULL (Size = 4000), @p12=NULL (Size = 4000), @p13=NULL (Size = 4000), @p14=NULL (Size = 4000), @p15='Ashish' (Nullable = false) (Size = 4000), @p16=NULL (DbType = Int32), @p17=NULL (Size = 4000), @p18=NULL (Size = 4000), @p19='1' (Nullable = true), @p20=NULL (Size = 450), @p21=NULL (Size = 4000), @p22=NULL (Size = 4000), @p23='Adhikari' (Nullable = false) (Size = 4000), @p24=NULL (DbType = Int32), @p25=NULL (Size = 4000), @p26=NULL (Size = 4000), @p27=NULL (Size = 4000), @p28=NULL (Size = 4000), @p29=NULL (Size = 4000), @p30=NULL (Size = 4000), @p31=NULL (Size = 4000), @p32=NULL (Size = 4000), @p33=NULL (Size = 4000), @p34=NULL (Size = 4000), @p35=NULL (Size = 4000), @p36=NULL (Size = 4000), @p37=NULL (Size = 4000), @p38=NULL (Size = 4000), @p39=NULL (Size = 4000), @p40=NULL (Size = 8000) (DbType = Binary), @p41=NULL (Size = 4000), @p42=NULL (DbType = Int32), @p43='16' (Nullable = true), @p44=NULL (Size = 8000) (DbType = Binary), @p45=NULL (Size = 4000), @p46=NULL (DbType = Int32), @p47=NULL (Size = 4000), @p48=NULL (Size = 4000), @p49=NULL (Size = 4000), @p50=NULL (Size = 4000), @p51='2', @p52='1' (Nullable = true), @p53=NULL (Size = 4000), @p54=NULL (Size = 4000), @p55='admin' (Nullable = false) (Size = 4000), @p56='2023-08-13T00:52:15.6492360+05:45', @p57='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 4000), @p58='True', @p59='True', @p60=NULL (DbType = Boolean), @p61='True', @p62=NULL (DbType = Int32), @p63=NULL (DbType = Int32), @p64=NULL (Size = 4000), @p65=NULL (DbType = DateTime2), @p66=NULL (Size = 4000), @p67=NULL (Size = 4000), @p68=NULL (Size = 4000), @p69=NULL (Size = 4000), @p70=NULL (Size = 4000), @p71=NULL (Size = 4000), @p72=NULL (Size = 4000), @p73=NULL (Size = 4000), @p74=NULL (Size = 8000) (DbType = Binary), @p75=NULL (Size = 4000), @p76=NULL (DbType = Int32), @p77=NULL (Size = 4000), @p78=NULL (DbType = Int32), @p79=NULL (DbType = Int32), @p80=NULL (Size = 4000), @p81=NULL (Size = 4000), @p82=NULL (Size = 4000), @p83=NULL (Size = 4000), @p84=NULL (Size = 4000), @p85=NULL (Size = 4000), @p86='2023-02-02T00:00:00.0000000', @p87=NULL (DbType = Int32), @p88=NULL (Size = 4000), @p89=NULL (Size = 4000), @p90=NULL (Size = 4000), @p91=NULL (Size = 4000), @p92=NULL (Size = 4000), @p93=NULL (Size = 4000), @p94=NULL (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Clients] ([BranchCode], [ClientAccountPurposeNepali], [ClientCastCode], [ClientCitizenShipIssueDate], [ClientCitizenShipIssueDistrict], [ClientCitizenshipFileData], [ClientCitizenshipFileName], [ClientCitizenshipFileType], [ClientCitizenshipNumber], [ClientDateOfBirth], [ClientEducationStatus], [ClientEmail], [ClientFatherInLaw], [ClientFatherName], [ClientFatherNameNepali], [ClientFirstName], [ClientGenderCode], [ClientGrandFatherName], [ClientGrandFatherNameNepali], [ClientGroupId], [ClientId], [ClientIfMemberOfOtherParty], [ClientIncomeSource], [ClientLastName], [ClientMartialStatusCode], [ClientMiddleName], [ClientMobileNumber1], [ClientMobileNumber2], [ClientMotherInLaw], [ClientMotherName], [ClientMotherNameNepali], [ClientNameOfDaughters], [ClientNameOfSons], [ClientNationality], [ClientNationalityIdStatus], [ClientNepaliName], [ClientOccupation], [ClientOtherInfo], [ClientOtherInfo2], [ClientPanNumber], [ClientPhotoFileData], [ClientPhotoFileName], [ClientPhotoFileType], [ClientShareTypeInfoId], [ClientSignatureFileData], [ClientSignatureFileName], [ClientSignatureFileType], [ClientSpouseName], [ClientSpouseOccupation], [ClientTelephoneNumber1], [ClientTelephoneNumber2], [ClientTypeId], [ClientUnitId], [ClientVotingId], [ClientWebsite], [CreatedBy], [CreatedOn], [CreatorId], [IsActive], [IsKYMUpdated], [IsModified], [IsShareAllowed], [KYMTypeId], [ModificationCount], [ModifiedBy], [ModifiedOn], [ModifierId], [NomineeAddress], [NomineeCitizenshipNumber], [NomineeContactNumber], [NomineeIntroducedBy], [NomineeName], [NomineeNepaliName], [NomineeNepaliRelation], [NomineePhotoFileData], [NomineePhotoFileName], [NomineePhotoFileType], [NomineeRelation], [PermanentDistrictCode], [PermanentStateCode], [PermanentToleVillage], [PermanentToleVillageNepali], [PermanentVdcMunicipality], [PermanentVdcMunicipalityNepali], [PermanentWardNumber], [PermanentWardNumberNepali], [RegistrationDate], [TemporaryDistrictCode], [TemporaryStateCode], [TemporaryToleVillage], [TemporaryToleVillageNepali], [TemporaryVdcMunicipality], [TemporaryVdcMunicipalityNepali], [TemporaryWardNumber], [TemporaryWardNumberNepali])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94);
2023-08-13 00:53:08.581 +05:45 [INF] 8/13/2023 12:53:08 AM: New Client has been created by employee admin. Sending to assign unique client number...
2023-08-13 00:53:09.940 +05:45 [INF] Executed DbCommand (99ms) [Parameters=[@p1='1', @p0='00001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Clients] SET [ClientId] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2023-08-13 00:53:09.967 +05:45 [INF] 8/13/2023 12:53:09 AM: 00001 number has been assiged to newly created client
2023-08-13 00:53:14.474 +05:45 [INF] Executed DbCommand (155ms) [Parameters=[@p0='1', @p1='0' (Precision = 18) (Scale = 2), @p2='True', @p3='False'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [ShareAccounts] ([ClientId], [CurrentShareBalance], [IsActive], [IsClose])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2023-08-13 00:53:17.193 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 00:53:17.193 +05:45 [INF] Executed action MicroFinance.Controllers.ClientSetup.ClientSetupController.CreateClient (MicroFinance) in 82201.5193ms
2023-08-13 00:53:17.193 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.ClientSetup.ClientSetupController.CreateClient (MicroFinance)'
2023-08-13 00:53:17.193 +05:45 [INF] HTTP POST /ClientSetup/createNewClient responded 200 in 82206.9428 ms
2023-08-13 00:53:17.193 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/ClientSetup/createNewClient multipart/form-data;+boundary=----WebKitFormBoundary6aklf83mS9RgAifW 8215 - 200 - application/json;+charset=utf-8 82210.3705ms
2023-08-13 00:55:18.166 +05:45 [INF] Request starting HTTP/1.1 PUT http://localhost:5000/ClientSetup/updateClient multipart/form-data;+boundary=----WebKitFormBoundaryoTBvQJkJqk2rHW9f 8745
2023-08-13 00:55:18.166 +05:45 [INF] CORS policy execution successful.
2023-08-13 00:55:18.167 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.ClientSetup.ClientSetupController.UpdateClient (MicroFinance)'
2023-08-13 00:55:18.170 +05:45 [INF] Route matched with {action = "UpdateClient", controller = "ClientSetup"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] UpdateClient(MicroFinance.Dtos.ClientSetup.UpdateClientDto) on controller MicroFinance.Controllers.ClientSetup.ClientSetupController (MicroFinance).
2023-08-13 00:55:18.216 +05:45 [INF] Executed DbCommand (45ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 00:55:18.306 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 00:55:18.336 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 00:55:18.387 +05:45 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2023-08-13 00:55:18.388 +05:45 [INF] Executed action MicroFinance.Controllers.ClientSetup.ClientSetupController.UpdateClient (MicroFinance) in 218.5358ms
2023-08-13 00:55:18.389 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.ClientSetup.ClientSetupController.UpdateClient (MicroFinance)'
2023-08-13 00:55:18.389 +05:45 [INF] HTTP PUT /ClientSetup/updateClient responded 400 in 222.6684 ms
2023-08-13 00:55:18.390 +05:45 [INF] Request finished HTTP/1.1 PUT http://localhost:5000/ClientSetup/updateClient multipart/form-data;+boundary=----WebKitFormBoundaryoTBvQJkJqk2rHW9f 8745 - 400 - application/problem+json;+charset=utf-8 231.8595ms
2023-08-13 00:55:38.573 +05:45 [INF] Request starting HTTP/1.1 PUT http://localhost:5000/ClientSetup/updateClient multipart/form-data;+boundary=----WebKitFormBoundary71u36NUIfLIDADa0 8765
2023-08-13 00:55:38.598 +05:45 [INF] CORS policy execution successful.
2023-08-13 00:55:38.599 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.ClientSetup.ClientSetupController.UpdateClient (MicroFinance)'
2023-08-13 00:55:38.600 +05:45 [INF] Route matched with {action = "UpdateClient", controller = "ClientSetup"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] UpdateClient(MicroFinance.Dtos.ClientSetup.UpdateClientDto) on controller MicroFinance.Controllers.ClientSetup.ClientSetupController (MicroFinance).
2023-08-13 00:55:38.644 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 00:55:38.732 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 00:55:38.777 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 00:55:55.994 +05:45 [INF] Executed DbCommand (44ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [c0].[Id], [c0].[Type], [c1].[Id], [c1].[Code], [c2].[Id], [c2].[Code], [c3].[Id], [c3].[Type]
FROM [Clients] AS [c]
LEFT JOIN [Ledgers] AS [l] ON [c].[ClientShareTypeInfoId] = [l].[Id]
INNER JOIN [ClientTypes] AS [c0] ON [c].[ClientTypeId] = [c0].[Id]
LEFT JOIN [ClientGroups] AS [c1] ON [c].[ClientGroupId] = [c1].[Id]
LEFT JOIN [ClientUnits] AS [c2] ON [c].[ClientUnitId] = [c2].[Id]
LEFT JOIN [ClientKYMTypes] AS [c3] ON [c].[KYMTypeId] = [c3].[Id]
WHERE [c].[Id] = @__id_0
2023-08-13 00:56:04.460 +05:45 [INF] Executed DbCommand (27ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Type]
FROM [ClientTypes] AS [c]
WHERE [c].[Id] = @__p_0
2023-08-13 00:56:05.188 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='17'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[Id] = @__p_0
2023-08-13 00:56:38.730 +05:45 [INF] 8/13/2023 12:56:38 AM: Deactivating active client 00001 by employee admin
2023-08-13 00:56:45.087 +05:45 [INF] Executed DbCommand (50ms) [Parameters=[@p95='1', @p0='000' (Nullable = false) (Size = 4000), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3=NULL (DbType = DateTime2), @p4=NULL (Size = 4000), @p5=NULL (Size = 8000) (DbType = Binary), @p6=NULL (Size = 4000), @p7=NULL (DbType = Int32), @p8=NULL (Size = 4000), @p9=NULL (DbType = DateTime2), @p10=NULL (Size = 4000), @p11=NULL (Size = 4000), @p12=NULL (Size = 4000), @p13=NULL (Size = 4000), @p14=NULL (Size = 4000), @p15='Ashish' (Nullable = false) (Size = 4000), @p16=NULL (DbType = Int32), @p17=NULL (Size = 4000), @p18=NULL (Size = 4000), @p19='1' (Nullable = true), @p20='00001' (Size = 450), @p21=NULL (Size = 4000), @p22=NULL (Size = 4000), @p23='Adhikari' (Nullable = false) (Size = 4000), @p24=NULL (DbType = Int32), @p25=NULL (Size = 4000), @p26=NULL (Size = 4000), @p27=NULL (Size = 4000), @p28=NULL (Size = 4000), @p29=NULL (Size = 4000), @p30=NULL (Size = 4000), @p31=NULL (Size = 4000), @p32=NULL (Size = 4000), @p33=NULL (Size = 4000), @p34=NULL (Size = 4000), @p35=NULL (Size = 4000), @p36=NULL (Size = 4000), @p37=NULL (Size = 4000), @p38=NULL (Size = 4000), @p39=NULL (Size = 4000), @p40=NULL (Size = 8000) (DbType = Binary), @p41=NULL (Size = 4000), @p42=NULL (DbType = Int32), @p43='17' (Nullable = true), @p44=NULL (Size = 8000) (DbType = Binary), @p45=NULL (Size = 4000), @p46=NULL (DbType = Int32), @p47=NULL (Size = 4000), @p48=NULL (Size = 4000), @p49=NULL (Size = 4000), @p50=NULL (Size = 4000), @p51='1', @p52='1' (Nullable = true), @p53=NULL (Size = 4000), @p54=NULL (Size = 4000), @p55='admin' (Nullable = false) (Size = 4000), @p56='2023-08-13T00:52:15.6492360', @p57='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 4000), @p58='False', @p59='True', @p60='True' (Nullable = true), @p61='True', @p62=NULL (DbType = Int32), @p63='1' (Nullable = true), @p64='admin' (Size = 4000), @p65='2023-08-13T00:56:08.2022323+05:45' (Nullable = true), @p66='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 4000), @p67=NULL (Size = 4000), @p68=NULL (Size = 4000), @p69=NULL (Size = 4000), @p70=NULL (Size = 4000), @p71=NULL (Size = 4000), @p72=NULL (Size = 4000), @p73=NULL (Size = 4000), @p74=NULL (Size = 8000) (DbType = Binary), @p75=NULL (Size = 4000), @p76=NULL (DbType = Int32), @p77=NULL (Size = 4000), @p78=NULL (DbType = Int32), @p79=NULL (DbType = Int32), @p80=NULL (Size = 4000), @p81=NULL (Size = 4000), @p82=NULL (Size = 4000), @p83=NULL (Size = 4000), @p84=NULL (Size = 4000), @p85=NULL (Size = 4000), @p86='2022-02-02T00:00:00.0000000', @p87=NULL (DbType = Int32), @p88=NULL (Size = 4000), @p89=NULL (Size = 4000), @p90=NULL (Size = 4000), @p91=NULL (Size = 4000), @p92=NULL (Size = 4000), @p93=NULL (Size = 4000), @p94=NULL (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Clients] SET [BranchCode] = @p0, [ClientAccountPurposeNepali] = @p1, [ClientCastCode] = @p2, [ClientCitizenShipIssueDate] = @p3, [ClientCitizenShipIssueDistrict] = @p4, [ClientCitizenshipFileData] = @p5, [ClientCitizenshipFileName] = @p6, [ClientCitizenshipFileType] = @p7, [ClientCitizenshipNumber] = @p8, [ClientDateOfBirth] = @p9, [ClientEducationStatus] = @p10, [ClientEmail] = @p11, [ClientFatherInLaw] = @p12, [ClientFatherName] = @p13, [ClientFatherNameNepali] = @p14, [ClientFirstName] = @p15, [ClientGenderCode] = @p16, [ClientGrandFatherName] = @p17, [ClientGrandFatherNameNepali] = @p18, [ClientGroupId] = @p19, [ClientId] = @p20, [ClientIfMemberOfOtherParty] = @p21, [ClientIncomeSource] = @p22, [ClientLastName] = @p23, [ClientMartialStatusCode] = @p24, [ClientMiddleName] = @p25, [ClientMobileNumber1] = @p26, [ClientMobileNumber2] = @p27, [ClientMotherInLaw] = @p28, [ClientMotherName] = @p29, [ClientMotherNameNepali] = @p30, [ClientNameOfDaughters] = @p31, [ClientNameOfSons] = @p32, [ClientNationality] = @p33, [ClientNationalityIdStatus] = @p34, [ClientNepaliName] = @p35, [ClientOccupation] = @p36, [ClientOtherInfo] = @p37, [ClientOtherInfo2] = @p38, [ClientPanNumber] = @p39, [ClientPhotoFileData] = @p40, [ClientPhotoFileName] = @p41, [ClientPhotoFileType] = @p42, [ClientShareTypeInfoId] = @p43, [ClientSignatureFileData] = @p44, [ClientSignatureFileName] = @p45, [ClientSignatureFileType] = @p46, [ClientSpouseName] = @p47, [ClientSpouseOccupation] = @p48, [ClientTelephoneNumber1] = @p49, [ClientTelephoneNumber2] = @p50, [ClientTypeId] = @p51, [ClientUnitId] = @p52, [ClientVotingId] = @p53, [ClientWebsite] = @p54, [CreatedBy] = @p55, [CreatedOn] = @p56, [CreatorId] = @p57, [IsActive] = @p58, [IsKYMUpdated] = @p59, [IsModified] = @p60, [IsShareAllowed] = @p61, [KYMTypeId] = @p62, [ModificationCount] = @p63, [ModifiedBy] = @p64, [ModifiedOn] = @p65, [ModifierId] = @p66, [NomineeAddress] = @p67, [NomineeCitizenshipNumber] = @p68, [NomineeContactNumber] = @p69, [NomineeIntroducedBy] = @p70, [NomineeName] = @p71, [NomineeNepaliName] = @p72, [NomineeNepaliRelation] = @p73, [NomineePhotoFileData] = @p74, [NomineePhotoFileName] = @p75, [NomineePhotoFileType] = @p76, [NomineeRelation] = @p77, [PermanentDistrictCode] = @p78, [PermanentStateCode] = @p79, [PermanentToleVillage] = @p80, [PermanentToleVillageNepali] = @p81, [PermanentVdcMunicipality] = @p82, [PermanentVdcMunicipalityNepali] = @p83, [PermanentWardNumber] = @p84, [PermanentWardNumberNepali] = @p85, [RegistrationDate] = @p86, [TemporaryDistrictCode] = @p87, [TemporaryStateCode] = @p88, [TemporaryToleVillage] = @p89, [TemporaryToleVillageNepali] = @p90, [TemporaryVdcMunicipality] = @p91, [TemporaryVdcMunicipalityNepali] = @p92, [TemporaryWardNumber] = @p93, [TemporaryWardNumberNepali] = @p94
OUTPUT 1
WHERE [Id] = @p95;
2023-08-13 00:56:53.633 +05:45 [INF] Executed DbCommand (26ms) [Parameters=[@__updateClient_Id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [s].[Id], [s].[ClientId], [s].[CurrentShareBalance], [s].[IsActive], [s].[IsClose]
FROM [ShareAccounts] AS [s]
WHERE [s].[ClientId] = @__updateClient_Id_0
2023-08-13 00:57:18.990 +05:45 [INF] 8/13/2023 12:57:18 AM: Share Account of client with Id '1 is opening...
2023-08-13 00:57:18.990 +05:45 [INF] 8/13/2023 12:57:18 AM: Share Account of client with Id '1 is deactivating...
2023-08-13 00:57:19.157 +05:45 [INF] Executed DbCommand (67ms) [Parameters=[@p1='1', @p0='False'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [ShareAccounts] SET [IsActive] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2023-08-13 00:57:27.422 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 00:57:27.423 +05:45 [INF] Executed action MicroFinance.Controllers.ClientSetup.ClientSetupController.UpdateClient (MicroFinance) in 108823.0228ms
2023-08-13 00:57:27.423 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.ClientSetup.ClientSetupController.UpdateClient (MicroFinance)'
2023-08-13 00:57:27.423 +05:45 [INF] HTTP PUT /ClientSetup/updateClient responded 200 in 108824.3080 ms
2023-08-13 00:57:27.423 +05:45 [INF] Request finished HTTP/1.1 PUT http://localhost:5000/ClientSetup/updateClient multipart/form-data;+boundary=----WebKitFormBoundary71u36NUIfLIDADa0 8765 - 200 - application/json;+charset=utf-8 108853.2893ms
2023-08-13 00:57:59.907 +05:45 [INF] Request starting HTTP/1.1 PUT http://localhost:5000/ClientSetup/updateClient multipart/form-data;+boundary=----WebKitFormBoundarygHkB8QmFIuB2JhrM 8763
2023-08-13 00:57:59.954 +05:45 [INF] CORS policy execution successful.
2023-08-13 00:57:59.959 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.ClientSetup.ClientSetupController.UpdateClient (MicroFinance)'
2023-08-13 00:57:59.959 +05:45 [INF] Route matched with {action = "UpdateClient", controller = "ClientSetup"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] UpdateClient(MicroFinance.Dtos.ClientSetup.UpdateClientDto) on controller MicroFinance.Controllers.ClientSetup.ClientSetupController (MicroFinance).
2023-08-13 00:58:00.006 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 00:58:00.079 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 00:58:00.086 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 00:58:06.866 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [c0].[Id], [c0].[Type], [c1].[Id], [c1].[Code], [c2].[Id], [c2].[Code], [c3].[Id], [c3].[Type]
FROM [Clients] AS [c]
LEFT JOIN [Ledgers] AS [l] ON [c].[ClientShareTypeInfoId] = [l].[Id]
INNER JOIN [ClientTypes] AS [c0] ON [c].[ClientTypeId] = [c0].[Id]
LEFT JOIN [ClientGroups] AS [c1] ON [c].[ClientGroupId] = [c1].[Id]
LEFT JOIN [ClientUnits] AS [c2] ON [c].[ClientUnitId] = [c2].[Id]
LEFT JOIN [ClientKYMTypes] AS [c3] ON [c].[KYMTypeId] = [c3].[Id]
WHERE [c].[Id] = @__id_0
2023-08-13 00:58:29.642 +05:45 [INF] 8/13/2023 12:58:29 AM: Activating inactive client 00001 by employee admin
2023-08-13 00:58:36.377 +05:45 [INF] Executed DbCommand (44ms) [Parameters=[@p95='1', @p0='000' (Nullable = false) (Size = 4000), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3=NULL (DbType = DateTime2), @p4=NULL (Size = 4000), @p5=NULL (Size = 8000) (DbType = Binary), @p6=NULL (Size = 4000), @p7=NULL (DbType = Int32), @p8=NULL (Size = 4000), @p9=NULL (DbType = DateTime2), @p10=NULL (Size = 4000), @p11=NULL (Size = 4000), @p12=NULL (Size = 4000), @p13=NULL (Size = 4000), @p14=NULL (Size = 4000), @p15='Ashish' (Nullable = false) (Size = 4000), @p16=NULL (DbType = Int32), @p17=NULL (Size = 4000), @p18=NULL (Size = 4000), @p19='1' (Nullable = true), @p20='00001' (Size = 450), @p21=NULL (Size = 4000), @p22=NULL (Size = 4000), @p23='Adhikari' (Nullable = false) (Size = 4000), @p24=NULL (DbType = Int32), @p25=NULL (Size = 4000), @p26=NULL (Size = 4000), @p27=NULL (Size = 4000), @p28=NULL (Size = 4000), @p29=NULL (Size = 4000), @p30=NULL (Size = 4000), @p31=NULL (Size = 4000), @p32=NULL (Size = 4000), @p33=NULL (Size = 4000), @p34=NULL (Size = 4000), @p35=NULL (Size = 4000), @p36=NULL (Size = 4000), @p37=NULL (Size = 4000), @p38=NULL (Size = 4000), @p39=NULL (Size = 4000), @p40=NULL (Size = 8000) (DbType = Binary), @p41=NULL (Size = 4000), @p42=NULL (DbType = Int32), @p43=NULL (DbType = Int32), @p44=NULL (Size = 8000) (DbType = Binary), @p45=NULL (Size = 4000), @p46=NULL (DbType = Int32), @p47=NULL (Size = 4000), @p48=NULL (Size = 4000), @p49=NULL (Size = 4000), @p50=NULL (Size = 4000), @p51='1', @p52='1' (Nullable = true), @p53=NULL (Size = 4000), @p54=NULL (Size = 4000), @p55='admin' (Nullable = false) (Size = 4000), @p56='2023-08-13T00:52:15.6492360', @p57='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 4000), @p58='True', @p59='True', @p60='True' (Nullable = true), @p61='False', @p62=NULL (DbType = Int32), @p63='1' (Nullable = true), @p64='admin' (Size = 4000), @p65='2023-08-13T00:58:18.6731423+05:45' (Nullable = true), @p66='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 4000), @p67=NULL (Size = 4000), @p68=NULL (Size = 4000), @p69=NULL (Size = 4000), @p70=NULL (Size = 4000), @p71=NULL (Size = 4000), @p72=NULL (Size = 4000), @p73=NULL (Size = 4000), @p74=NULL (Size = 8000) (DbType = Binary), @p75=NULL (Size = 4000), @p76=NULL (DbType = Int32), @p77=NULL (Size = 4000), @p78=NULL (DbType = Int32), @p79=NULL (DbType = Int32), @p80=NULL (Size = 4000), @p81=NULL (Size = 4000), @p82=NULL (Size = 4000), @p83=NULL (Size = 4000), @p84=NULL (Size = 4000), @p85=NULL (Size = 4000), @p86='2022-02-02T00:00:00.0000000', @p87=NULL (DbType = Int32), @p88=NULL (Size = 4000), @p89=NULL (Size = 4000), @p90=NULL (Size = 4000), @p91=NULL (Size = 4000), @p92=NULL (Size = 4000), @p93=NULL (Size = 4000), @p94=NULL (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Clients] SET [BranchCode] = @p0, [ClientAccountPurposeNepali] = @p1, [ClientCastCode] = @p2, [ClientCitizenShipIssueDate] = @p3, [ClientCitizenShipIssueDistrict] = @p4, [ClientCitizenshipFileData] = @p5, [ClientCitizenshipFileName] = @p6, [ClientCitizenshipFileType] = @p7, [ClientCitizenshipNumber] = @p8, [ClientDateOfBirth] = @p9, [ClientEducationStatus] = @p10, [ClientEmail] = @p11, [ClientFatherInLaw] = @p12, [ClientFatherName] = @p13, [ClientFatherNameNepali] = @p14, [ClientFirstName] = @p15, [ClientGenderCode] = @p16, [ClientGrandFatherName] = @p17, [ClientGrandFatherNameNepali] = @p18, [ClientGroupId] = @p19, [ClientId] = @p20, [ClientIfMemberOfOtherParty] = @p21, [ClientIncomeSource] = @p22, [ClientLastName] = @p23, [ClientMartialStatusCode] = @p24, [ClientMiddleName] = @p25, [ClientMobileNumber1] = @p26, [ClientMobileNumber2] = @p27, [ClientMotherInLaw] = @p28, [ClientMotherName] = @p29, [ClientMotherNameNepali] = @p30, [ClientNameOfDaughters] = @p31, [ClientNameOfSons] = @p32, [ClientNationality] = @p33, [ClientNationalityIdStatus] = @p34, [ClientNepaliName] = @p35, [ClientOccupation] = @p36, [ClientOtherInfo] = @p37, [ClientOtherInfo2] = @p38, [ClientPanNumber] = @p39, [ClientPhotoFileData] = @p40, [ClientPhotoFileName] = @p41, [ClientPhotoFileType] = @p42, [ClientShareTypeInfoId] = @p43, [ClientSignatureFileData] = @p44, [ClientSignatureFileName] = @p45, [ClientSignatureFileType] = @p46, [ClientSpouseName] = @p47, [ClientSpouseOccupation] = @p48, [ClientTelephoneNumber1] = @p49, [ClientTelephoneNumber2] = @p50, [ClientTypeId] = @p51, [ClientUnitId] = @p52, [ClientVotingId] = @p53, [ClientWebsite] = @p54, [CreatedBy] = @p55, [CreatedOn] = @p56, [CreatorId] = @p57, [IsActive] = @p58, [IsKYMUpdated] = @p59, [IsModified] = @p60, [IsShareAllowed] = @p61, [KYMTypeId] = @p62, [ModificationCount] = @p63, [ModifiedBy] = @p64, [ModifiedOn] = @p65, [ModifierId] = @p66, [NomineeAddress] = @p67, [NomineeCitizenshipNumber] = @p68, [NomineeContactNumber] = @p69, [NomineeIntroducedBy] = @p70, [NomineeName] = @p71, [NomineeNepaliName] = @p72, [NomineeNepaliRelation] = @p73, [NomineePhotoFileData] = @p74, [NomineePhotoFileName] = @p75, [NomineePhotoFileType] = @p76, [NomineeRelation] = @p77, [PermanentDistrictCode] = @p78, [PermanentStateCode] = @p79, [PermanentToleVillage] = @p80, [PermanentToleVillageNepali] = @p81, [PermanentVdcMunicipality] = @p82, [PermanentVdcMunicipalityNepali] = @p83, [PermanentWardNumber] = @p84, [PermanentWardNumberNepali] = @p85, [RegistrationDate] = @p86, [TemporaryDistrictCode] = @p87, [TemporaryStateCode] = @p88, [TemporaryToleVillage] = @p89, [TemporaryToleVillageNepali] = @p90, [TemporaryVdcMunicipality] = @p91, [TemporaryVdcMunicipalityNepali] = @p92, [TemporaryWardNumber] = @p93, [TemporaryWardNumberNepali] = @p94
OUTPUT 1
WHERE [Id] = @p95;
2023-08-13 00:58:41.759 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__updateClient_Id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [s].[Id], [s].[ClientId], [s].[CurrentShareBalance], [s].[IsActive], [s].[IsClose]
FROM [ShareAccounts] AS [s]
WHERE [s].[ClientId] = @__updateClient_Id_0
2023-08-13 00:58:55.526 +05:45 [INF] 8/13/2023 12:58:55 AM: Share Account of client with Id '1 is closing...
2023-08-13 00:58:55.526 +05:45 [INF] 8/13/2023 12:58:55 AM: Share Account of client with Id '1 is deactivating...
2023-08-13 00:58:55.613 +05:45 [INF] Executed DbCommand (66ms) [Parameters=[@p1='1', @p0='True'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [ShareAccounts] SET [IsClose] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2023-08-13 00:59:00.084 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 00:59:00.084 +05:45 [INF] Executed action MicroFinance.Controllers.ClientSetup.ClientSetupController.UpdateClient (MicroFinance) in 60124.8429ms
2023-08-13 00:59:00.084 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.ClientSetup.ClientSetupController.UpdateClient (MicroFinance)'
2023-08-13 00:59:00.084 +05:45 [INF] HTTP PUT /ClientSetup/updateClient responded 200 in 60125.7889 ms
2023-08-13 00:59:00.085 +05:45 [INF] Request finished HTTP/1.1 PUT http://localhost:5000/ClientSetup/updateClient multipart/form-data;+boundary=----WebKitFormBoundarygHkB8QmFIuB2JhrM 8763 - 200 - application/json;+charset=utf-8 60177.2257ms
2023-08-13 00:59:32.480 +05:45 [INF] Request starting HTTP/1.1 PUT http://localhost:5000/ClientSetup/updateClient multipart/form-data;+boundary=----WebKitFormBoundaryI6SOMxOeC0BBFINV 8764
2023-08-13 00:59:32.528 +05:45 [INF] CORS policy execution successful.
2023-08-13 00:59:32.529 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.ClientSetup.ClientSetupController.UpdateClient (MicroFinance)'
2023-08-13 00:59:32.529 +05:45 [INF] Route matched with {action = "UpdateClient", controller = "ClientSetup"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] UpdateClient(MicroFinance.Dtos.ClientSetup.UpdateClientDto) on controller MicroFinance.Controllers.ClientSetup.ClientSetupController (MicroFinance).
2023-08-13 00:59:32.575 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 00:59:32.665 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 00:59:32.689 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 00:59:39.742 +05:45 [INF] Executed DbCommand (25ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [c0].[Id], [c0].[Type], [c1].[Id], [c1].[Code], [c2].[Id], [c2].[Code], [c3].[Id], [c3].[Type]
FROM [Clients] AS [c]
LEFT JOIN [Ledgers] AS [l] ON [c].[ClientShareTypeInfoId] = [l].[Id]
INNER JOIN [ClientTypes] AS [c0] ON [c].[ClientTypeId] = [c0].[Id]
LEFT JOIN [ClientGroups] AS [c1] ON [c].[ClientGroupId] = [c1].[Id]
LEFT JOIN [ClientUnits] AS [c2] ON [c].[ClientUnitId] = [c2].[Id]
LEFT JOIN [ClientKYMTypes] AS [c3] ON [c].[KYMTypeId] = [c3].[Id]
WHERE [c].[Id] = @__id_0
2023-08-13 00:59:46.666 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='16'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[Id] = @__p_0
2023-08-13 01:00:03.940 +05:45 [INF] Executed DbCommand (31ms) [Parameters=[@p95='1', @p0='000' (Nullable = false) (Size = 4000), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3=NULL (DbType = DateTime2), @p4=NULL (Size = 4000), @p5=NULL (Size = 8000) (DbType = Binary), @p6=NULL (Size = 4000), @p7=NULL (DbType = Int32), @p8=NULL (Size = 4000), @p9=NULL (DbType = DateTime2), @p10=NULL (Size = 4000), @p11=NULL (Size = 4000), @p12=NULL (Size = 4000), @p13=NULL (Size = 4000), @p14=NULL (Size = 4000), @p15='Ashish' (Nullable = false) (Size = 4000), @p16=NULL (DbType = Int32), @p17=NULL (Size = 4000), @p18=NULL (Size = 4000), @p19='1' (Nullable = true), @p20='00001' (Size = 450), @p21=NULL (Size = 4000), @p22=NULL (Size = 4000), @p23='Adhikari' (Nullable = false) (Size = 4000), @p24=NULL (DbType = Int32), @p25=NULL (Size = 4000), @p26=NULL (Size = 4000), @p27=NULL (Size = 4000), @p28=NULL (Size = 4000), @p29=NULL (Size = 4000), @p30=NULL (Size = 4000), @p31=NULL (Size = 4000), @p32=NULL (Size = 4000), @p33=NULL (Size = 4000), @p34=NULL (Size = 4000), @p35=NULL (Size = 4000), @p36=NULL (Size = 4000), @p37=NULL (Size = 4000), @p38=NULL (Size = 4000), @p39=NULL (Size = 4000), @p40=NULL (Size = 8000) (DbType = Binary), @p41=NULL (Size = 4000), @p42=NULL (DbType = Int32), @p43='16' (Nullable = true), @p44=NULL (Size = 8000) (DbType = Binary), @p45=NULL (Size = 4000), @p46=NULL (DbType = Int32), @p47=NULL (Size = 4000), @p48=NULL (Size = 4000), @p49=NULL (Size = 4000), @p50=NULL (Size = 4000), @p51='1', @p52='1' (Nullable = true), @p53=NULL (Size = 4000), @p54=NULL (Size = 4000), @p55='admin' (Nullable = false) (Size = 4000), @p56='2023-08-13T00:52:15.6492360', @p57='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 4000), @p58='True', @p59='True', @p60='True' (Nullable = true), @p61='True', @p62=NULL (DbType = Int32), @p63='1' (Nullable = true), @p64='admin' (Size = 4000), @p65='2023-08-13T00:59:49.7949706+05:45' (Nullable = true), @p66='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 4000), @p67=NULL (Size = 4000), @p68=NULL (Size = 4000), @p69=NULL (Size = 4000), @p70=NULL (Size = 4000), @p71=NULL (Size = 4000), @p72=NULL (Size = 4000), @p73=NULL (Size = 4000), @p74=NULL (Size = 8000) (DbType = Binary), @p75=NULL (Size = 4000), @p76=NULL (DbType = Int32), @p77=NULL (Size = 4000), @p78=NULL (DbType = Int32), @p79=NULL (DbType = Int32), @p80=NULL (Size = 4000), @p81=NULL (Size = 4000), @p82=NULL (Size = 4000), @p83=NULL (Size = 4000), @p84=NULL (Size = 4000), @p85=NULL (Size = 4000), @p86='2022-02-02T00:00:00.0000000', @p87=NULL (DbType = Int32), @p88=NULL (Size = 4000), @p89=NULL (Size = 4000), @p90=NULL (Size = 4000), @p91=NULL (Size = 4000), @p92=NULL (Size = 4000), @p93=NULL (Size = 4000), @p94=NULL (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Clients] SET [BranchCode] = @p0, [ClientAccountPurposeNepali] = @p1, [ClientCastCode] = @p2, [ClientCitizenShipIssueDate] = @p3, [ClientCitizenShipIssueDistrict] = @p4, [ClientCitizenshipFileData] = @p5, [ClientCitizenshipFileName] = @p6, [ClientCitizenshipFileType] = @p7, [ClientCitizenshipNumber] = @p8, [ClientDateOfBirth] = @p9, [ClientEducationStatus] = @p10, [ClientEmail] = @p11, [ClientFatherInLaw] = @p12, [ClientFatherName] = @p13, [ClientFatherNameNepali] = @p14, [ClientFirstName] = @p15, [ClientGenderCode] = @p16, [ClientGrandFatherName] = @p17, [ClientGrandFatherNameNepali] = @p18, [ClientGroupId] = @p19, [ClientId] = @p20, [ClientIfMemberOfOtherParty] = @p21, [ClientIncomeSource] = @p22, [ClientLastName] = @p23, [ClientMartialStatusCode] = @p24, [ClientMiddleName] = @p25, [ClientMobileNumber1] = @p26, [ClientMobileNumber2] = @p27, [ClientMotherInLaw] = @p28, [ClientMotherName] = @p29, [ClientMotherNameNepali] = @p30, [ClientNameOfDaughters] = @p31, [ClientNameOfSons] = @p32, [ClientNationality] = @p33, [ClientNationalityIdStatus] = @p34, [ClientNepaliName] = @p35, [ClientOccupation] = @p36, [ClientOtherInfo] = @p37, [ClientOtherInfo2] = @p38, [ClientPanNumber] = @p39, [ClientPhotoFileData] = @p40, [ClientPhotoFileName] = @p41, [ClientPhotoFileType] = @p42, [ClientShareTypeInfoId] = @p43, [ClientSignatureFileData] = @p44, [ClientSignatureFileName] = @p45, [ClientSignatureFileType] = @p46, [ClientSpouseName] = @p47, [ClientSpouseOccupation] = @p48, [ClientTelephoneNumber1] = @p49, [ClientTelephoneNumber2] = @p50, [ClientTypeId] = @p51, [ClientUnitId] = @p52, [ClientVotingId] = @p53, [ClientWebsite] = @p54, [CreatedBy] = @p55, [CreatedOn] = @p56, [CreatorId] = @p57, [IsActive] = @p58, [IsKYMUpdated] = @p59, [IsModified] = @p60, [IsShareAllowed] = @p61, [KYMTypeId] = @p62, [ModificationCount] = @p63, [ModifiedBy] = @p64, [ModifiedOn] = @p65, [ModifierId] = @p66, [NomineeAddress] = @p67, [NomineeCitizenshipNumber] = @p68, [NomineeContactNumber] = @p69, [NomineeIntroducedBy] = @p70, [NomineeName] = @p71, [NomineeNepaliName] = @p72, [NomineeNepaliRelation] = @p73, [NomineePhotoFileData] = @p74, [NomineePhotoFileName] = @p75, [NomineePhotoFileType] = @p76, [NomineeRelation] = @p77, [PermanentDistrictCode] = @p78, [PermanentStateCode] = @p79, [PermanentToleVillage] = @p80, [PermanentToleVillageNepali] = @p81, [PermanentVdcMunicipality] = @p82, [PermanentVdcMunicipalityNepali] = @p83, [PermanentWardNumber] = @p84, [PermanentWardNumberNepali] = @p85, [RegistrationDate] = @p86, [TemporaryDistrictCode] = @p87, [TemporaryStateCode] = @p88, [TemporaryToleVillage] = @p89, [TemporaryToleVillageNepali] = @p90, [TemporaryVdcMunicipality] = @p91, [TemporaryVdcMunicipalityNepali] = @p92, [TemporaryWardNumber] = @p93, [TemporaryWardNumberNepali] = @p94
OUTPUT 1
WHERE [Id] = @p95;
2023-08-13 01:00:40.314 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[@__updateClient_Id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [s].[Id], [s].[ClientId], [s].[CurrentShareBalance], [s].[IsActive], [s].[IsClose]
FROM [ShareAccounts] AS [s]
WHERE [s].[ClientId] = @__updateClient_Id_0
2023-08-13 01:00:49.227 +05:45 [INF] 8/13/2023 1:00:49 AM: Share Account of client with Id '1 is opening...
2023-08-13 01:00:49.227 +05:45 [INF] 8/13/2023 1:00:49 AM: Share Account of client with Id '1 is activating...
2023-08-13 01:00:49.376 +05:45 [INF] Executed DbCommand (72ms) [Parameters=[@p2='1', @p0='True', @p1='False'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [ShareAccounts] SET [IsActive] = @p0, [IsClose] = @p1
OUTPUT 1
WHERE [Id] = @p2;
2023-08-13 01:00:51.073 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 01:00:51.073 +05:45 [INF] Executed action MicroFinance.Controllers.ClientSetup.ClientSetupController.UpdateClient (MicroFinance) in 78543.2619ms
2023-08-13 01:00:51.073 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.ClientSetup.ClientSetupController.UpdateClient (MicroFinance)'
2023-08-13 01:00:51.073 +05:45 [INF] HTTP PUT /ClientSetup/updateClient responded 200 in 78544.5998 ms
2023-08-13 01:00:51.073 +05:45 [INF] Request finished HTTP/1.1 PUT http://localhost:5000/ClientSetup/updateClient multipart/form-data;+boundary=----WebKitFormBoundaryI6SOMxOeC0BBFINV 8764 - 200 - application/json;+charset=utf-8 78614.9471ms
2023-08-13 01:01:11.216 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/ClientSetup/getAllClients - -
2023-08-13 01:01:11.241 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.ClientSetup.ClientSetupController.GetAllClients (MicroFinance)'
2023-08-13 01:01:11.245 +05:45 [INF] Route matched with {action = "GetAllClients", controller = "ClientSetup"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[MicroFinance.Dtos.ClientSetup.ClientDto]]] GetAllClients() on controller MicroFinance.Controllers.ClientSetup.ClientSetupController (MicroFinance).
2023-08-13 01:01:11.309 +05:45 [INF] Executed DbCommand (34ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:01:11.342 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:01:11.385 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:01:11.447 +05:45 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [c0].[Id], [c0].[Type], [c1].[Id], [c1].[Code], [c2].[Id], [c2].[Code], [c3].[Id], [c3].[Type]
FROM [Clients] AS [c]
LEFT JOIN [Ledgers] AS [l] ON [c].[ClientShareTypeInfoId] = [l].[Id]
INNER JOIN [ClientTypes] AS [c0] ON [c].[ClientTypeId] = [c0].[Id]
LEFT JOIN [ClientGroups] AS [c1] ON [c].[ClientGroupId] = [c1].[Id]
LEFT JOIN [ClientUnits] AS [c2] ON [c].[ClientUnitId] = [c2].[Id]
LEFT JOIN [ClientKYMTypes] AS [c3] ON [c].[KYMTypeId] = [c3].[Id]
2023-08-13 01:01:11.477 +05:45 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MicroFinance.Dtos.ClientSetup.ClientDto, MicroFinance, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-08-13 01:01:11.550 +05:45 [INF] Executed action MicroFinance.Controllers.ClientSetup.ClientSetupController.GetAllClients (MicroFinance) in 304.4963ms
2023-08-13 01:01:11.550 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.ClientSetup.ClientSetupController.GetAllClients (MicroFinance)'
2023-08-13 01:01:11.551 +05:45 [INF] HTTP GET /ClientSetup/getAllClients responded 200 in 309.5807 ms
2023-08-13 01:01:11.551 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/ClientSetup/getAllClients - - - 200 - application/json;+charset=utf-8 335.0652ms
2023-08-13 01:04:34.759 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1639
2023-08-13 01:04:34.808 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:04:34.809 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:04:34.814 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:04:34.838 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:04:34.886 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:04:34.894 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:04:34.984 +05:45 [INF] Executed DbCommand (15ms) [Parameters=[@p0='admin' (Nullable = false) (Size = 4000), @p1='2023-08-13T01:04:34.9360056+05:45', @p2='True', @p3='True' (Nullable = true), @p4=NULL (Size = 4000), @p5=NULL (DbType = DateTime2), @p6='1', @p7='Baishakh' (Nullable = false) (Size = 4000), @p8='32', @p9='1', @p10='2023', @p11='admin' (Nullable = false) (Size = 4000), @p12='2023-08-13T01:04:34.9361314+05:45', @p13='False', @p14='False' (Nullable = true), @p15=NULL (Size = 4000), @p16=NULL (DbType = DateTime2), @p17='2', @p18='Jestha' (Nullable = false) (Size = 4000), @p19='31', @p20='1', @p21='2023', @p22='admin' (Nullable = false) (Size = 4000), @p23='2023-08-13T01:04:34.9361332+05:45', @p24='False', @p25='False' (Nullable = true), @p26=NULL (Size = 4000), @p27=NULL (DbType = DateTime2), @p28='3', @p29='Ashadh' (Nullable = false) (Size = 4000), @p30='32', @p31='1', @p32='2023', @p33='admin' (Nullable = false) (Size = 4000), @p34='2023-08-13T01:04:34.9361341+05:45', @p35='False', @p36='False' (Nullable = true), @p37=NULL (Size = 4000), @p38=NULL (DbType = DateTime2), @p39='4', @p40='Shrawan' (Nullable = false) (Size = 4000), @p41='31', @p42='1', @p43='2023', @p44='admin' (Nullable = false) (Size = 4000), @p45='2023-08-13T01:04:34.9361348+05:45', @p46='False', @p47='False' (Nullable = true), @p48=NULL (Size = 4000), @p49=NULL (DbType = DateTime2), @p50='5', @p51='Bhadra' (Nullable = false) (Size = 4000), @p52='31', @p53='1', @p54='2023', @p55='admin' (Nullable = false) (Size = 4000), @p56='2023-08-13T01:04:34.9361367+05:45', @p57='False', @p58='False' (Nullable = true), @p59=NULL (Size = 4000), @p60=NULL (DbType = DateTime2), @p61='6', @p62='Ashwin' (Nullable = false) (Size = 4000), @p63='30', @p64='1', @p65='2023', @p66='admin' (Nullable = false) (Size = 4000), @p67='2023-08-13T01:04:34.9361373+05:45', @p68='False', @p69='False' (Nullable = true), @p70=NULL (Size = 4000), @p71=NULL (DbType = DateTime2), @p72='7', @p73='Kartik' (Nullable = false) (Size = 4000), @p74='29', @p75='1', @p76='2023', @p77='admin' (Nullable = false) (Size = 4000), @p78='2023-08-13T01:04:34.9361380+05:45', @p79='False', @p80='False' (Nullable = true), @p81=NULL (Size = 4000), @p82=NULL (DbType = DateTime2), @p83='8', @p84='Mangsir' (Nullable = false) (Size = 4000), @p85='30', @p86='1', @p87='2023', @p88='admin' (Nullable = false) (Size = 4000), @p89='2023-08-13T01:04:34.9361387+05:45', @p90='False', @p91='False' (Nullable = true), @p92=NULL (Size = 4000), @p93=NULL (DbType = DateTime2), @p94='9', @p95='Poush' (Nullable = false) (Size = 4000), @p96='30', @p97='1', @p98='2023', @p99='admin' (Nullable = false) (Size = 4000), @p100='2023-08-13T01:04:34.9361395+05:45', @p101='False', @p102='False' (Nullable = true), @p103=NULL (Size = 4000), @p104=NULL (DbType = DateTime2), @p105='10', @p106='Magh' (Nullable = false) (Size = 4000), @p107='30', @p108='1', @p109='2023', @p110='admin' (Nullable = false) (Size = 4000), @p111='2023-08-13T01:04:34.9361402+05:45', @p112='False', @p113='False' (Nullable = true), @p114=NULL (Size = 4000), @p115=NULL (DbType = DateTime2), @p116='11', @p117='Falgun' (Nullable = false) (Size = 4000), @p118='29', @p119='1', @p120='2023', @p121='admin' (Nullable = false) (Size = 4000), @p122='2023-08-13T01:04:34.9361408+05:45', @p123='False', @p124='False' (Nullable = true), @p125=NULL (Size = 4000), @p126=NULL (DbType = DateTime2), @p127='12', @p128='Chaitra' (Nullable = false) (Size = 4000), @p129='30', @p130='1', @p131='2023'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Calendars] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, 0),
(@p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, 1),
(@p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, 2),
(@p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, 3),
(@p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, 4),
(@p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, 5),
(@p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, 6),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, 7),
(@p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, 8),
(@p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, 9),
(@p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 10),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, 11)) AS i ([CreatedBy], [CreatedOn], [IsActive], [IsLocked], [ModifiedBy], [ModifiedOn], [Month], [MonthName], [NumberOfDay], [RunningDay], [Year], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CreatedBy], [CreatedOn], [IsActive], [IsLocked], [ModifiedBy], [ModifiedOn], [Month], [MonthName], [NumberOfDay], [RunningDay], [Year])
VALUES (i.[CreatedBy], i.[CreatedOn], i.[IsActive], i.[IsLocked], i.[ModifiedBy], i.[ModifiedOn], i.[Month], i.[MonthName], i.[NumberOfDay], i.[RunningDay], i.[Year])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 01:04:34.989 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 01:04:34.989 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 174.8399ms
2023-08-13 01:04:34.989 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:04:34.989 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 200 in 180.9942 ms
2023-08-13 01:04:34.990 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1639 - 200 - application/json;+charset=utf-8 230.1757ms
2023-08-13 01:06:12.480 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1639
2023-08-13 01:06:12.511 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:06:12.511 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:06:12.512 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:06:12.536 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:06:12.604 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:06:12.610 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:08:13.388 +05:45 [INF] Executed DbCommand (90ms) [Parameters=[@p0='admin' (Nullable = false) (Size = 4000), @p1='2023-08-13T01:07:54.1457506+05:45', @p2='True', @p3='True' (Nullable = true), @p4=NULL (Size = 4000), @p5=NULL (DbType = DateTime2), @p6='1', @p7='Baishakh' (Nullable = false) (Size = 4000), @p8='32', @p9='1', @p10='2080', @p11='admin' (Nullable = false) (Size = 4000), @p12='2023-08-13T01:08:02.7986994+05:45', @p13='False', @p14='False' (Nullable = true), @p15=NULL (Size = 4000), @p16=NULL (DbType = DateTime2), @p17='2', @p18='Jestha' (Nullable = false) (Size = 4000), @p19='31', @p20='1', @p21='2080', @p22='admin' (Nullable = false) (Size = 4000), @p23='2023-08-13T01:08:02.7987053+05:45', @p24='False', @p25='False' (Nullable = true), @p26=NULL (Size = 4000), @p27=NULL (DbType = DateTime2), @p28='3', @p29='Ashadh' (Nullable = false) (Size = 4000), @p30='31', @p31='1', @p32='2080', @p33='admin' (Nullable = false) (Size = 4000), @p34='2023-08-13T01:08:02.7987078+05:45', @p35='False', @p36='False' (Nullable = true), @p37=NULL (Size = 4000), @p38=NULL (DbType = DateTime2), @p39='4', @p40='Shrawan' (Nullable = false) (Size = 4000), @p41='31', @p42='1', @p43='2080', @p44='admin' (Nullable = false) (Size = 4000), @p45='2023-08-13T01:08:02.7987103+05:45', @p46='False', @p47='False' (Nullable = true), @p48=NULL (Size = 4000), @p49=NULL (DbType = DateTime2), @p50='5', @p51='Bhadra' (Nullable = false) (Size = 4000), @p52='31', @p53='1', @p54='2080', @p55='admin' (Nullable = false) (Size = 4000), @p56='2023-08-13T01:08:02.7987170+05:45', @p57='False', @p58='False' (Nullable = true), @p59=NULL (Size = 4000), @p60=NULL (DbType = DateTime2), @p61='6', @p62='Ashwin' (Nullable = false) (Size = 4000), @p63='30', @p64='1', @p65='2080', @p66='admin' (Nullable = false) (Size = 4000), @p67='2023-08-13T01:08:02.7987195+05:45', @p68='False', @p69='False' (Nullable = true), @p70=NULL (Size = 4000), @p71=NULL (DbType = DateTime2), @p72='7', @p73='Kartik' (Nullable = false) (Size = 4000), @p74='29', @p75='1', @p76='2080', @p77='admin' (Nullable = false) (Size = 4000), @p78='2023-08-13T01:08:02.7987221+05:45', @p79='False', @p80='False' (Nullable = true), @p81=NULL (Size = 4000), @p82=NULL (DbType = DateTime2), @p83='8', @p84='Mangsir' (Nullable = false) (Size = 4000), @p85='30', @p86='1', @p87='2080', @p88='admin' (Nullable = false) (Size = 4000), @p89='2023-08-13T01:08:02.7987245+05:45', @p90='False', @p91='False' (Nullable = true), @p92=NULL (Size = 4000), @p93=NULL (DbType = DateTime2), @p94='9', @p95='Poush' (Nullable = false) (Size = 4000), @p96='30', @p97='1', @p98='2080', @p99='admin' (Nullable = false) (Size = 4000), @p100='2023-08-13T01:08:02.7987275+05:45', @p101='False', @p102='False' (Nullable = true), @p103=NULL (Size = 4000), @p104=NULL (DbType = DateTime2), @p105='10', @p106='Magh' (Nullable = false) (Size = 4000), @p107='30', @p108='1', @p109='2080', @p110='admin' (Nullable = false) (Size = 4000), @p111='2023-08-13T01:08:02.7987299+05:45', @p112='False', @p113='False' (Nullable = true), @p114=NULL (Size = 4000), @p115=NULL (DbType = DateTime2), @p116='11', @p117='Falgun' (Nullable = false) (Size = 4000), @p118='29', @p119='1', @p120='2080', @p121='admin' (Nullable = false) (Size = 4000), @p122='2023-08-13T01:08:02.7987324+05:45', @p123='False', @p124='False' (Nullable = true), @p125=NULL (Size = 4000), @p126=NULL (DbType = DateTime2), @p127='12', @p128='Chaitra' (Nullable = false) (Size = 4000), @p129='30', @p130='1', @p131='2080'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Calendars] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, 0),
(@p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, 1),
(@p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, 2),
(@p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, 3),
(@p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, 4),
(@p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, 5),
(@p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, 6),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, 7),
(@p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, 8),
(@p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, 9),
(@p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 10),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, 11)) AS i ([CreatedBy], [CreatedOn], [IsActive], [IsLocked], [ModifiedBy], [ModifiedOn], [Month], [MonthName], [NumberOfDay], [RunningDay], [Year], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CreatedBy], [CreatedOn], [IsActive], [IsLocked], [ModifiedBy], [ModifiedOn], [Month], [MonthName], [NumberOfDay], [RunningDay], [Year])
VALUES (i.[CreatedBy], i.[CreatedOn], i.[IsActive], i.[IsLocked], i.[ModifiedBy], i.[ModifiedOn], i.[Month], i.[MonthName], i.[NumberOfDay], i.[RunningDay], i.[Year])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 01:08:19.743 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 01:08:19.744 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 127231.8316ms
2023-08-13 01:08:19.744 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:08:19.744 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 200 in 127232.5547 ms
2023-08-13 01:08:19.744 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1639 - 200 - application/json;+charset=utf-8 127264.4731ms
2023-08-13 01:20:12.247 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:20:12.247 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:20:12.247 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:20:12.248 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:20:12.540 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:20:12.543 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:20:12.587 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:20:28.911 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 16662.2361ms
2023-08-13 01:20:28.911 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:20:28.948 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 401 in 16701.0501 ms
2023-08-13 01:20:28.948 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640 - 401 - application/json 16701.7422ms
2023-08-13 01:21:00.939 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 01:21:01.133 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:21:01.135 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:21:02.388 +05:45 [INF] Executed DbCommand (78ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:21:02.493 +05:45 [INF] Executed DbCommand (63ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:21:02.514 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:21:02.537 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:21:02.568 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 01:21:02.607 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 01:21:03.028 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.040 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.046 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.054 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.068 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.079 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.086 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.095 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.107 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.123 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.132 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.146 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.152 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.158 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.164 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.168 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.178 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.189 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.196 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.202 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:21:03.361 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 01:21:03.548 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 01:21:03.549 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 01:21:03.554 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 01:21:03.554 +05:45 [INF] Hosting environment: Development
2023-08-13 01:21:03.554 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 01:21:11.349 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:21:11.419 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:21:11.785 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:21:12.049 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:21:12.391 +05:45 [INF] Executed DbCommand (68ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:21:12.630 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:21:12.652 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 01:21:12.657 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:21:22.366 +05:45 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 01:21:49.029 +05:45 [ERR] 8/13/2023 1:21:49 AM: Nepali Date received: 2080-1-32. Wrong Nepali Date Encountered
2023-08-13 01:21:49.065 +05:45 [ERR] 8/13/2023 1:21:49 AM: Nepali Date received: . Wrong Nepali Date Encountered
2023-08-13 01:21:49.146 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 37091.2137ms
2023-08-13 01:21:49.149 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:21:49.281 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 401 in 37851.4184 ms
2023-08-13 01:21:49.303 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640 - 401 - application/json 37960.9336ms
2023-08-13 01:22:58.731 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:22:58.736 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:22:58.737 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:22:58.739 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:22:58.822 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:22:58.873 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:22:58.919 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:23:02.230 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 01:23:02.325 +05:45 [ERR] 8/13/2023 1:23:02 AM: Nepali Date received: 2080-1-31. Wrong Nepali Date Encountered
2023-08-13 01:23:02.356 +05:45 [ERR] 8/13/2023 1:23:02 AM: Nepali Date received: . Wrong Nepali Date Encountered
2023-08-13 01:23:02.418 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 3678.7906ms
2023-08-13 01:23:02.418 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:23:02.471 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 401 in 3734.5378 ms
2023-08-13 01:23:02.471 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640 - 401 - application/json 3740.2157ms
2023-08-13 01:23:17.562 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:23:17.563 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:23:17.565 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:23:17.575 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:23:17.641 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:23:17.688 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:23:17.710 +05:45 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:23:25.886 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 01:23:37.374 +05:45 [ERR] 8/13/2023 1:23:37 AM: Nepali Date received: 2080-1-30. Wrong Nepali Date Encountered
2023-08-13 01:24:34.654 +05:45 [ERR] 8/13/2023 1:24:34 AM: Nepali Date received: . Wrong Nepali Date Encountered
2023-08-13 01:24:34.756 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 77180.975ms
2023-08-13 01:24:34.757 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:24:34.800 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 401 in 77236.8997 ms
2023-08-13 01:24:34.800 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640 - 401 - application/json 77238.3765ms
2023-08-13 01:24:42.726 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:24:42.726 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:24:42.726 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:24:42.727 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:24:42.752 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:24:42.905 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:24:42.909 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:24:49.923 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 01:25:53.532 +05:45 [ERR] 8/13/2023 1:25:53 AM: Nepali Date received: 2080-1-30. Wrong Nepali Date Encountered
2023-08-13 01:25:53.556 +05:45 [ERR] 8/13/2023 1:25:53 AM: Nepali Date received: . Wrong Nepali Date Encountered
2023-08-13 01:25:53.600 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 70872.9428ms
2023-08-13 01:25:53.600 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:25:53.645 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 401 in 70919.1776 ms
2023-08-13 01:25:53.646 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640 - 401 - application/json 70919.8836ms
2023-08-13 01:25:57.382 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:25:57.414 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:25:57.415 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:25:57.415 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:25:57.462 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:25:57.560 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:25:57.567 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:26:07.090 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 01:27:44.277 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 01:27:44.449 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:27:44.451 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:27:45.506 +05:45 [INF] Executed DbCommand (68ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:27:45.599 +05:45 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:27:45.613 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:27:45.614 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:27:45.641 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 01:27:45.671 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 01:27:46.011 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.022 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.025 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.030 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.038 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.045 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.049 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.052 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.060 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.062 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.065 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.071 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.073 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.076 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.078 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.080 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.084 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.088 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.095 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.099 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:27:46.241 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 01:27:46.401 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 01:27:46.401 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 01:27:46.405 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 01:27:46.426 +05:45 [INF] Hosting environment: Development
2023-08-13 01:27:46.426 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 01:27:56.809 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:27:56.871 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:27:57.200 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:27:57.475 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:27:57.783 +05:45 [INF] Executed DbCommand (51ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:27:58.039 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:27:58.096 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 01:27:58.102 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:28:05.833 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 01:36:49.282 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 01:36:49.480 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:36:49.483 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:36:50.607 +05:45 [INF] Executed DbCommand (67ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:36:50.715 +05:45 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:36:50.728 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:36:50.730 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:36:50.758 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 01:36:50.791 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 01:36:51.157 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.167 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.170 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.175 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.184 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.191 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.195 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.199 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.202 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.204 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.207 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.217 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.220 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.222 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.225 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.227 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.231 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.234 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.237 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.241 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:36:51.362 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 01:36:51.533 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 01:36:51.533 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 01:36:51.537 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 01:36:51.537 +05:45 [INF] Hosting environment: Development
2023-08-13 01:36:51.537 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 01:36:58.905 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:36:58.971 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:36:59.338 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:36:59.610 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:36:59.974 +05:45 [INF] Executed DbCommand (83ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:37:00.333 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:37:00.375 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 01:37:00.383 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:37:12.692 +05:45 [INF] Executed DbCommand (44ms) [Parameters=[@__year_0='2080'], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[Year] = @__year_0
2023-08-13 01:37:15.107 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 15489.7337ms
2023-08-13 01:37:15.109 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:37:15.231 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 401 in 16254.6243 ms
2023-08-13 01:37:15.254 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640 - 401 - application/json 16351.0938ms
2023-08-13 01:37:52.240 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 01:37:52.415 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:37:52.417 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:37:53.548 +05:45 [INF] Executed DbCommand (70ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:37:53.646 +05:45 [INF] Executed DbCommand (61ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:37:53.660 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:37:53.661 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:37:53.688 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 01:37:53.721 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 01:37:54.143 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.158 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.162 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.167 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.181 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.191 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.195 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.199 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.207 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.216 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.223 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.234 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.236 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.239 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.242 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.245 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.254 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.257 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.261 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.265 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:37:54.445 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 01:37:54.651 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 01:37:54.651 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 01:37:54.675 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 01:37:54.676 +05:45 [INF] Hosting environment: Development
2023-08-13 01:37:54.677 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 01:38:15.696 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:38:15.768 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:38:16.094 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:38:16.318 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:38:16.641 +05:45 [INF] Executed DbCommand (43ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:38:16.842 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:38:16.922 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 01:38:16.927 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:38:25.170 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@__year_0='2080'], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[Year] = @__year_0
2023-08-13 01:38:25.237 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 8914.9642ms
2023-08-13 01:38:25.240 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:38:25.309 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 401 in 9533.7454 ms
2023-08-13 01:38:25.325 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640 - 401 - application/json 9632.3122ms
2023-08-13 01:38:49.155 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:38:49.163 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:38:49.164 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:38:49.167 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:38:49.249 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:38:49.340 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:38:49.364 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:38:51.395 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@__year_0='2080'], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[Year] = @__year_0
2023-08-13 01:38:51.530 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 2362.6605ms
2023-08-13 01:38:51.530 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:38:51.598 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 401 in 2435.3970 ms
2023-08-13 01:38:51.599 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640 - 401 - application/json 2444.2397ms
2023-08-13 01:38:55.809 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:38:55.810 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:38:55.812 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:38:55.823 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:38:55.868 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:38:55.916 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:38:55.960 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:39:16.884 +05:45 [INF] Executed DbCommand (121ms) [Parameters=[@__year_0='2080'], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[Year] = @__year_0
2023-08-13 01:40:03.381 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 67557.5588ms
2023-08-13 01:40:03.382 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:40:03.444 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 401 in 67634.3596 ms
2023-08-13 01:40:03.445 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640 - 401 - application/json 67635.5729ms
2023-08-13 01:40:49.272 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:40:49.294 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:40:49.300 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:40:49.301 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:40:49.347 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:40:49.412 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:40:49.437 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:41:02.434 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 01:41:02.604 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:41:02.606 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:41:03.652 +05:45 [INF] Executed DbCommand (71ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:41:03.744 +05:45 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:41:03.758 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:41:03.760 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:41:03.785 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 01:41:03.815 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 01:41:04.262 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.272 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.276 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.282 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.294 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.303 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.307 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.311 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.314 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.317 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.319 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.331 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.333 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.336 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.340 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.343 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.347 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.351 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.355 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.359 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:41:04.510 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 01:41:04.670 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 01:41:04.670 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 01:41:04.674 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 01:41:04.674 +05:45 [INF] Hosting environment: Development
2023-08-13 01:41:04.674 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 01:41:09.730 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:41:09.799 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:41:10.100 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:41:10.368 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:41:10.692 +05:45 [INF] Executed DbCommand (53ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:41:10.911 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:41:10.954 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 01:41:10.959 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:41:20.031 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__year_0='2080'], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[Year] = @__year_0
2023-08-13 01:42:50.936 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 01:42:51.108 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:42:51.110 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:42:52.157 +05:45 [INF] Executed DbCommand (74ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:42:52.258 +05:45 [INF] Executed DbCommand (63ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:42:52.272 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:42:52.274 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:42:52.301 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 01:42:52.336 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 01:42:52.715 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.725 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.728 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.734 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.744 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.753 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.757 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.762 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.764 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.767 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.797 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.817 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.821 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.825 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.829 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.832 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.837 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.842 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.845 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.849 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:42:52.977 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 01:42:53.138 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 01:42:53.138 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 01:42:53.162 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 01:42:53.163 +05:45 [INF] Hosting environment: Development
2023-08-13 01:42:53.163 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 01:42:58.872 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:42:58.936 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:42:59.239 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:42:59.526 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:42:59.802 +05:45 [INF] Executed DbCommand (49ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:43:00.048 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:43:00.117 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 01:43:00.143 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:43:02.885 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[@__year_0='2080'], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[Year] = @__year_0
2023-08-13 01:43:02.920 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 01:43:16.440 +05:45 [ERR] 8/13/2023 1:43:16 AM: Nepali Date received: 2080-09-30. Wrong Nepali Date Encountered
2023-08-13 01:43:16.470 +05:45 [ERR] 8/13/2023 1:43:16 AM: Nepali Date received: . Wrong Nepali Date Encountered
2023-08-13 01:43:16.550 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 17018.244ms
2023-08-13 01:43:16.552 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:43:16.656 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 401 in 17715.6675 ms
2023-08-13 01:43:16.686 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640 - 401 - application/json 17816.5889ms
2023-08-13 01:44:13.598 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:44:13.604 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:44:13.605 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:44:13.607 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:44:13.699 +05:45 [INF] Executed DbCommand (43ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:44:13.827 +05:45 [INF] Executed DbCommand (42ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:44:13.851 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:44:15.973 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__year_0='2080'], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[Year] = @__year_0
2023-08-13 01:44:16.020 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 01:44:16.062 +05:45 [ERR] 8/13/2023 1:44:16 AM: Nepali Date received: 2080-10-30. Wrong Nepali Date Encountered
2023-08-13 01:44:16.093 +05:45 [ERR] 8/13/2023 1:44:16 AM: Nepali Date received: . Wrong Nepali Date Encountered
2023-08-13 01:44:16.159 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 2552.2729ms
2023-08-13 01:44:16.159 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:44:16.217 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 401 in 2612.8449 ms
2023-08-13 01:44:16.218 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640 - 401 - application/json 2620.2944ms
2023-08-13 01:44:35.051 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:44:35.052 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:44:35.055 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:44:35.067 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:44:35.074 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:44:35.088 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:44:35.177 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:44:37.534 +05:45 [INF] Executed DbCommand (41ms) [Parameters=[@__year_0='2080'], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[Year] = @__year_0
2023-08-13 01:44:37.544 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 01:45:04.480 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 29411.5187ms
2023-08-13 01:45:04.480 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:45:04.603 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 401 in 29551.2884 ms
2023-08-13 01:45:04.611 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640 - 401 - application/json 29559.7642ms
2023-08-13 01:45:19.361 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1639
2023-08-13 01:45:19.361 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:45:19.361 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:45:19.362 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:45:19.365 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:45:19.369 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:45:19.370 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:45:21.943 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__year_0='2080'], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[Year] = @__year_0
2023-08-13 01:45:21.989 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 01:45:26.234 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@p0='admin' (Nullable = false) (Size = 4000), @p1='2023-08-13T01:45:21.9903499+05:45', @p2='True', @p3='True' (Nullable = true), @p4=NULL (Size = 4000), @p5=NULL (DbType = DateTime2), @p6='1', @p7='Baishakh' (Nullable = false) (Size = 4000), @p8='30', @p9='1', @p10='2080', @p11='admin' (Nullable = false) (Size = 4000), @p12='2023-08-13T01:45:21.9909569+05:45', @p13='False', @p14='False' (Nullable = true), @p15=NULL (Size = 4000), @p16=NULL (DbType = DateTime2), @p17='2', @p18='Jestha' (Nullable = false) (Size = 4000), @p19='31', @p20='1', @p21='2080', @p22='admin' (Nullable = false) (Size = 4000), @p23='2023-08-13T01:45:21.9915546+05:45', @p24='False', @p25='False' (Nullable = true), @p26=NULL (Size = 4000), @p27=NULL (DbType = DateTime2), @p28='3', @p29='Ashadh' (Nullable = false) (Size = 4000), @p30='31', @p31='1', @p32='2080', @p33='admin' (Nullable = false) (Size = 4000), @p34='2023-08-13T01:45:21.9919908+05:45', @p35='False', @p36='False' (Nullable = true), @p37=NULL (Size = 4000), @p38=NULL (DbType = DateTime2), @p39='4', @p40='Shrawan' (Nullable = false) (Size = 4000), @p41='31', @p42='1', @p43='2080', @p44='admin' (Nullable = false) (Size = 4000), @p45='2023-08-13T01:45:21.9923708+05:45', @p46='False', @p47='False' (Nullable = true), @p48=NULL (Size = 4000), @p49=NULL (DbType = DateTime2), @p50='5', @p51='Bhadra' (Nullable = false) (Size = 4000), @p52='31', @p53='1', @p54='2080', @p55='admin' (Nullable = false) (Size = 4000), @p56='2023-08-13T01:45:21.9929423+05:45', @p57='False', @p58='False' (Nullable = true), @p59=NULL (Size = 4000), @p60=NULL (DbType = DateTime2), @p61='6', @p62='Ashwin' (Nullable = false) (Size = 4000), @p63='30', @p64='1', @p65='2080', @p66='admin' (Nullable = false) (Size = 4000), @p67='2023-08-13T01:45:21.9935188+05:45', @p68='False', @p69='False' (Nullable = true), @p70=NULL (Size = 4000), @p71=NULL (DbType = DateTime2), @p72='7', @p73='Kartik' (Nullable = false) (Size = 4000), @p74='29', @p75='1', @p76='2080', @p77='admin' (Nullable = false) (Size = 4000), @p78='2023-08-13T01:45:21.9941188+05:45', @p79='False', @p80='False' (Nullable = true), @p81=NULL (Size = 4000), @p82=NULL (DbType = DateTime2), @p83='8', @p84='Mangsir' (Nullable = false) (Size = 4000), @p85='30', @p86='1', @p87='2080', @p88='admin' (Nullable = false) (Size = 4000), @p89='2023-08-13T01:45:21.9947409+05:45', @p90='False', @p91='False' (Nullable = true), @p92=NULL (Size = 4000), @p93=NULL (DbType = DateTime2), @p94='9', @p95='Poush' (Nullable = false) (Size = 4000), @p96='29', @p97='1', @p98='2080', @p99='admin' (Nullable = false) (Size = 4000), @p100='2023-08-13T01:45:21.9954519+05:45', @p101='False', @p102='False' (Nullable = true), @p103=NULL (Size = 4000), @p104=NULL (DbType = DateTime2), @p105='10', @p106='Magh' (Nullable = false) (Size = 4000), @p107='29', @p108='1', @p109='2080', @p110='admin' (Nullable = false) (Size = 4000), @p111='2023-08-13T01:45:21.9960570+05:45', @p112='False', @p113='False' (Nullable = true), @p114=NULL (Size = 4000), @p115=NULL (DbType = DateTime2), @p116='11', @p117='Falgun' (Nullable = false) (Size = 4000), @p118='29', @p119='1', @p120='2080', @p121='admin' (Nullable = false) (Size = 4000), @p122='2023-08-13T01:45:21.9966638+05:45', @p123='False', @p124='False' (Nullable = true), @p125=NULL (Size = 4000), @p126=NULL (DbType = DateTime2), @p127='12', @p128='Chaitra' (Nullable = false) (Size = 4000), @p129='30', @p130='1', @p131='2080'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Calendars] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, 0),
(@p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, 1),
(@p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, 2),
(@p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, 3),
(@p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, 4),
(@p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, 5),
(@p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, 6),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, 7),
(@p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, 8),
(@p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, 9),
(@p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 10),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, 11)) AS i ([CreatedBy], [CreatedOn], [IsActive], [IsLocked], [ModifiedBy], [ModifiedOn], [Month], [MonthName], [NumberOfDay], [RunningDay], [Year], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CreatedBy], [CreatedOn], [IsActive], [IsLocked], [ModifiedBy], [ModifiedOn], [Month], [MonthName], [NumberOfDay], [RunningDay], [Year])
VALUES (i.[CreatedBy], i.[CreatedOn], i.[IsActive], i.[IsLocked], i.[ModifiedBy], i.[ModifiedOn], i.[Month], i.[MonthName], i.[NumberOfDay], i.[RunningDay], i.[Year])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 01:45:26.299 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 01:45:26.320 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 6958.6327ms
2023-08-13 01:45:26.321 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:45:26.321 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 200 in 6959.5976 ms
2023-08-13 01:45:26.321 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1639 - 200 - application/json;+charset=utf-8 6960.0475ms
2023-08-13 01:48:43.481 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1639
2023-08-13 01:48:43.522 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:48:43.523 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:48:43.524 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:48:43.545 +05:45 [INF] Executed DbCommand (17ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:48:43.556 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:48:43.562 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:48:47.222 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[@__year_0='2081'], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[Year] = @__year_0
2023-08-13 01:48:47.229 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 01:48:47.309 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 3783.7783ms
2023-08-13 01:48:47.309 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:48:47.360 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 400 in 3838.2528 ms
2023-08-13 01:48:47.361 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1639 - 400 - application/json 3884.3940ms
2023-08-13 01:49:07.637 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640
2023-08-13 01:49:07.679 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:49:07.710 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:49:07.710 +05:45 [INF] Route matched with {action = "CreateCalendars", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCalendars(System.Collections.Generic.List`1[MicroFinance.Dtos.CompanyProfile.CreateCalenderDto]) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 01:49:07.754 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:49:07.842 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:49:07.869 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:49:10.434 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[@__year_0='2081'], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[Year] = @__year_0
2023-08-13 01:49:10.480 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 01:49:28.291 +05:45 [INF] Executed DbCommand (17ms) [Parameters=[@p0='admin' (Nullable = false) (Size = 4000), @p1='2023-08-13T01:49:10.4816939+05:45', @p2='False', @p3='False' (Nullable = true), @p4=NULL (Size = 4000), @p5=NULL (DbType = DateTime2), @p6='1', @p7='Baishakh' (Nullable = false) (Size = 4000), @p8='30', @p9='1', @p10='2081', @p11='admin' (Nullable = false) (Size = 4000), @p12='2023-08-13T01:49:10.4822847+05:45', @p13='False', @p14='False' (Nullable = true), @p15=NULL (Size = 4000), @p16=NULL (DbType = DateTime2), @p17='2', @p18='Jestha' (Nullable = false) (Size = 4000), @p19='31', @p20='1', @p21='2081', @p22='admin' (Nullable = false) (Size = 4000), @p23='2023-08-13T01:49:10.4829021+05:45', @p24='False', @p25='False' (Nullable = true), @p26=NULL (Size = 4000), @p27=NULL (DbType = DateTime2), @p28='3', @p29='Ashadh' (Nullable = false) (Size = 4000), @p30='31', @p31='1', @p32='2081', @p33='admin' (Nullable = false) (Size = 4000), @p34='2023-08-13T01:49:10.4834526+05:45', @p35='False', @p36='False' (Nullable = true), @p37=NULL (Size = 4000), @p38=NULL (DbType = DateTime2), @p39='4', @p40='Shrawan' (Nullable = false) (Size = 4000), @p41='31', @p42='1', @p43='2081', @p44='admin' (Nullable = false) (Size = 4000), @p45='2023-08-13T01:49:10.4840409+05:45', @p46='False', @p47='False' (Nullable = true), @p48=NULL (Size = 4000), @p49=NULL (DbType = DateTime2), @p50='5', @p51='Bhadra' (Nullable = false) (Size = 4000), @p52='31', @p53='1', @p54='2081', @p55='admin' (Nullable = false) (Size = 4000), @p56='2023-08-13T01:49:10.4846382+05:45', @p57='False', @p58='False' (Nullable = true), @p59=NULL (Size = 4000), @p60=NULL (DbType = DateTime2), @p61='6', @p62='Ashwin' (Nullable = false) (Size = 4000), @p63='30', @p64='1', @p65='2081', @p66='admin' (Nullable = false) (Size = 4000), @p67='2023-08-13T01:49:10.4852363+05:45', @p68='False', @p69='False' (Nullable = true), @p70=NULL (Size = 4000), @p71=NULL (DbType = DateTime2), @p72='7', @p73='Kartik' (Nullable = false) (Size = 4000), @p74='29', @p75='1', @p76='2081', @p77='admin' (Nullable = false) (Size = 4000), @p78='2023-08-13T01:49:10.4858661+05:45', @p79='False', @p80='False' (Nullable = true), @p81=NULL (Size = 4000), @p82=NULL (DbType = DateTime2), @p83='8', @p84='Mangsir' (Nullable = false) (Size = 4000), @p85='30', @p86='1', @p87='2081', @p88='admin' (Nullable = false) (Size = 4000), @p89='2023-08-13T01:49:10.4864886+05:45', @p90='False', @p91='False' (Nullable = true), @p92=NULL (Size = 4000), @p93=NULL (DbType = DateTime2), @p94='9', @p95='Poush' (Nullable = false) (Size = 4000), @p96='29', @p97='1', @p98='2081', @p99='admin' (Nullable = false) (Size = 4000), @p100='2023-08-13T01:49:10.4871601+05:45', @p101='False', @p102='False' (Nullable = true), @p103=NULL (Size = 4000), @p104=NULL (DbType = DateTime2), @p105='10', @p106='Magh' (Nullable = false) (Size = 4000), @p107='29', @p108='1', @p109='2081', @p110='admin' (Nullable = false) (Size = 4000), @p111='2023-08-13T01:49:10.4878255+05:45', @p112='False', @p113='False' (Nullable = true), @p114=NULL (Size = 4000), @p115=NULL (DbType = DateTime2), @p116='11', @p117='Falgun' (Nullable = false) (Size = 4000), @p118='29', @p119='1', @p120='2081', @p121='admin' (Nullable = false) (Size = 4000), @p122='2023-08-13T01:49:10.4883757+05:45', @p123='False', @p124='False' (Nullable = true), @p125=NULL (Size = 4000), @p126=NULL (DbType = DateTime2), @p127='12', @p128='Chaitra' (Nullable = false) (Size = 4000), @p129='30', @p130='1', @p131='2081'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Calendars] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, 0),
(@p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, 1),
(@p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, 2),
(@p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, 3),
(@p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, 4),
(@p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, 5),
(@p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, 6),
(@p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, 7),
(@p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, 8),
(@p99, @p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, 9),
(@p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120, 10),
(@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, 11)) AS i ([CreatedBy], [CreatedOn], [IsActive], [IsLocked], [ModifiedBy], [ModifiedOn], [Month], [MonthName], [NumberOfDay], [RunningDay], [Year], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CreatedBy], [CreatedOn], [IsActive], [IsLocked], [ModifiedBy], [ModifiedOn], [Month], [MonthName], [NumberOfDay], [RunningDay], [Year])
VALUES (i.[CreatedBy], i.[CreatedOn], i.[IsActive], i.[IsLocked], i.[ModifiedBy], i.[ModifiedOn], i.[Month], i.[MonthName], i.[NumberOfDay], i.[RunningDay], i.[Year])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 01:49:28.295 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 01:49:28.296 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance) in 20585.5427ms
2023-08-13 01:49:28.296 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCalendars (MicroFinance)'
2023-08-13 01:49:28.297 +05:45 [INF] HTTP POST /CompanyProfile/createCalendars responded 200 in 20587.3514 ms
2023-08-13 01:49:28.297 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCalendars application/json 1640 - 200 - application/json;+charset=utf-8 20659.8986ms
2023-08-13 01:51:25.392 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/DepositScheme/createDepositScheme application/json 316
2023-08-13 01:51:25.395 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:51:25.395 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositSchemeController.CreateDepositScheme (MicroFinance)'
2023-08-13 01:51:25.399 +05:45 [INF] Route matched with {action = "CreateDepositScheme", controller = "DepositScheme"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateDepositScheme(MicroFinance.Dtos.DepositSetup.CreateDepositSchemeDto) on controller MicroFinance.Controllers.DepositSetup.DepositSchemeController (MicroFinance).
2023-08-13 01:51:25.425 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:51:25.429 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:51:25.431 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:51:25.579 +05:45 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2023-08-13 01:51:25.592 +05:45 [INF] Executed action MicroFinance.Controllers.DepositSetup.DepositSchemeController.CreateDepositScheme (MicroFinance) in 192.6301ms
2023-08-13 01:51:25.592 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.DepositSetup.DepositSchemeController.CreateDepositScheme (MicroFinance)'
2023-08-13 01:51:25.592 +05:45 [INF] HTTP POST /DepositScheme/createDepositScheme responded 400 in 196.7267 ms
2023-08-13 01:51:25.592 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/DepositScheme/createDepositScheme application/json 316 - 400 - application/problem+json;+charset=utf-8 203.8221ms
2023-08-13 01:51:49.842 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/DepositScheme/createDepositScheme application/json 315
2023-08-13 01:51:49.867 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:51:49.868 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositSchemeController.CreateDepositScheme (MicroFinance)'
2023-08-13 01:51:49.868 +05:45 [INF] Route matched with {action = "CreateDepositScheme", controller = "DepositScheme"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateDepositScheme(MicroFinance.Dtos.DepositSetup.CreateDepositSchemeDto) on controller MicroFinance.Controllers.DepositSetup.DepositSchemeController (MicroFinance).
2023-08-13 01:51:49.935 +05:45 [INF] Executed DbCommand (44ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:51:49.966 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:51:49.994 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:52:05.671 +05:45 [INF] Executed DbCommand (37ms) [Parameters=[@__name_0='Daily Saving' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId], [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [s0].[Id], [s0].[CurrentBalance], [s0].[Description], [s0].[LedgerId], [s0].[Name], [s0].[SubLedgerCode], [s1].[Id], [s1].[CurrentBalance], [s1].[Description], [s1].[LedgerId], [s1].[Name], [s1].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [DepositSchemes] AS [d]
INNER JOIN [SubLedgers] AS [s] ON [d].[DepositSubledgerId] = [s].[Id]
INNER JOIN [SubLedgers] AS [s0] ON [d].[InterestSubLedgerId] = [s0].[Id]
INNER JOIN [SubLedgers] AS [s1] ON [d].[TaxSubledgerId] = [s1].[Id]
INNER JOIN [Ledgers] AS [l] ON [d].[SchemeTypeId] = [l].[Id]
WHERE [d].[SchemeName] = @__name_0
2023-08-13 01:52:11.585 +05:45 [INF] Executed DbCommand (32ms) [Parameters=[@__symbol_0='DS-' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId]
FROM [DepositSchemes] AS [d]
WHERE [d].[Symbol] = @__symbol_0
2023-08-13 01:52:18.329 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 01:53:37.964 +05:45 [INF] Executed DbCommand (13ms) [Parameters=[@__depositScheme_SchemeTypeId_0='18' (Nullable = true)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = @__depositScheme_SchemeTypeId_0
2023-08-13 01:53:38.018 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 68
2023-08-13 01:53:38.031 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 29
2023-08-13 01:53:38.134 +05:45 [INF] Executed DbCommand (14ms) [Parameters=[@p0='0' (Precision = 18) (Scale = 4), @p1='Subledger created while creating Deposit Scheme Daily Saving' (Size = 4000), @p2='18', @p3='DAILY SAVING DEPOSIT' (Nullable = false) (Size = 450), @p4=NULL (DbType = Int32), @p5='0' (Precision = 18) (Scale = 4), @p6='Subledger created while creating Deposit Scheme Daily Saving' (Size = 4000), @p7='68', @p8='DAILY SAVING INTEREST' (Nullable = false) (Size = 450), @p9=NULL (DbType = Int32), @p10='0' (Precision = 18) (Scale = 4), @p11='Subledger created while creating Deposit Scheme Daily Saving' (Size = 4000), @p12='29', @p13='DAILY SAVING TAX' (Nullable = false) (Size = 450), @p14=NULL (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [SubLedgers] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, 0),
(@p5, @p6, @p7, @p8, @p9, 1),
(@p10, @p11, @p12, @p13, @p14, 2)) AS i ([CurrentBalance], [Description], [LedgerId], [Name], [SubLedgerCode], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CurrentBalance], [Description], [LedgerId], [Name], [SubLedgerCode])
VALUES (i.[CurrentBalance], i.[Description], i.[LedgerId], i.[Name], i.[SubLedgerCode])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 01:53:38.194 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@p5='55', @p0='0' (Precision = 18) (Scale = 4), @p1='Subledger created while creating Deposit Scheme Daily Saving' (Size = 4000), @p2='18', @p3='DAILY SAVING DEPOSIT' (Nullable = false) (Size = 450), @p4='55' (Nullable = true)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [SubLedgers] SET [CurrentBalance] = @p0, [Description] = @p1, [LedgerId] = @p2, [Name] = @p3, [SubLedgerCode] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2023-08-13 01:53:38.232 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@p5='56', @p0='0' (Precision = 18) (Scale = 4), @p1='Subledger created while creating Deposit Scheme Daily Saving' (Size = 4000), @p2='68', @p3='DAILY SAVING INTEREST' (Nullable = false) (Size = 450), @p4='56' (Nullable = true)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [SubLedgers] SET [CurrentBalance] = @p0, [Description] = @p1, [LedgerId] = @p2, [Name] = @p3, [SubLedgerCode] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2023-08-13 01:53:38.258 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@p5='57', @p0='0' (Precision = 18) (Scale = 4), @p1='Subledger created while creating Deposit Scheme Daily Saving' (Size = 4000), @p2='29', @p3='DAILY SAVING TAX' (Nullable = false) (Size = 450), @p4='57' (Nullable = true)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [SubLedgers] SET [CurrentBalance] = @p0, [Description] = @p1, [LedgerId] = @p2, [Name] = @p3, [SubLedgerCode] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2023-08-13 01:53:38.421 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[@p0='000' (Nullable = false) (Size = 4000), @p1='1', @p2='admin' (Nullable = false) (Size = 4000), @p3='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 4000), @p4='55', @p5='2023-04-14T00:00:00.0000000', @p6='0001-01-01T00:00:00.0000000', @p7='10' (Precision = 5) (Scale = 2), @p8='1' (Precision = 5) (Scale = 2), @p9='56', @p10='True', @p11='15' (Precision = 5) (Scale = 2), @p12='1000', @p13='5' (Precision = 5) (Scale = 2), @p14=NULL (Size = 4000), @p15=NULL (Size = 4000), @p16=NULL (Size = 4000), @p17='2080-01-01' (Nullable = false) (Size = 4000), @p18=NULL (Nullable = false) (Size = 4000), @p19='1', @p20='2023-08-13T01:52:35.7292669+05:45', @p21='0001-01-01T00:00:00.0000000', @p22='Daily Saving' (Nullable = false) (Size = 450), @p23='Nepali Name' (Size = 4000), @p24='18', @p25='DS-' (Nullable = false) (Size = 450), @p26='57'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [DepositSchemes] ([BranchCode], [Calculation], [CreatedBy], [CreatorId], [DepositSubledgerId], [EnglishCreationDate], [EnglishModificationDate], [InterestRate], [InterestRateOnMinimumBalance], [InterestSubLedgerId], [IsActive], [MaximumInterestRate], [MinimumBalance], [MinimumInterestRate], [ModifiedBy], [ModifierBranchCode], [ModifierId], [NepaliCreationDate], [NepaliModificationDate], [PostingScheme], [RealWorldCreationDate], [RealWorldModificationDate], [SchemeName], [SchemeNameNepali], [SchemeTypeId], [Symbol], [TaxSubledgerId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26);
2023-08-13 01:53:38.520 +05:45 [ERR] An exception occurred in the database while saving changes for context type 'MicroFinance.DBContext.ApplicationDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'NepaliModificationDate', table 'fintex_dev.dbo.DepositSchemes'; column does not allow nulls. INSERT fails.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)
   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderAsyncCallContext`1 context)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
ClientConnectionId:6b4841e8-060a-4122-a8f6-fe3cad7905e5
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'NepaliModificationDate', table 'fintex_dev.dbo.DepositSchemes'; column does not allow nulls. INSERT fails.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)
   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderAsyncCallContext`1 context)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
ClientConnectionId:6b4841e8-060a-4122-a8f6-fe3cad7905e5
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2023-08-13 01:53:38.570 +05:45 [ERR] 8/13/2023 1:53:38 AM: Deposit Scheme Daily Saving failed created by employee admin
2023-08-13 01:53:38.571 +05:45 [INF] 8/13/2023 1:53:38 AM: Removing created subledger from the given scheme...
2023-08-13 01:53:38.716 +05:45 [INF] Executed action MicroFinance.Controllers.DepositSetup.DepositSchemeController.CreateDepositScheme (MicroFinance) in 108848.1837ms
2023-08-13 01:53:38.716 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.DepositSetup.DepositSchemeController.CreateDepositScheme (MicroFinance)'
2023-08-13 01:53:38.780 +05:45 [INF] HTTP POST /DepositScheme/createDepositScheme responded 401 in 108912.2977 ms
2023-08-13 01:53:38.780 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/DepositScheme/createDepositScheme application/json 315 - 401 - application/json 108937.7632ms
2023-08-13 01:55:43.142 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 01:55:43.301 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:55:43.302 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:55:43.713 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:55:43.713 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:55:54.227 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 01:55:54.423 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:55:54.425 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:55:55.210 +05:45 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:55:55.248 +05:45 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:55:55.256 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:55:55.258 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:55:55.285 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 01:55:55.311 +05:45 [INF] Applying migration '20230812201044_Initial1.0'.
2023-08-13 01:55:55.499 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM [AspNetRoles]
WHERE [Id] = N'025fed80-e073-4d0d-b7d6-fdcfc8d8eea1';
SELECT @@ROWCOUNT;
2023-08-13 01:55:55.511 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM [AspNetRoles]
WHERE [Id] = N'3aac356f-292c-42fd-a26d-e3cdda262b0e';
SELECT @@ROWCOUNT;
2023-08-13 01:55:55.516 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM [AspNetRoles]
WHERE [Id] = N'4acbdd75-a4b9-4444-8f78-86c713da3054';
SELECT @@ROWCOUNT;
2023-08-13 01:55:55.521 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM [AspNetRoles]
WHERE [Id] = N'81faa567-90a6-402d-898a-877ecb623a12';
SELECT @@ROWCOUNT;
2023-08-13 01:55:55.526 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM [AspNetRoles]
WHERE [Id] = N'cfa33577-db62-455f-a52a-d55e4bdc9f93';
SELECT @@ROWCOUNT;
2023-08-13 01:55:55.570 +05:45 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var0 sysname;
SELECT @var0 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositSchemes]') AND [c].[name] = N'NepaliModificationDate');
IF @var0 IS NOT NULL EXEC(N'ALTER TABLE [DepositSchemes] DROP CONSTRAINT [' + @var0 + '];');
ALTER TABLE [DepositSchemes] ALTER COLUMN [NepaliModificationDate] nvarchar(max) NULL;
2023-08-13 01:55:55.592 +05:45 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var1 sysname;
SELECT @var1 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositAccounts]') AND [c].[name] = N'NepaliModificationDate');
IF @var1 IS NOT NULL EXEC(N'ALTER TABLE [DepositAccounts] DROP CONSTRAINT [' + @var1 + '];');
ALTER TABLE [DepositAccounts] ALTER COLUMN [NepaliModificationDate] nvarchar(max) NULL;
2023-08-13 01:55:55.613 +05:45 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[AspNetRoles]'))
    SET IDENTITY_INSERT [AspNetRoles] ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'27fc9915-b334-43ee-a2d5-20de61f1b783', N'7212f470-8f08-4db2-bfcc-d9bc29ee054a', N'SuperAdmin', N'SUPERADMIN'),
(N'589d7fa1-85d0-4cf0-90f9-9aae22abcefd', N'b372d4e9-c909-461b-9743-91076e7bf8d0', N'Marketing', N'MARKETING'),
(N'58c2f618-3224-43a2-9592-8777f1cea718', N'f825e1a8-e4fb-4648-9ec5-1cb40643e4fe', N'SeniorAssistant', N'SENIORASSISTANT'),
(N'bbd82b69-3c4d-459d-89e1-33ed516d4c4d', N'be6e7b9c-75af-4121-a579-b49aa80984a5', N'Officer', N'OFFICER'),
(N'f9efd1c0-1208-4d5b-a6ac-19ad01656f7b', N'b3204ae1-ef64-490a-a2b2-96f10fd814f6', N'Assistant', N'ASSISTANT');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[AspNetRoles]'))
    SET IDENTITY_INSERT [AspNetRoles] OFF;
2023-08-13 01:55:55.616 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230812201044_Initial1.0', N'7.0.5');
2023-08-13 01:56:06.350 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 01:56:06.534 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:56:06.536 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:56:07.603 +05:45 [INF] Executed DbCommand (81ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:56:07.707 +05:45 [INF] Executed DbCommand (68ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:56:07.722 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:56:07.724 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:56:07.751 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 01:56:07.787 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 01:56:08.139 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.151 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.156 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.162 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.172 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.180 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.184 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.190 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.194 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.203 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.208 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.218 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.222 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.227 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.231 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.235 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.241 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.246 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.254 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.263 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 01:56:08.414 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 01:56:08.594 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 01:56:08.594 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 01:56:08.598 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 01:56:08.598 +05:45 [INF] Hosting environment: Development
2023-08-13 01:56:08.599 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 01:56:16.875 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/DepositScheme/createDepositScheme application/json 315
2023-08-13 01:56:17.079 +05:45 [INF] CORS policy execution successful.
2023-08-13 01:56:17.532 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositSchemeController.CreateDepositScheme (MicroFinance)'
2023-08-13 01:56:18.000 +05:45 [INF] Route matched with {action = "CreateDepositScheme", controller = "DepositScheme"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateDepositScheme(MicroFinance.Dtos.DepositSetup.CreateDepositSchemeDto) on controller MicroFinance.Controllers.DepositSetup.DepositSchemeController (MicroFinance).
2023-08-13 01:56:18.504 +05:45 [INF] Executed DbCommand (95ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 01:56:18.769 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 01:56:18.794 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 01:56:18.800 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 01:56:21.477 +05:45 [INF] Executed DbCommand (15ms) [Parameters=[@__name_0='Daily Saving' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId], [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [s0].[Id], [s0].[CurrentBalance], [s0].[Description], [s0].[LedgerId], [s0].[Name], [s0].[SubLedgerCode], [s1].[Id], [s1].[CurrentBalance], [s1].[Description], [s1].[LedgerId], [s1].[Name], [s1].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [DepositSchemes] AS [d]
INNER JOIN [SubLedgers] AS [s] ON [d].[DepositSubledgerId] = [s].[Id]
INNER JOIN [SubLedgers] AS [s0] ON [d].[InterestSubLedgerId] = [s0].[Id]
INNER JOIN [SubLedgers] AS [s1] ON [d].[TaxSubledgerId] = [s1].[Id]
INNER JOIN [Ledgers] AS [l] ON [d].[SchemeTypeId] = [l].[Id]
WHERE [d].[SchemeName] = @__name_0
2023-08-13 01:56:21.502 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[@__symbol_0='DS-' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId]
FROM [DepositSchemes] AS [d]
WHERE [d].[Symbol] = @__symbol_0
2023-08-13 01:56:21.518 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 01:56:21.685 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__depositScheme_SchemeTypeId_0='18' (Nullable = true)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = @__depositScheme_SchemeTypeId_0
2023-08-13 01:56:21.764 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 68
2023-08-13 01:56:21.776 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 29
2023-08-13 01:56:22.201 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@p0='0' (Precision = 18) (Scale = 4), @p1='Subledger created while creating Deposit Scheme Daily Saving' (Size = 4000), @p2='18', @p3='DAILY SAVING DEPOSIT' (Nullable = false) (Size = 450), @p4=NULL (DbType = Int32), @p5='0' (Precision = 18) (Scale = 4), @p6='Subledger created while creating Deposit Scheme Daily Saving' (Size = 4000), @p7='68', @p8='DAILY SAVING INTEREST' (Nullable = false) (Size = 450), @p9=NULL (DbType = Int32), @p10='0' (Precision = 18) (Scale = 4), @p11='Subledger created while creating Deposit Scheme Daily Saving' (Size = 4000), @p12='29', @p13='DAILY SAVING TAX' (Nullable = false) (Size = 450), @p14=NULL (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [SubLedgers] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, 0),
(@p5, @p6, @p7, @p8, @p9, 1),
(@p10, @p11, @p12, @p13, @p14, 2)) AS i ([CurrentBalance], [Description], [LedgerId], [Name], [SubLedgerCode], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CurrentBalance], [Description], [LedgerId], [Name], [SubLedgerCode])
VALUES (i.[CurrentBalance], i.[Description], i.[LedgerId], i.[Name], i.[SubLedgerCode])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 01:56:22.324 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@p5='58', @p0='0' (Precision = 18) (Scale = 4), @p1='Subledger created while creating Deposit Scheme Daily Saving' (Size = 4000), @p2='18', @p3='DAILY SAVING DEPOSIT' (Nullable = false) (Size = 450), @p4='58' (Nullable = true)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [SubLedgers] SET [CurrentBalance] = @p0, [Description] = @p1, [LedgerId] = @p2, [Name] = @p3, [SubLedgerCode] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2023-08-13 01:56:22.385 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@p5='59', @p0='0' (Precision = 18) (Scale = 4), @p1='Subledger created while creating Deposit Scheme Daily Saving' (Size = 4000), @p2='68', @p3='DAILY SAVING INTEREST' (Nullable = false) (Size = 450), @p4='59' (Nullable = true)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [SubLedgers] SET [CurrentBalance] = @p0, [Description] = @p1, [LedgerId] = @p2, [Name] = @p3, [SubLedgerCode] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2023-08-13 01:56:22.403 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[@p5='60', @p0='0' (Precision = 18) (Scale = 4), @p1='Subledger created while creating Deposit Scheme Daily Saving' (Size = 4000), @p2='29', @p3='DAILY SAVING TAX' (Nullable = false) (Size = 450), @p4='60' (Nullable = true)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [SubLedgers] SET [CurrentBalance] = @p0, [Description] = @p1, [LedgerId] = @p2, [Name] = @p3, [SubLedgerCode] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2023-08-13 01:56:22.669 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@p0='000' (Nullable = false) (Size = 4000), @p1='1', @p2='admin' (Nullable = false) (Size = 4000), @p3='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 4000), @p4='58', @p5='2023-04-14T00:00:00.0000000', @p6='0001-01-01T00:00:00.0000000', @p7='10' (Precision = 5) (Scale = 2), @p8='1' (Precision = 5) (Scale = 2), @p9='59', @p10='True', @p11='15' (Precision = 5) (Scale = 2), @p12='1000', @p13='5' (Precision = 5) (Scale = 2), @p14=NULL (Size = 4000), @p15=NULL (Size = 4000), @p16=NULL (Size = 4000), @p17='2080-01-01' (Nullable = false) (Size = 4000), @p18=NULL (Size = 4000), @p19='1', @p20='2023-08-13T01:56:21.5529017+05:45', @p21='0001-01-01T00:00:00.0000000', @p22='Daily Saving' (Nullable = false) (Size = 450), @p23='Nepali Name' (Size = 4000), @p24='18', @p25='DS-' (Nullable = false) (Size = 450), @p26='60'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [DepositSchemes] ([BranchCode], [Calculation], [CreatedBy], [CreatorId], [DepositSubledgerId], [EnglishCreationDate], [EnglishModificationDate], [InterestRate], [InterestRateOnMinimumBalance], [InterestSubLedgerId], [IsActive], [MaximumInterestRate], [MinimumBalance], [MinimumInterestRate], [ModifiedBy], [ModifierBranchCode], [ModifierId], [NepaliCreationDate], [NepaliModificationDate], [PostingScheme], [RealWorldCreationDate], [RealWorldModificationDate], [SchemeName], [SchemeNameNepali], [SchemeTypeId], [Symbol], [TaxSubledgerId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26);
2023-08-13 01:56:22.682 +05:45 [INF] 8/13/2023 1:56:22 AM: Deposit Scheme Daily Saving created by employee admin
2023-08-13 01:56:22.729 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 01:56:22.787 +05:45 [INF] Executed action MicroFinance.Controllers.DepositSetup.DepositSchemeController.CreateDepositScheme (MicroFinance) in 4781.4521ms
2023-08-13 01:56:22.792 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.DepositSetup.DepositSchemeController.CreateDepositScheme (MicroFinance)'
2023-08-13 01:56:22.801 +05:45 [INF] HTTP POST /DepositScheme/createDepositScheme responded 200 in 5693.8207 ms
2023-08-13 01:56:22.829 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/DepositScheme/createDepositScheme application/json 315 - 200 - application/json;+charset=utf-8 5957.3420ms
2023-08-13 01:59:37.656 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 01:59:37.827 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:59:37.828 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:59:38.267 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:59:38.267 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:59:49.521 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 01:59:49.694 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:59:49.696 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 01:59:50.543 +05:45 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:59:50.582 +05:45 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:59:50.587 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 01:59:50.589 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 01:59:50.607 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 01:59:50.630 +05:45 [INF] Applying migration '20230812201438_Initial1.1'.
2023-08-13 01:59:50.814 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM [AspNetRoles]
WHERE [Id] = N'27fc9915-b334-43ee-a2d5-20de61f1b783';
SELECT @@ROWCOUNT;
2023-08-13 01:59:50.818 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM [AspNetRoles]
WHERE [Id] = N'589d7fa1-85d0-4cf0-90f9-9aae22abcefd';
SELECT @@ROWCOUNT;
2023-08-13 01:59:50.823 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM [AspNetRoles]
WHERE [Id] = N'58c2f618-3224-43a2-9592-8777f1cea718';
SELECT @@ROWCOUNT;
2023-08-13 01:59:50.829 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM [AspNetRoles]
WHERE [Id] = N'bbd82b69-3c4d-459d-89e1-33ed516d4c4d';
SELECT @@ROWCOUNT;
2023-08-13 01:59:50.834 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM [AspNetRoles]
WHERE [Id] = N'f9efd1c0-1208-4d5b-a6ac-19ad01656f7b';
SELECT @@ROWCOUNT;
2023-08-13 01:59:50.875 +05:45 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var0 sysname;
SELECT @var0 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositSchemes]') AND [c].[name] = N'RealWorldModificationDate');
IF @var0 IS NOT NULL EXEC(N'ALTER TABLE [DepositSchemes] DROP CONSTRAINT [' + @var0 + '];');
ALTER TABLE [DepositSchemes] ALTER COLUMN [RealWorldModificationDate] datetime2 NULL;
2023-08-13 01:59:50.897 +05:45 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var1 sysname;
SELECT @var1 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositSchemes]') AND [c].[name] = N'EnglishModificationDate');
IF @var1 IS NOT NULL EXEC(N'ALTER TABLE [DepositSchemes] DROP CONSTRAINT [' + @var1 + '];');
ALTER TABLE [DepositSchemes] ALTER COLUMN [EnglishModificationDate] datetime2 NULL;
2023-08-13 01:59:50.920 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var2 sysname;
SELECT @var2 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositAccounts]') AND [c].[name] = N'RealWorldModificationDate');
IF @var2 IS NOT NULL EXEC(N'ALTER TABLE [DepositAccounts] DROP CONSTRAINT [' + @var2 + '];');
ALTER TABLE [DepositAccounts] ALTER COLUMN [RealWorldModificationDate] datetime2 NULL;
2023-08-13 01:59:50.944 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var3 sysname;
SELECT @var3 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositAccounts]') AND [c].[name] = N'EnglishModificationDate');
IF @var3 IS NOT NULL EXEC(N'ALTER TABLE [DepositAccounts] DROP CONSTRAINT [' + @var3 + '];');
ALTER TABLE [DepositAccounts] ALTER COLUMN [EnglishModificationDate] datetime2 NULL;
2023-08-13 01:59:50.963 +05:45 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[AspNetRoles]'))
    SET IDENTITY_INSERT [AspNetRoles] ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'4ed7a3b5-32d0-49f5-8d8b-b3f4a0767db6', N'68ee3cf1-052c-4512-a47a-3613d5be7f46', N'SeniorAssistant', N'SENIORASSISTANT'),
(N'64c30543-93e4-4f77-b6ad-2b51207e16e5', N'1f06c358-e0ca-4284-a772-9f5cd96ba045', N'Marketing', N'MARKETING'),
(N'870b93e3-b883-43b4-a65d-3c95887253fb', N'68060219-3e03-45e1-be74-362c1f00f4b6', N'SuperAdmin', N'SUPERADMIN'),
(N'd28a4610-6c63-4f26-8601-224a6a8f2f15', N'ef5baa18-68fd-4137-b4d8-f64a7da0bcec', N'Assistant', N'ASSISTANT'),
(N'f14fd079-da32-4824-b5a4-6d95f4fd5324', N'dd8c76fe-cdb3-4548-a977-5caa7e1a3f00', N'Officer', N'OFFICER');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[AspNetRoles]'))
    SET IDENTITY_INSERT [AspNetRoles] OFF;
2023-08-13 01:59:50.965 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230812201438_Initial1.1', N'7.0.5');
2023-08-13 02:00:03.670 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 02:00:03.868 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:00:03.870 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:00:05.045 +05:45 [INF] Executed DbCommand (85ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:00:05.146 +05:45 [INF] Executed DbCommand (62ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:00:05.166 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:00:05.168 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:00:05.197 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 02:00:05.235 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 02:00:05.613 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.626 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.631 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.638 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.653 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.665 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.671 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.677 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.687 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.691 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.697 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.708 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.713 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.718 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.721 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.726 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.735 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.750 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.769 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.779 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:00:05.931 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 02:00:06.107 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 02:00:06.107 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 02:00:06.132 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 02:00:06.133 +05:45 [INF] Hosting environment: Development
2023-08-13 02:00:06.133 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 02:00:46.176 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/DepositScheme/createDepositScheme application/json 313
2023-08-13 02:00:46.291 +05:45 [INF] CORS policy execution successful.
2023-08-13 02:00:46.703 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositSchemeController.CreateDepositScheme (MicroFinance)'
2023-08-13 02:00:46.988 +05:45 [INF] Route matched with {action = "CreateDepositScheme", controller = "DepositScheme"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateDepositScheme(MicroFinance.Dtos.DepositSetup.CreateDepositSchemeDto) on controller MicroFinance.Controllers.DepositSetup.DepositSchemeController (MicroFinance).
2023-08-13 02:00:47.511 +05:45 [INF] Executed DbCommand (106ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 02:00:47.775 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 02:00:47.794 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 02:00:47.803 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 02:00:51.005 +05:45 [INF] Executed DbCommand (38ms) [Parameters=[@__name_0='Fix Saving' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId], [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [s0].[Id], [s0].[CurrentBalance], [s0].[Description], [s0].[LedgerId], [s0].[Name], [s0].[SubLedgerCode], [s1].[Id], [s1].[CurrentBalance], [s1].[Description], [s1].[LedgerId], [s1].[Name], [s1].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [DepositSchemes] AS [d]
INNER JOIN [SubLedgers] AS [s] ON [d].[DepositSubledgerId] = [s].[Id]
INNER JOIN [SubLedgers] AS [s0] ON [d].[InterestSubLedgerId] = [s0].[Id]
INNER JOIN [SubLedgers] AS [s1] ON [d].[TaxSubledgerId] = [s1].[Id]
INNER JOIN [Ledgers] AS [l] ON [d].[SchemeTypeId] = [l].[Id]
WHERE [d].[SchemeName] = @__name_0
2023-08-13 02:00:51.025 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@__symbol_0='FS-' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId]
FROM [DepositSchemes] AS [d]
WHERE [d].[Symbol] = @__symbol_0
2023-08-13 02:00:51.036 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 02:00:51.173 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[@__depositScheme_SchemeTypeId_0='20' (Nullable = true)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = @__depositScheme_SchemeTypeId_0
2023-08-13 02:00:51.236 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 68
2023-08-13 02:00:51.245 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 29
2023-08-13 02:00:51.597 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@p0='0' (Precision = 18) (Scale = 4), @p1='Subledger created while creating Deposit Scheme Fix Saving' (Size = 4000), @p2='20', @p3='FIX SAVING DEPOSIT' (Nullable = false) (Size = 450), @p4=NULL (DbType = Int32), @p5='0' (Precision = 18) (Scale = 4), @p6='Subledger created while creating Deposit Scheme Fix Saving' (Size = 4000), @p7='68', @p8='FIX SAVING INTEREST' (Nullable = false) (Size = 450), @p9=NULL (DbType = Int32), @p10='0' (Precision = 18) (Scale = 4), @p11='Subledger created while creating Deposit Scheme Fix Saving' (Size = 4000), @p12='29', @p13='FIX SAVING TAX' (Nullable = false) (Size = 450), @p14=NULL (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [SubLedgers] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, 0),
(@p5, @p6, @p7, @p8, @p9, 1),
(@p10, @p11, @p12, @p13, @p14, 2)) AS i ([CurrentBalance], [Description], [LedgerId], [Name], [SubLedgerCode], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CurrentBalance], [Description], [LedgerId], [Name], [SubLedgerCode])
VALUES (i.[CurrentBalance], i.[Description], i.[LedgerId], i.[Name], i.[SubLedgerCode])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 02:00:51.712 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[@p5='61', @p0='0' (Precision = 18) (Scale = 4), @p1='Subledger created while creating Deposit Scheme Fix Saving' (Size = 4000), @p2='20', @p3='FIX SAVING DEPOSIT' (Nullable = false) (Size = 450), @p4='61' (Nullable = true)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [SubLedgers] SET [CurrentBalance] = @p0, [Description] = @p1, [LedgerId] = @p2, [Name] = @p3, [SubLedgerCode] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2023-08-13 02:00:51.721 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@p5='62', @p0='0' (Precision = 18) (Scale = 4), @p1='Subledger created while creating Deposit Scheme Fix Saving' (Size = 4000), @p2='68', @p3='FIX SAVING INTEREST' (Nullable = false) (Size = 450), @p4='62' (Nullable = true)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [SubLedgers] SET [CurrentBalance] = @p0, [Description] = @p1, [LedgerId] = @p2, [Name] = @p3, [SubLedgerCode] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2023-08-13 02:00:51.750 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@p5='63', @p0='0' (Precision = 18) (Scale = 4), @p1='Subledger created while creating Deposit Scheme Fix Saving' (Size = 4000), @p2='29', @p3='FIX SAVING TAX' (Nullable = false) (Size = 450), @p4='63' (Nullable = true)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [SubLedgers] SET [CurrentBalance] = @p0, [Description] = @p1, [LedgerId] = @p2, [Name] = @p3, [SubLedgerCode] = @p4
OUTPUT 1
WHERE [Id] = @p5;
2023-08-13 02:00:51.947 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[@p0='000' (Nullable = false) (Size = 4000), @p1='1', @p2='admin' (Nullable = false) (Size = 4000), @p3='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 4000), @p4='61', @p5='2023-04-14T00:00:00.0000000', @p6=NULL (DbType = DateTime2), @p7='10' (Precision = 5) (Scale = 2), @p8='1' (Precision = 5) (Scale = 2), @p9='62', @p10='True', @p11='15' (Precision = 5) (Scale = 2), @p12='1000', @p13='5' (Precision = 5) (Scale = 2), @p14=NULL (Size = 4000), @p15=NULL (Size = 4000), @p16=NULL (Size = 4000), @p17='2080-01-01' (Nullable = false) (Size = 4000), @p18=NULL (Size = 4000), @p19='2', @p20='2023-08-13T02:00:51.0638016+05:45', @p21=NULL (DbType = DateTime2), @p22='Fix Saving' (Nullable = false) (Size = 450), @p23='Nepali Name' (Size = 4000), @p24='20', @p25='FS-' (Nullable = false) (Size = 450), @p26='63'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [DepositSchemes] ([BranchCode], [Calculation], [CreatedBy], [CreatorId], [DepositSubledgerId], [EnglishCreationDate], [EnglishModificationDate], [InterestRate], [InterestRateOnMinimumBalance], [InterestSubLedgerId], [IsActive], [MaximumInterestRate], [MinimumBalance], [MinimumInterestRate], [ModifiedBy], [ModifierBranchCode], [ModifierId], [NepaliCreationDate], [NepaliModificationDate], [PostingScheme], [RealWorldCreationDate], [RealWorldModificationDate], [SchemeName], [SchemeNameNepali], [SchemeTypeId], [Symbol], [TaxSubledgerId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26);
2023-08-13 02:00:51.958 +05:45 [INF] 8/13/2023 2:00:51 AM: Deposit Scheme Fix Saving created by employee admin
2023-08-13 02:00:52.000 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 02:00:52.050 +05:45 [INF] Executed action MicroFinance.Controllers.DepositSetup.DepositSchemeController.CreateDepositScheme (MicroFinance) in 5057.6394ms
2023-08-13 02:00:52.057 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.DepositSetup.DepositSchemeController.CreateDepositScheme (MicroFinance)'
2023-08-13 02:00:52.065 +05:45 [INF] HTTP POST /DepositScheme/createDepositScheme responded 200 in 5767.5753 ms
2023-08-13 02:00:52.088 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/DepositScheme/createDepositScheme application/json 313 - 200 - application/json;+charset=utf-8 5914.3972ms
2023-08-13 02:01:59.530 +05:45 [INF] Request starting HTTP/1.1 PUT http://localhost:5000/DepositScheme/updateDepositScheme application/json 148
2023-08-13 02:01:59.536 +05:45 [INF] CORS policy execution successful.
2023-08-13 02:01:59.537 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositSchemeController.UpdateDepositScheme (MicroFinance)'
2023-08-13 02:01:59.587 +05:45 [INF] Route matched with {action = "UpdateDepositScheme", controller = "DepositScheme"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] UpdateDepositScheme(MicroFinance.Dtos.DepositSetup.UpdateDepositSchemeDto) on controller MicroFinance.Controllers.DepositSetup.DepositSchemeController (MicroFinance).
2023-08-13 02:01:59.688 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 02:01:59.693 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 02:01:59.696 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 02:01:59.752 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId], [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [s0].[Id], [s0].[CurrentBalance], [s0].[Description], [s0].[LedgerId], [s0].[Name], [s0].[SubLedgerCode], [s1].[Id], [s1].[CurrentBalance], [s1].[Description], [s1].[LedgerId], [s1].[Name], [s1].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [DepositSchemes] AS [d]
INNER JOIN [SubLedgers] AS [s] ON [d].[DepositSubledgerId] = [s].[Id]
INNER JOIN [SubLedgers] AS [s0] ON [d].[InterestSubLedgerId] = [s0].[Id]
INNER JOIN [SubLedgers] AS [s1] ON [d].[TaxSubledgerId] = [s1].[Id]
INNER JOIN [Ledgers] AS [l] ON [d].[SchemeTypeId] = [l].[Id]
WHERE [d].[Id] = @__id_0
2023-08-13 02:01:59.758 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 02:01:59.851 +05:45 [INF] Executed action MicroFinance.Controllers.DepositSetup.DepositSchemeController.UpdateDepositScheme (MicroFinance) in 263.4943ms
2023-08-13 02:01:59.852 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.DepositSetup.DepositSchemeController.UpdateDepositScheme (MicroFinance)'
2023-08-13 02:01:59.957 +05:45 [INF] HTTP PUT /DepositScheme/updateDepositScheme responded 404 in 420.3249 ms
2023-08-13 02:01:59.957 +05:45 [INF] Request finished HTTP/1.1 PUT http://localhost:5000/DepositScheme/updateDepositScheme application/json 148 - 404 - application/json 426.9694ms
2023-08-13 02:02:18.597 +05:45 [INF] Request starting HTTP/1.1 PUT http://localhost:5000/DepositScheme/updateDepositScheme application/json 148
2023-08-13 02:02:18.598 +05:45 [INF] CORS policy execution successful.
2023-08-13 02:02:18.601 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositSchemeController.UpdateDepositScheme (MicroFinance)'
2023-08-13 02:02:18.615 +05:45 [INF] Route matched with {action = "UpdateDepositScheme", controller = "DepositScheme"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] UpdateDepositScheme(MicroFinance.Dtos.DepositSetup.UpdateDepositSchemeDto) on controller MicroFinance.Controllers.DepositSetup.DepositSchemeController (MicroFinance).
2023-08-13 02:02:18.628 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 02:02:18.646 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 02:02:18.651 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 02:02:18.670 +05:45 [INF] Executed DbCommand (14ms) [Parameters=[@__id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId], [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [s0].[Id], [s0].[CurrentBalance], [s0].[Description], [s0].[LedgerId], [s0].[Name], [s0].[SubLedgerCode], [s1].[Id], [s1].[CurrentBalance], [s1].[Description], [s1].[LedgerId], [s1].[Name], [s1].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [DepositSchemes] AS [d]
INNER JOIN [SubLedgers] AS [s] ON [d].[DepositSubledgerId] = [s].[Id]
INNER JOIN [SubLedgers] AS [s0] ON [d].[InterestSubLedgerId] = [s0].[Id]
INNER JOIN [SubLedgers] AS [s1] ON [d].[TaxSubledgerId] = [s1].[Id]
INNER JOIN [Ledgers] AS [l] ON [d].[SchemeTypeId] = [l].[Id]
WHERE [d].[Id] = @__id_0
2023-08-13 02:02:18.677 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 02:02:18.706 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[@p27='2', @p0='000' (Nullable = false) (Size = 4000), @p1='1', @p2='admin' (Nullable = false) (Size = 4000), @p3='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 4000), @p4='58', @p5='2023-04-14T00:00:00.0000000', @p6='2023-04-14T00:00:00.0000000' (Nullable = true), @p7='8' (Precision = 5) (Scale = 2), @p8='6' (Precision = 5) (Scale = 2), @p9='59', @p10='True', @p11='10' (Precision = 5) (Scale = 2), @p12='1000', @p13='5' (Precision = 5) (Scale = 2), @p14='admin' (Size = 4000), @p15='000' (Size = 4000), @p16='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 4000), @p17='2080-01-01' (Nullable = false) (Size = 4000), @p18='2080-01-01' (Size = 4000), @p19='1', @p20='2023-08-13T01:56:21.5529017', @p21='2023-08-13T02:02:18.6783705+05:45' (Nullable = true), @p22='Daily Saving' (Nullable = false) (Size = 450), @p23='Nepali Name' (Size = 4000), @p24='18', @p25='DS-' (Nullable = false) (Size = 450), @p26='60'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [DepositSchemes] SET [BranchCode] = @p0, [Calculation] = @p1, [CreatedBy] = @p2, [CreatorId] = @p3, [DepositSubledgerId] = @p4, [EnglishCreationDate] = @p5, [EnglishModificationDate] = @p6, [InterestRate] = @p7, [InterestRateOnMinimumBalance] = @p8, [InterestSubLedgerId] = @p9, [IsActive] = @p10, [MaximumInterestRate] = @p11, [MinimumBalance] = @p12, [MinimumInterestRate] = @p13, [ModifiedBy] = @p14, [ModifierBranchCode] = @p15, [ModifierId] = @p16, [NepaliCreationDate] = @p17, [NepaliModificationDate] = @p18, [PostingScheme] = @p19, [RealWorldCreationDate] = @p20, [RealWorldModificationDate] = @p21, [SchemeName] = @p22, [SchemeNameNepali] = @p23, [SchemeTypeId] = @p24, [Symbol] = @p25, [TaxSubledgerId] = @p26
OUTPUT 1
WHERE [Id] = @p27;
2023-08-13 02:02:18.708 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 02:02:18.709 +05:45 [INF] Executed action MicroFinance.Controllers.DepositSetup.DepositSchemeController.UpdateDepositScheme (MicroFinance) in 93.5377ms
2023-08-13 02:02:18.709 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.DepositSetup.DepositSchemeController.UpdateDepositScheme (MicroFinance)'
2023-08-13 02:02:18.709 +05:45 [INF] HTTP PUT /DepositScheme/updateDepositScheme responded 200 in 110.8410 ms
2023-08-13 02:02:18.709 +05:45 [INF] Request finished HTTP/1.1 PUT http://localhost:5000/DepositScheme/updateDepositScheme application/json 148 - 200 - application/json;+charset=utf-8 112.2884ms
2023-08-13 02:02:50.531 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/DepositScheme/getAllDepositScheme - -
2023-08-13 02:02:50.542 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositSchemeController.GetAllDepositScheme (MicroFinance)'
2023-08-13 02:02:50.547 +05:45 [INF] Route matched with {action = "GetAllDepositScheme", controller = "DepositScheme"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[MicroFinance.Dtos.DepositSetup.DepositSchemeDto]]] GetAllDepositScheme() on controller MicroFinance.Controllers.DepositSetup.DepositSchemeController (MicroFinance).
2023-08-13 02:02:50.557 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 02:02:50.564 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 02:02:50.571 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 02:02:50.616 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId], [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [s0].[Id], [s0].[CurrentBalance], [s0].[Description], [s0].[LedgerId], [s0].[Name], [s0].[SubLedgerCode], [s1].[Id], [s1].[CurrentBalance], [s1].[Description], [s1].[LedgerId], [s1].[Name], [s1].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [DepositSchemes] AS [d]
INNER JOIN [SubLedgers] AS [s] ON [d].[DepositSubledgerId] = [s].[Id]
INNER JOIN [SubLedgers] AS [s0] ON [d].[InterestSubLedgerId] = [s0].[Id]
INNER JOIN [SubLedgers] AS [s1] ON [d].[TaxSubledgerId] = [s1].[Id]
INNER JOIN [Ledgers] AS [l] ON [d].[SchemeTypeId] = [l].[Id]
2023-08-13 02:02:50.652 +05:45 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[MicroFinance.Dtos.DepositSetup.DepositSchemeDto, MicroFinance, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-08-13 02:02:50.686 +05:45 [INF] Executed action MicroFinance.Controllers.DepositSetup.DepositSchemeController.GetAllDepositScheme (MicroFinance) in 138.3369ms
2023-08-13 02:02:50.686 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.DepositSetup.DepositSchemeController.GetAllDepositScheme (MicroFinance)'
2023-08-13 02:02:50.687 +05:45 [INF] HTTP GET /DepositScheme/getAllDepositScheme responded 200 in 145.1810 ms
2023-08-13 02:02:50.687 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/DepositScheme/getAllDepositScheme - - - 200 - application/json;+charset=utf-8 156.1883ms
2023-08-13 02:04:21.229 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/DepositAccount/createDepositAccount multipart/form-data;+boundary=----WebKitFormBoundaryB1BsPRK0Cxw8Mm2X 2237
2023-08-13 02:04:21.274 +05:45 [INF] CORS policy execution successful.
2023-08-13 02:04:21.277 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance)'
2023-08-13 02:04:21.288 +05:45 [INF] Route matched with {action = "CreateDepositAccount", controller = "DepositAccount"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateDepositAccount(MicroFinance.Dtos.DepositSetup.CreateDepositAccountDto) on controller MicroFinance.Controllers.DepositSetup.DepositAccountController (MicroFinance).
2023-08-13 02:04:21.296 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 02:04:21.303 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 02:04:21.308 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 02:04:21.361 +05:45 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2023-08-13 02:04:21.373 +05:45 [INF] Executed action MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance) in 84.8625ms
2023-08-13 02:04:21.373 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance)'
2023-08-13 02:04:21.373 +05:45 [INF] HTTP POST /DepositAccount/createDepositAccount responded 400 in 97.0009 ms
2023-08-13 02:04:21.374 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/DepositAccount/createDepositAccount multipart/form-data;+boundary=----WebKitFormBoundaryB1BsPRK0Cxw8Mm2X 2237 - 400 - application/problem+json;+charset=utf-8 149.7822ms
2023-08-13 02:04:38.920 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/DepositAccount/createDepositAccount multipart/form-data;+boundary=----WebKitFormBoundaryBw9zVJ25K9rlEgXL 2242
2023-08-13 02:04:38.923 +05:45 [INF] CORS policy execution successful.
2023-08-13 02:04:38.924 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance)'
2023-08-13 02:04:38.924 +05:45 [INF] Route matched with {action = "CreateDepositAccount", controller = "DepositAccount"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateDepositAccount(MicroFinance.Dtos.DepositSetup.CreateDepositAccountDto) on controller MicroFinance.Controllers.DepositSetup.DepositAccountController (MicroFinance).
2023-08-13 02:04:38.947 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 02:04:38.957 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 02:04:39.022 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 02:04:57.870 +05:45 [INF] Executed DbCommand (35ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [c0].[Id], [c0].[Type], [c1].[Id], [c1].[Code], [c2].[Id], [c2].[Code], [c3].[Id], [c3].[Type]
FROM [Clients] AS [c]
LEFT JOIN [Ledgers] AS [l] ON [c].[ClientShareTypeInfoId] = [l].[Id]
INNER JOIN [ClientTypes] AS [c0] ON [c].[ClientTypeId] = [c0].[Id]
LEFT JOIN [ClientGroups] AS [c1] ON [c].[ClientGroupId] = [c1].[Id]
LEFT JOIN [ClientUnits] AS [c2] ON [c].[ClientUnitId] = [c2].[Id]
LEFT JOIN [ClientKYMTypes] AS [c3] ON [c].[KYMTypeId] = [c3].[Id]
WHERE [c].[Id] = @__id_0
2023-08-13 02:04:59.201 +05:45 [INF] Executed DbCommand (30ms) [Parameters=[@__id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId], [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [s0].[Id], [s0].[CurrentBalance], [s0].[Description], [s0].[LedgerId], [s0].[Name], [s0].[SubLedgerCode], [s1].[Id], [s1].[CurrentBalance], [s1].[Description], [s1].[LedgerId], [s1].[Name], [s1].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [DepositSchemes] AS [d]
INNER JOIN [SubLedgers] AS [s] ON [d].[DepositSubledgerId] = [s].[Id]
INNER JOIN [SubLedgers] AS [s0] ON [d].[InterestSubLedgerId] = [s0].[Id]
INNER JOIN [SubLedgers] AS [s1] ON [d].[TaxSubledgerId] = [s1].[Id]
INNER JOIN [Ledgers] AS [l] ON [d].[SchemeTypeId] = [l].[Id]
WHERE [d].[Id] = @__id_0
2023-08-13 02:05:46.736 +05:45 [INF] Executed DbCommand (83ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 02:07:24.168 +05:45 [INF] Executed action MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance) in 165244.2361ms
2023-08-13 02:07:24.169 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance)'
2023-08-13 02:07:24.221 +05:45 [INF] HTTP POST /DepositAccount/createDepositAccount responded 401 in 165297.9390 ms
2023-08-13 02:07:24.222 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/DepositAccount/createDepositAccount multipart/form-data;+boundary=----WebKitFormBoundaryBw9zVJ25K9rlEgXL 2242 - 401 - application/json 165301.6142ms
2023-08-13 02:18:47.740 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 02:18:47.903 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:18:47.905 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:18:49.142 +05:45 [INF] Executed DbCommand (67ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:18:49.240 +05:45 [INF] Executed DbCommand (61ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:18:49.255 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:18:49.257 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:18:49.282 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 02:18:49.313 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 02:18:49.663 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.675 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.681 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.687 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.697 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.706 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.710 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.730 +05:45 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.735 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.749 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.754 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.764 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.769 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.774 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.778 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.782 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.787 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.792 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.796 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.800 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:18:49.916 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 02:18:50.112 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 02:18:50.112 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 02:18:50.117 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 02:18:50.117 +05:45 [INF] Hosting environment: Development
2023-08-13 02:18:50.118 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 02:19:09.596 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/DepositAccount/createDepositAccount multipart/form-data;+boundary=----WebKitFormBoundary4YKWySa9GksPTWct 2242
2023-08-13 02:19:09.668 +05:45 [INF] CORS policy execution successful.
2023-08-13 02:19:10.000 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance)'
2023-08-13 02:19:10.257 +05:45 [INF] Route matched with {action = "CreateDepositAccount", controller = "DepositAccount"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateDepositAccount(MicroFinance.Dtos.DepositSetup.CreateDepositAccountDto) on controller MicroFinance.Controllers.DepositSetup.DepositAccountController (MicroFinance).
2023-08-13 02:19:10.577 +05:45 [INF] Executed DbCommand (58ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 02:19:10.839 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 02:19:10.859 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 02:19:10.866 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 02:19:19.448 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [c0].[Id], [c0].[Type], [c1].[Id], [c1].[Code], [c2].[Id], [c2].[Code], [c3].[Id], [c3].[Type]
FROM [Clients] AS [c]
LEFT JOIN [Ledgers] AS [l] ON [c].[ClientShareTypeInfoId] = [l].[Id]
INNER JOIN [ClientTypes] AS [c0] ON [c].[ClientTypeId] = [c0].[Id]
LEFT JOIN [ClientGroups] AS [c1] ON [c].[ClientGroupId] = [c1].[Id]
LEFT JOIN [ClientUnits] AS [c2] ON [c].[ClientUnitId] = [c2].[Id]
LEFT JOIN [ClientKYMTypes] AS [c3] ON [c].[KYMTypeId] = [c3].[Id]
WHERE [c].[Id] = @__id_0
2023-08-13 02:19:20.392 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId], [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [s0].[Id], [s0].[CurrentBalance], [s0].[Description], [s0].[LedgerId], [s0].[Name], [s0].[SubLedgerCode], [s1].[Id], [s1].[CurrentBalance], [s1].[Description], [s1].[LedgerId], [s1].[Name], [s1].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [DepositSchemes] AS [d]
INNER JOIN [SubLedgers] AS [s] ON [d].[DepositSubledgerId] = [s].[Id]
INNER JOIN [SubLedgers] AS [s0] ON [d].[InterestSubLedgerId] = [s0].[Id]
INNER JOIN [SubLedgers] AS [s1] ON [d].[TaxSubledgerId] = [s1].[Id]
INNER JOIN [Ledgers] AS [l] ON [d].[SchemeTypeId] = [l].[Id]
WHERE [d].[Id] = @__id_0
2023-08-13 02:19:23.222 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 02:19:23.512 +05:45 [INF] Executed action MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance) in 13247.1881ms
2023-08-13 02:19:23.515 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance)'
2023-08-13 02:19:23.693 +05:45 [INF] HTTP POST /DepositAccount/createDepositAccount responded 401 in 14016.6704 ms
2023-08-13 02:19:23.713 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/DepositAccount/createDepositAccount multipart/form-data;+boundary=----WebKitFormBoundary4YKWySa9GksPTWct 2242 - 401 - application/json 14123.8480ms
2023-08-13 02:19:51.887 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/DepositAccount/createDepositAccount multipart/form-data;+boundary=----WebKitFormBoundaryiOAM3UAA0x9W3sAX 2242
2023-08-13 02:19:51.909 +05:45 [INF] CORS policy execution successful.
2023-08-13 02:19:51.912 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance)'
2023-08-13 02:19:51.914 +05:45 [INF] Route matched with {action = "CreateDepositAccount", controller = "DepositAccount"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateDepositAccount(MicroFinance.Dtos.DepositSetup.CreateDepositAccountDto) on controller MicroFinance.Controllers.DepositSetup.DepositAccountController (MicroFinance).
2023-08-13 02:19:51.996 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 02:19:56.806 +05:45 [INF] Executed DbCommand (45ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 02:19:56.829 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 02:20:06.696 +05:45 [INF] Executed DbCommand (26ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [c0].[Id], [c0].[Type], [c1].[Id], [c1].[Code], [c2].[Id], [c2].[Code], [c3].[Id], [c3].[Type]
FROM [Clients] AS [c]
LEFT JOIN [Ledgers] AS [l] ON [c].[ClientShareTypeInfoId] = [l].[Id]
INNER JOIN [ClientTypes] AS [c0] ON [c].[ClientTypeId] = [c0].[Id]
LEFT JOIN [ClientGroups] AS [c1] ON [c].[ClientGroupId] = [c1].[Id]
LEFT JOIN [ClientUnits] AS [c2] ON [c].[ClientUnitId] = [c2].[Id]
LEFT JOIN [ClientKYMTypes] AS [c3] ON [c].[KYMTypeId] = [c3].[Id]
WHERE [c].[Id] = @__id_0
2023-08-13 02:20:06.874 +05:45 [INF] Executed DbCommand (27ms) [Parameters=[@__id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId], [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [s0].[Id], [s0].[CurrentBalance], [s0].[Description], [s0].[LedgerId], [s0].[Name], [s0].[SubLedgerCode], [s1].[Id], [s1].[CurrentBalance], [s1].[Description], [s1].[LedgerId], [s1].[Name], [s1].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [DepositSchemes] AS [d]
INNER JOIN [SubLedgers] AS [s] ON [d].[DepositSubledgerId] = [s].[Id]
INNER JOIN [SubLedgers] AS [s0] ON [d].[InterestSubLedgerId] = [s0].[Id]
INNER JOIN [SubLedgers] AS [s1] ON [d].[TaxSubledgerId] = [s1].[Id]
INNER JOIN [Ledgers] AS [l] ON [d].[SchemeTypeId] = [l].[Id]
WHERE [d].[Id] = @__id_0
2023-08-13 02:20:18.109 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 02:21:24.391 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 02:21:24.564 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:21:24.566 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:21:25.632 +05:45 [INF] Executed DbCommand (70ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:21:25.727 +05:45 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:21:25.743 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:21:25.745 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:21:25.771 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 02:21:25.801 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 02:21:26.152 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.161 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.166 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.171 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.181 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.189 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.192 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.196 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.199 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.201 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.204 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.218 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.223 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.227 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.231 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.240 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.246 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.260 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.270 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.276 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:21:26.414 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 02:21:26.576 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 02:21:26.576 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 02:21:26.602 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 02:21:26.602 +05:45 [INF] Hosting environment: Development
2023-08-13 02:21:26.602 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 02:21:32.773 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/DepositAccount/createDepositAccount multipart/form-data;+boundary=----WebKitFormBoundaryD1qVRynPxZW6xcqH 2242
2023-08-13 02:21:32.844 +05:45 [INF] CORS policy execution successful.
2023-08-13 02:21:33.143 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance)'
2023-08-13 02:21:33.402 +05:45 [INF] Route matched with {action = "CreateDepositAccount", controller = "DepositAccount"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateDepositAccount(MicroFinance.Dtos.DepositSetup.CreateDepositAccountDto) on controller MicroFinance.Controllers.DepositSetup.DepositAccountController (MicroFinance).
2023-08-13 02:21:33.687 +05:45 [INF] Executed DbCommand (54ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 02:21:33.931 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 02:21:33.952 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 02:21:33.980 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 02:22:20.932 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 02:22:21.159 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:22:21.161 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:22:22.417 +05:45 [INF] Executed DbCommand (93ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:22:22.540 +05:45 [INF] Executed DbCommand (81ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:22:22.556 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:22:22.560 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:22:22.589 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 02:22:22.632 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 02:22:23.053 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.064 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.068 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.074 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.088 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.106 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.120 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.135 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.139 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.162 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.166 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.177 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.181 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.193 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.198 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.203 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.211 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.215 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.219 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.226 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:22:23.400 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 02:23:09.045 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 02:23:09.228 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:23:09.230 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:23:10.266 +05:45 [INF] Executed DbCommand (71ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:23:10.360 +05:45 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:23:10.376 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:23:10.378 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:23:10.409 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 02:23:10.447 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 02:23:10.791 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.801 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.805 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.810 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.818 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.826 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.829 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.833 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.836 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.839 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.866 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.885 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.888 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.892 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.895 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.899 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.904 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.908 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.912 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:10.918 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:23:11.059 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 02:23:11.231 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 02:23:11.231 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 02:23:11.235 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 02:23:11.236 +05:45 [INF] Hosting environment: Development
2023-08-13 02:23:11.256 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 02:23:26.417 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/DepositAccount/createDepositAccount multipart/form-data;+boundary=----WebKitFormBoundaryNxMeaX69DMaNcWzJ 2242
2023-08-13 02:23:26.481 +05:45 [INF] CORS policy execution successful.
2023-08-13 02:23:26.796 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance)'
2023-08-13 02:23:27.064 +05:45 [INF] Route matched with {action = "CreateDepositAccount", controller = "DepositAccount"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateDepositAccount(MicroFinance.Dtos.DepositSetup.CreateDepositAccountDto) on controller MicroFinance.Controllers.DepositSetup.DepositAccountController (MicroFinance).
2023-08-13 02:23:27.357 +05:45 [INF] Executed DbCommand (60ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 02:23:27.681 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 02:23:27.706 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 02:23:27.713 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 02:23:38.399 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [c0].[Id], [c0].[Type], [c1].[Id], [c1].[Code], [c2].[Id], [c2].[Code], [c3].[Id], [c3].[Type]
FROM [Clients] AS [c]
LEFT JOIN [Ledgers] AS [l] ON [c].[ClientShareTypeInfoId] = [l].[Id]
INNER JOIN [ClientTypes] AS [c0] ON [c].[ClientTypeId] = [c0].[Id]
LEFT JOIN [ClientGroups] AS [c1] ON [c].[ClientGroupId] = [c1].[Id]
LEFT JOIN [ClientUnits] AS [c2] ON [c].[ClientUnitId] = [c2].[Id]
LEFT JOIN [ClientKYMTypes] AS [c3] ON [c].[KYMTypeId] = [c3].[Id]
WHERE [c].[Id] = @__id_0
2023-08-13 02:23:39.609 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId], [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [s0].[Id], [s0].[CurrentBalance], [s0].[Description], [s0].[LedgerId], [s0].[Name], [s0].[SubLedgerCode], [s1].[Id], [s1].[CurrentBalance], [s1].[Description], [s1].[LedgerId], [s1].[Name], [s1].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [DepositSchemes] AS [d]
INNER JOIN [SubLedgers] AS [s] ON [d].[DepositSubledgerId] = [s].[Id]
INNER JOIN [SubLedgers] AS [s0] ON [d].[InterestSubLedgerId] = [s0].[Id]
INNER JOIN [SubLedgers] AS [s1] ON [d].[TaxSubledgerId] = [s1].[Id]
INNER JOIN [Ledgers] AS [l] ON [d].[SchemeTypeId] = [l].[Id]
WHERE [d].[Id] = @__id_0
2023-08-13 02:23:45.419 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 02:27:04.317 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 02:27:04.492 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:27:04.494 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:27:05.538 +05:45 [INF] Executed DbCommand (65ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:27:05.630 +05:45 [INF] Executed DbCommand (57ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:27:05.648 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:27:05.649 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:27:05.684 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 02:27:05.718 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 02:27:06.075 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.085 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.089 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.094 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.104 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.112 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.115 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.121 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.126 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.132 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.145 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.161 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.164 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.167 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.169 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.172 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.177 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.182 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.187 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.191 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:27:06.311 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 02:27:06.479 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 02:27:06.479 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 02:27:06.483 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 02:27:06.484 +05:45 [INF] Hosting environment: Development
2023-08-13 02:27:06.505 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 02:27:37.367 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/DepositAccount/createDepositAccount multipart/form-data;+boundary=----WebKitFormBoundarydfwSlieMrQUxbPaw 2242
2023-08-13 02:27:37.461 +05:45 [INF] CORS policy execution successful.
2023-08-13 02:27:37.763 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance)'
2023-08-13 02:27:38.016 +05:45 [INF] Route matched with {action = "CreateDepositAccount", controller = "DepositAccount"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateDepositAccount(MicroFinance.Dtos.DepositSetup.CreateDepositAccountDto) on controller MicroFinance.Controllers.DepositSetup.DepositAccountController (MicroFinance).
2023-08-13 02:27:38.326 +05:45 [INF] Executed DbCommand (72ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 02:27:38.564 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 02:27:38.590 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 02:27:38.594 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 02:27:48.310 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [c0].[Id], [c0].[Type], [c1].[Id], [c1].[Code], [c2].[Id], [c2].[Code], [c3].[Id], [c3].[Type]
FROM [Clients] AS [c]
LEFT JOIN [Ledgers] AS [l] ON [c].[ClientShareTypeInfoId] = [l].[Id]
INNER JOIN [ClientTypes] AS [c0] ON [c].[ClientTypeId] = [c0].[Id]
LEFT JOIN [ClientGroups] AS [c1] ON [c].[ClientGroupId] = [c1].[Id]
LEFT JOIN [ClientUnits] AS [c2] ON [c].[ClientUnitId] = [c2].[Id]
LEFT JOIN [ClientKYMTypes] AS [c3] ON [c].[KYMTypeId] = [c3].[Id]
WHERE [c].[Id] = @__id_0
2023-08-13 02:27:49.100 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId], [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [s0].[Id], [s0].[CurrentBalance], [s0].[Description], [s0].[LedgerId], [s0].[Name], [s0].[SubLedgerCode], [s1].[Id], [s1].[CurrentBalance], [s1].[Description], [s1].[LedgerId], [s1].[Name], [s1].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [DepositSchemes] AS [d]
INNER JOIN [SubLedgers] AS [s] ON [d].[DepositSubledgerId] = [s].[Id]
INNER JOIN [SubLedgers] AS [s0] ON [d].[InterestSubLedgerId] = [s0].[Id]
INNER JOIN [SubLedgers] AS [s1] ON [d].[TaxSubledgerId] = [s1].[Id]
INNER JOIN [Ledgers] AS [l] ON [d].[SchemeTypeId] = [l].[Id]
WHERE [d].[Id] = @__id_0
2023-08-13 02:27:54.317 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 02:29:36.247 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 02:29:36.422 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:29:36.424 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:29:37.447 +05:45 [INF] Executed DbCommand (68ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:29:37.539 +05:45 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:29:37.554 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:29:37.556 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:29:37.581 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 02:29:37.611 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 02:29:37.979 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:37.989 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:37.993 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:37.998 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.007 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.013 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.016 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.020 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.022 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.030 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.033 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.041 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.044 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.047 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.049 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.052 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.065 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.073 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.084 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.090 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:29:38.225 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 02:29:38.379 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 02:29:38.379 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 02:29:38.383 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 02:29:38.383 +05:45 [INF] Hosting environment: Development
2023-08-13 02:29:38.383 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 02:29:53.912 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/DepositAccount/createDepositAccount multipart/form-data;+boundary=----WebKitFormBoundaryWkZTF10EuxoAEDJm 2242
2023-08-13 02:29:53.976 +05:45 [INF] CORS policy execution successful.
2023-08-13 02:29:54.271 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance)'
2023-08-13 02:29:54.539 +05:45 [INF] Route matched with {action = "CreateDepositAccount", controller = "DepositAccount"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateDepositAccount(MicroFinance.Dtos.DepositSetup.CreateDepositAccountDto) on controller MicroFinance.Controllers.DepositSetup.DepositAccountController (MicroFinance).
2023-08-13 02:29:54.860 +05:45 [INF] Executed DbCommand (55ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 02:29:55.133 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 02:29:55.190 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 02:29:55.195 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 02:30:05.817 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [c0].[Id], [c0].[Type], [c1].[Id], [c1].[Code], [c2].[Id], [c2].[Code], [c3].[Id], [c3].[Type]
FROM [Clients] AS [c]
LEFT JOIN [Ledgers] AS [l] ON [c].[ClientShareTypeInfoId] = [l].[Id]
INNER JOIN [ClientTypes] AS [c0] ON [c].[ClientTypeId] = [c0].[Id]
LEFT JOIN [ClientGroups] AS [c1] ON [c].[ClientGroupId] = [c1].[Id]
LEFT JOIN [ClientUnits] AS [c2] ON [c].[ClientUnitId] = [c2].[Id]
LEFT JOIN [ClientKYMTypes] AS [c3] ON [c].[KYMTypeId] = [c3].[Id]
WHERE [c].[Id] = @__id_0
2023-08-13 02:30:06.646 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[BranchCode], [d].[Calculation], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSubledgerId], [d].[EnglishCreationDate], [d].[EnglishModificationDate], [d].[InterestRate], [d].[InterestRateOnMinimumBalance], [d].[InterestSubLedgerId], [d].[IsActive], [d].[MaximumInterestRate], [d].[MinimumBalance], [d].[MinimumInterestRate], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliModificationDate], [d].[PostingScheme], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[SchemeName], [d].[SchemeNameNepali], [d].[SchemeTypeId], [d].[Symbol], [d].[TaxSubledgerId], [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [s0].[Id], [s0].[CurrentBalance], [s0].[Description], [s0].[LedgerId], [s0].[Name], [s0].[SubLedgerCode], [s1].[Id], [s1].[CurrentBalance], [s1].[Description], [s1].[LedgerId], [s1].[Name], [s1].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [DepositSchemes] AS [d]
INNER JOIN [SubLedgers] AS [s] ON [d].[DepositSubledgerId] = [s].[Id]
INNER JOIN [SubLedgers] AS [s0] ON [d].[InterestSubLedgerId] = [s0].[Id]
INNER JOIN [SubLedgers] AS [s1] ON [d].[TaxSubledgerId] = [s1].[Id]
INNER JOIN [Ledgers] AS [l] ON [d].[SchemeTypeId] = [l].[Id]
WHERE [d].[Id] = @__id_0
2023-08-13 02:30:12.970 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 02:32:27.774 +05:45 [INF] Executed DbCommand (88ms) [Parameters=[@p0=NULL (Size = 450), @p1='1', @p2='000' (Nullable = false) (Size = 4000), @p3='1', @p4='admin' (Nullable = false) (Size = 4000), @p5='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 4000), @p6='2', @p7=NULL (Size = 4000), @p8='2023-04-14T00:00:00.0000000', @p9='2053-05-13T00:00:00.0000000', @p10=NULL (DbType = DateTime2), @p11='2023-05-14T00:00:00.0000000', @p12=NULL (DbType = Int32), @p13=NULL (DbType = Int32), @p14=NULL (DbType = Int32), @p15=NULL (DbType = Int32), @p16=NULL (DbType = Int32), @p17='0' (Precision = 18) (Scale = 4), @p18=NULL (DbType = Int32), @p19='7' (Precision = 5) (Scale = 2), @p20='False', @p21='True', @p22=NULL (DbType = Int32), @p23=NULL (Size = 4000), @p24=NULL (Size = 4000), @p25=NULL (Size = 4000), @p26='2080-01-31' (Nullable = false) (Size = 4000), @p27='2110-01-30' (Nullable = false) (Size = 4000), @p28=NULL (Size = 4000), @p29='2080-01-31' (Nullable = false) (Size = 4000), @p30='2024-05-13T00:00:00.0000000', @p31=NULL (Size = 4000), @p32='30', @p33='1', @p34='0' (Precision = 18) (Scale = 4), @p35='2023-08-13T02:30:13.8193834+05:45', @p36=NULL (DbType = DateTime2), @p37='1', @p38=NULL (DbType = Int32), @p39=NULL (Size = 8000) (DbType = Binary), @p40=NULL (Size = 4000), @p41=NULL (DbType = Int32), @p42='1'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [DepositAccounts] ([AccountNumber], [AccountType], [BranchCode], [ClientId], [CreatedBy], [CreatorId], [DepositSchemeId], [Description], [EnglishCreationDate], [EnglishMatureDate], [EnglishModificationDate], [EnglishOpeningDate], [ExpectedDailyDepositAmount], [ExpectedTotalDepositAmount], [ExpectedTotalDepositDay], [ExpectedTotalInterestAmount], [ExpectedTotalReturnAmount], [InterestAmount], [InterestPostingAccountNumberId], [InterestRate], [IsActive], [IsSMSServiceActive], [MatureInterestPostingAccountNumberId], [ModifiedBy], [ModifierBranchCode], [ModifierId], [NepaliCreationDate], [NepaliMatureDate], [NepaliModificationDate], [NepaliOpeningDate], [NextInterestPostingDate], [NomineeName], [Period], [PeriodType], [PrincipalAmount], [RealWorldCreationDate], [RealWorldModificationDate], [ReferredByEmployeeId], [Relation], [SignatureFileData], [SignatureFileName], [SignatureFileType], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42);
2023-08-13 02:32:27.923 +05:45 [INF] Executed DbCommand (29ms) [Parameters=[@p43='1', @p0='DS-00000001' (Size = 450), @p1='1', @p2='000' (Nullable = false) (Size = 4000), @p3='1', @p4='admin' (Nullable = false) (Size = 4000), @p5='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 4000), @p6='2', @p7=NULL (Size = 4000), @p8='2023-04-14T00:00:00.0000000', @p9='2053-05-13T00:00:00.0000000', @p10=NULL (DbType = DateTime2), @p11='2023-05-14T00:00:00.0000000', @p12=NULL (DbType = Int32), @p13=NULL (DbType = Int32), @p14=NULL (DbType = Int32), @p15=NULL (DbType = Int32), @p16=NULL (DbType = Int32), @p17='0' (Precision = 18) (Scale = 4), @p18=NULL (DbType = Int32), @p19='7' (Precision = 5) (Scale = 2), @p20='False', @p21='True', @p22=NULL (DbType = Int32), @p23=NULL (Size = 4000), @p24=NULL (Size = 4000), @p25=NULL (Size = 4000), @p26='2080-01-31' (Nullable = false) (Size = 4000), @p27='2110-01-30' (Nullable = false) (Size = 4000), @p28=NULL (Size = 4000), @p29='2080-01-31' (Nullable = false) (Size = 4000), @p30='2024-05-13T00:00:00.0000000', @p31=NULL (Size = 4000), @p32='30', @p33='1', @p34='0' (Precision = 18) (Scale = 4), @p35='2023-08-13T02:30:13.8193834+05:45', @p36=NULL (DbType = DateTime2), @p37='1', @p38=NULL (DbType = Int32), @p39=NULL (Size = 8000) (DbType = Binary), @p40=NULL (Size = 4000), @p41=NULL (DbType = Int32), @p42='1'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [DepositAccounts] SET [AccountNumber] = @p0, [AccountType] = @p1, [BranchCode] = @p2, [ClientId] = @p3, [CreatedBy] = @p4, [CreatorId] = @p5, [DepositSchemeId] = @p6, [Description] = @p7, [EnglishCreationDate] = @p8, [EnglishMatureDate] = @p9, [EnglishModificationDate] = @p10, [EnglishOpeningDate] = @p11, [ExpectedDailyDepositAmount] = @p12, [ExpectedTotalDepositAmount] = @p13, [ExpectedTotalDepositDay] = @p14, [ExpectedTotalInterestAmount] = @p15, [ExpectedTotalReturnAmount] = @p16, [InterestAmount] = @p17, [InterestPostingAccountNumberId] = @p18, [InterestRate] = @p19, [IsActive] = @p20, [IsSMSServiceActive] = @p21, [MatureInterestPostingAccountNumberId] = @p22, [ModifiedBy] = @p23, [ModifierBranchCode] = @p24, [ModifierId] = @p25, [NepaliCreationDate] = @p26, [NepaliMatureDate] = @p27, [NepaliModificationDate] = @p28, [NepaliOpeningDate] = @p29, [NextInterestPostingDate] = @p30, [NomineeName] = @p31, [Period] = @p32, [PeriodType] = @p33, [PrincipalAmount] = @p34, [RealWorldCreationDate] = @p35, [RealWorldModificationDate] = @p36, [ReferredByEmployeeId] = @p37, [Relation] = @p38, [SignatureFileData] = @p39, [SignatureFileName] = @p40, [SignatureFileType] = @p41, [Status] = @p42
OUTPUT 1
WHERE [Id] = @p43;
2023-08-13 02:32:30.368 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 02:32:30.490 +05:45 [INF] Executed action MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance) in 155945.0266ms
2023-08-13 02:32:30.492 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.DepositSetup.DepositAccountController.CreateDepositAccount (MicroFinance)'
2023-08-13 02:32:30.498 +05:45 [INF] HTTP POST /DepositAccount/createDepositAccount responded 200 in 156517.0852 ms
2023-08-13 02:32:30.519 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/DepositAccount/createDepositAccount multipart/form-data;+boundary=----WebKitFormBoundaryWkZTF10EuxoAEDJm 2242 - 200 - application/json;+charset=utf-8 156610.3578ms
2023-08-13 02:36:24.938 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 02:36:25.161 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:36:25.164 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:36:26.168 +05:45 [INF] Executed DbCommand (67ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:36:26.263 +05:45 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:36:26.279 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:36:26.281 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:36:26.306 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 02:36:26.340 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 02:36:26.687 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.698 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.702 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.706 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.715 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.723 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.726 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.733 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.754 +05:45 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.758 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.764 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.774 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.777 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.780 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.782 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.785 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.790 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.795 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.799 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.803 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:36:26.924 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 02:36:27.078 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 02:36:27.078 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 02:36:27.102 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 02:36:27.102 +05:45 [INF] Hosting environment: Development
2023-08-13 02:36:27.103 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 02:36:49.090 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-13 02:36:49.362 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 274.5736ms
2023-08-13 02:36:49.687 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-13 02:36:50.082 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 394.7863ms
2023-08-13 02:37:14.639 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/DepositAccount/all - -
2023-08-13 02:37:14.987 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.DepositSetup.DepositAccountController.GetAllDepositAccount (MicroFinance)'
2023-08-13 02:37:15.218 +05:45 [INF] Route matched with {action = "GetAllDepositAccount", controller = "DepositAccount"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[MicroFinance.Dtos.DepositSetup.Account.DepositAccountWrapperDto]]] GetAllDepositAccount() on controller MicroFinance.Controllers.DepositSetup.DepositAccountController (MicroFinance).
2023-08-13 02:37:15.507 +05:45 [INF] Executed DbCommand (50ms) [Parameters=[@__id_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 02:37:15.741 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 02:37:15.802 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 02:37:15.808 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 02:37:16.044 +05:45 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[EnglishCreationDate], [d].[EnglishMatureDate], [d].[EnglishModificationDate], [d].[EnglishOpeningDate], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliMatureDate], [d].[NepaliModificationDate], [d].[NepaliOpeningDate], [d].[NextInterestPostingDate], [d].[NomineeName], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[EnglishCreationDate], [d0].[EnglishModificationDate], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[NepaliCreationDate], [d0].[NepaliModificationDate], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[EnglishCreationDate], [d1].[EnglishMatureDate], [d1].[EnglishModificationDate], [d1].[EnglishOpeningDate], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NepaliCreationDate], [d1].[NepaliMatureDate], [d1].[NepaliModificationDate], [d1].[NepaliOpeningDate], [d1].[NextInterestPostingDate], [d1].[NomineeName], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[SignatureFileData], [d1].[SignatureFileName], [d1].[SignatureFileType], [d1].[Status], [t].[Id], [t].[CompanyCalendarEndDate], [t].[CompanyCalendarStartDate], [t].[DepositAccountId], [t].[JointClientId], [t].[RealWorldEndDate], [t].[RealWorldStartDate], [t].[Id0], [t].[BranchCode], [t].[ClientAccountPurposeNepali], [t].[ClientCastCode], [t].[ClientCitizenShipIssueDate], [t].[ClientCitizenShipIssueDistrict], [t].[ClientCitizenshipFileData], [t].[ClientCitizenshipFileName], [t].[ClientCitizenshipFileType], [t].[ClientCitizenshipNumber], [t].[ClientDateOfBirth], [t].[ClientEducationStatus], [t].[ClientEmail], [t].[ClientFatherInLaw], [t].[ClientFatherName], [t].[ClientFatherNameNepali], [t].[ClientFirstName], [t].[ClientGenderCode], [t].[ClientGrandFatherName], [t].[ClientGrandFatherNameNepali], [t].[ClientGroupId], [t].[ClientId], [t].[ClientIfMemberOfOtherParty], [t].[ClientIncomeSource], [t].[ClientLastName], [t].[ClientMartialStatusCode], [t].[ClientMiddleName], [t].[ClientMobileNumber1], [t].[ClientMobileNumber2], [t].[ClientMotherInLaw], [t].[ClientMotherName], [t].[ClientMotherNameNepali], [t].[ClientNameOfDaughters], [t].[ClientNameOfSons], [t].[ClientNationality], [t].[ClientNationalityIdStatus], [t].[ClientNepaliName], [t].[ClientOccupation], [t].[ClientOtherInfo], [t].[ClientOtherInfo2], [t].[ClientPanNumber], [t].[ClientPhotoFileData], [t].[ClientPhotoFileName], [t].[ClientPhotoFileType], [t].[ClientShareTypeInfoId], [t].[ClientSignatureFileData], [t].[ClientSignatureFileName], [t].[ClientSignatureFileType], [t].[ClientSpouseName], [t].[ClientSpouseOccupation], [t].[ClientTelephoneNumber1], [t].[ClientTelephoneNumber2], [t].[ClientTypeId], [t].[ClientUnitId], [t].[ClientVotingId], [t].[ClientWebsite], [t].[CreatedBy], [t].[CreatedOn], [t].[CreatorId], [t].[IsActive], [t].[IsKYMUpdated], [t].[IsModified], [t].[IsShareAllowed], [t].[KYMTypeId], [t].[ModificationCount], [t].[ModifiedBy], [t].[ModifiedOn], [t].[ModifierId], [t].[NomineeAddress], [t].[NomineeCitizenshipNumber], [t].[NomineeContactNumber], [t].[NomineeIntroducedBy], [t].[NomineeName], [t].[NomineeNepaliName], [t].[NomineeNepaliRelation], [t].[NomineePhotoFileData], [t].[NomineePhotoFileName], [t].[NomineePhotoFileType], [t].[NomineeRelation], [t].[PermanentDistrictCode], [t].[PermanentStateCode], [t].[PermanentToleVillage], [t].[PermanentToleVillageNepali], [t].[PermanentVdcMunicipality], [t].[PermanentVdcMunicipalityNepali], [t].[PermanentWardNumber], [t].[PermanentWardNumberNepali], [t].[RegistrationDate], [t].[TemporaryDistrictCode], [t].[TemporaryStateCode], [t].[TemporaryToleVillage], [t].[TemporaryToleVillageNepali], [t].[TemporaryVdcMunicipality], [t].[TemporaryVdcMunicipalityNepali], [t].[TemporaryWardNumber], [t].[TemporaryWardNumberNepali]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
LEFT JOIN (
    SELECT [j].[Id], [j].[CompanyCalendarEndDate], [j].[CompanyCalendarStartDate], [j].[DepositAccountId], [j].[JointClientId], [j].[RealWorldEndDate], [j].[RealWorldStartDate], [c0].[Id] AS [Id0], [c0].[BranchCode], [c0].[ClientAccountPurposeNepali], [c0].[ClientCastCode], [c0].[ClientCitizenShipIssueDate], [c0].[ClientCitizenShipIssueDistrict], [c0].[ClientCitizenshipFileData], [c0].[ClientCitizenshipFileName], [c0].[ClientCitizenshipFileType], [c0].[ClientCitizenshipNumber], [c0].[ClientDateOfBirth], [c0].[ClientEducationStatus], [c0].[ClientEmail], [c0].[ClientFatherInLaw], [c0].[ClientFatherName], [c0].[ClientFatherNameNepali], [c0].[ClientFirstName], [c0].[ClientGenderCode], [c0].[ClientGrandFatherName], [c0].[ClientGrandFatherNameNepali], [c0].[ClientGroupId], [c0].[ClientId], [c0].[ClientIfMemberOfOtherParty], [c0].[ClientIncomeSource], [c0].[ClientLastName], [c0].[ClientMartialStatusCode], [c0].[ClientMiddleName], [c0].[ClientMobileNumber1], [c0].[ClientMobileNumber2], [c0].[ClientMotherInLaw], [c0].[ClientMotherName], [c0].[ClientMotherNameNepali], [c0].[ClientNameOfDaughters], [c0].[ClientNameOfSons], [c0].[ClientNationality], [c0].[ClientNationalityIdStatus], [c0].[ClientNepaliName], [c0].[ClientOccupation], [c0].[ClientOtherInfo], [c0].[ClientOtherInfo2], [c0].[ClientPanNumber], [c0].[ClientPhotoFileData], [c0].[ClientPhotoFileName], [c0].[ClientPhotoFileType], [c0].[ClientShareTypeInfoId], [c0].[ClientSignatureFileData], [c0].[ClientSignatureFileName], [c0].[ClientSignatureFileType], [c0].[ClientSpouseName], [c0].[ClientSpouseOccupation], [c0].[ClientTelephoneNumber1], [c0].[ClientTelephoneNumber2], [c0].[ClientTypeId], [c0].[ClientUnitId], [c0].[ClientVotingId], [c0].[ClientWebsite], [c0].[CreatedBy], [c0].[CreatedOn], [c0].[CreatorId], [c0].[IsActive], [c0].[IsKYMUpdated], [c0].[IsModified], [c0].[IsShareAllowed], [c0].[KYMTypeId], [c0].[ModificationCount], [c0].[ModifiedBy], [c0].[ModifiedOn], [c0].[ModifierId], [c0].[NomineeAddress], [c0].[NomineeCitizenshipNumber], [c0].[NomineeContactNumber], [c0].[NomineeIntroducedBy], [c0].[NomineeName], [c0].[NomineeNepaliName], [c0].[NomineeNepaliRelation], [c0].[NomineePhotoFileData], [c0].[NomineePhotoFileName], [c0].[NomineePhotoFileType], [c0].[NomineeRelation], [c0].[PermanentDistrictCode], [c0].[PermanentStateCode], [c0].[PermanentToleVillage], [c0].[PermanentToleVillageNepali], [c0].[PermanentVdcMunicipality], [c0].[PermanentVdcMunicipalityNepali], [c0].[PermanentWardNumber], [c0].[PermanentWardNumberNepali], [c0].[RegistrationDate], [c0].[TemporaryDistrictCode], [c0].[TemporaryStateCode], [c0].[TemporaryToleVillage], [c0].[TemporaryToleVillageNepali], [c0].[TemporaryVdcMunicipality], [c0].[TemporaryVdcMunicipalityNepali], [c0].[TemporaryWardNumber], [c0].[TemporaryWardNumberNepali]
    FROM [JointAccounts] AS [j]
    INNER JOIN [Clients] AS [c0] ON [j].[JointClientId] = [c0].[Id]
    WHERE ([j].[RealWorldEndDate] IS NULL) AND ([j].[CompanyCalendarEndDate] IS NULL)
) AS [t] ON [d].[Id] = [t].[DepositAccountId]
ORDER BY [d].[Id], [c].[Id], [d0].[Id], [d1].[Id], [t].[Id]
2023-08-13 02:37:16.112 +05:45 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MicroFinance.Dtos.DepositSetup.Account.DepositAccountWrapperDto, MicroFinance, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-08-13 02:37:16.229 +05:45 [INF] Executed action MicroFinance.Controllers.DepositSetup.DepositAccountController.GetAllDepositAccount (MicroFinance) in 1005.8069ms
2023-08-13 02:37:16.230 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.DepositSetup.DepositAccountController.GetAllDepositAccount (MicroFinance)'
2023-08-13 02:37:16.236 +05:45 [INF] HTTP GET /DepositAccount/all responded 200 in 1559.6674 ms
2023-08-13 02:37:16.251 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/DepositAccount/all - - - 200 - application/json;+charset=utf-8 1619.8798ms
2023-08-13 02:38:37.036 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 02:38:37.209 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:38:37.211 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:38:38.189 +05:45 [INF] Executed DbCommand (65ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:38:38.302 +05:45 [INF] Executed DbCommand (78ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:38:38.316 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:38:38.318 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:38:38.344 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 02:38:38.377 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 02:38:38.728 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.737 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.741 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.745 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.754 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.766 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.770 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.775 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.778 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.781 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.785 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.795 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.798 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.801 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.833 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.836 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.840 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.843 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.847 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.851 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:38:38.967 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 02:38:39.119 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 02:38:39.119 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 02:38:39.123 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 02:38:39.124 +05:45 [INF] Hosting environment: Development
2023-08-13 02:38:39.124 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 02:38:44.943 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-13 02:38:45.190 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 250.5395ms
2023-08-13 02:38:45.513 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-13 02:38:45.918 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 404.5788ms
2023-08-13 02:39:21.011 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Share/shareKitta application/json 28
2023-08-13 02:39:21.013 +05:45 [INF] CORS policy execution successful.
2023-08-13 02:39:21.028 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Share.ShareController.CreateShareKitta (MicroFinance)'
2023-08-13 02:39:21.061 +05:45 [INF] Route matched with {action = "CreateShareKitta", controller = "Share"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateShareKitta(MicroFinance.Dtos.Share.CreateShareKittaDto) on controller MicroFinance.Controllers.Share.ShareController (MicroFinance).
2023-08-13 02:39:21.449 +05:45 [INF] Executed action MicroFinance.Controllers.Share.ShareController.CreateShareKitta (MicroFinance) in 384.1866ms
2023-08-13 02:39:21.451 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Share.ShareController.CreateShareKitta (MicroFinance)'
2023-08-13 02:39:21.495 +05:45 [INF] HTTP POST /Share/shareKitta responded 401 in 475.3343 ms
2023-08-13 02:39:21.498 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Share/shareKitta application/json 28 - 401 - application/json 487.3890ms
2023-08-13 02:39:37.114 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Share/shareKitta application/json 28
2023-08-13 02:39:37.115 +05:45 [INF] CORS policy execution successful.
2023-08-13 02:39:37.115 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Share.ShareController.CreateShareKitta (MicroFinance)'
2023-08-13 02:39:37.116 +05:45 [INF] Route matched with {action = "CreateShareKitta", controller = "Share"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateShareKitta(MicroFinance.Dtos.Share.CreateShareKittaDto) on controller MicroFinance.Controllers.Share.ShareController (MicroFinance).
2023-08-13 02:39:37.473 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[CurrentKitta], [s].[IsActive], [s].[PriceOfOneKitta]
FROM [ShareKittas] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2023-08-13 02:39:37.774 +05:45 [INF] Executed DbCommand (80ms) [Parameters=[@p0='0' (Precision = 18) (Scale = 2), @p1='True', @p2='100'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [ShareKittas] ([CurrentKitta], [IsActive], [PriceOfOneKitta])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2023-08-13 02:39:37.853 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 02:39:37.866 +05:45 [INF] Executed action MicroFinance.Controllers.Share.ShareController.CreateShareKitta (MicroFinance) in 750.1155ms
2023-08-13 02:39:37.867 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Share.ShareController.CreateShareKitta (MicroFinance)'
2023-08-13 02:39:37.869 +05:45 [INF] HTTP POST /Share/shareKitta responded 200 in 753.6630 ms
2023-08-13 02:39:37.884 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Share/shareKitta application/json 28 - 200 - application/json;+charset=utf-8 770.0826ms
2023-08-13 02:40:42.684 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 198
2023-08-13 02:40:42.685 +05:45 [INF] CORS policy execution successful.
2023-08-13 02:40:42.686 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-08-13 02:40:42.690 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-13 02:40:46.070 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-08-13 02:40:46.614 +05:45 [INF] Executed DbCommand (42ms) [Parameters=[@__depositAccountId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccountNumber], [t].[AccountType], [t].[BranchCode], [t].[ClientId], [t].[CreatedBy], [t].[CreatorId], [t].[DepositSchemeId], [t].[Description], [t].[EnglishCreationDate], [t].[EnglishMatureDate], [t].[EnglishModificationDate], [t].[EnglishOpeningDate], [t].[ExpectedDailyDepositAmount], [t].[ExpectedTotalDepositAmount], [t].[ExpectedTotalDepositDay], [t].[ExpectedTotalInterestAmount], [t].[ExpectedTotalReturnAmount], [t].[InterestAmount], [t].[InterestPostingAccountNumberId], [t].[InterestRate], [t].[IsActive], [t].[IsSMSServiceActive], [t].[MatureInterestPostingAccountNumberId], [t].[ModifiedBy], [t].[ModifierBranchCode], [t].[ModifierId], [t].[NepaliCreationDate], [t].[NepaliMatureDate], [t].[NepaliModificationDate], [t].[NepaliOpeningDate], [t].[NextInterestPostingDate], [t].[NomineeName], [t].[Period], [t].[PeriodType], [t].[PrincipalAmount], [t].[RealWorldCreationDate], [t].[RealWorldModificationDate], [t].[ReferredByEmployeeId], [t].[Relation], [t].[SignatureFileData], [t].[SignatureFileName], [t].[SignatureFileType], [t].[Status], [t].[Id0], [t].[BranchCode0], [t].[ClientAccountPurposeNepali], [t].[ClientCastCode], [t].[ClientCitizenShipIssueDate], [t].[ClientCitizenShipIssueDistrict], [t].[ClientCitizenshipFileData], [t].[ClientCitizenshipFileName], [t].[ClientCitizenshipFileType], [t].[ClientCitizenshipNumber], [t].[ClientDateOfBirth], [t].[ClientEducationStatus], [t].[ClientEmail], [t].[ClientFatherInLaw], [t].[ClientFatherName], [t].[ClientFatherNameNepali], [t].[ClientFirstName], [t].[ClientGenderCode], [t].[ClientGrandFatherName], [t].[ClientGrandFatherNameNepali], [t].[ClientGroupId], [t].[ClientId0], [t].[ClientIfMemberOfOtherParty], [t].[ClientIncomeSource], [t].[ClientLastName], [t].[ClientMartialStatusCode], [t].[ClientMiddleName], [t].[ClientMobileNumber1], [t].[ClientMobileNumber2], [t].[ClientMotherInLaw], [t].[ClientMotherName], [t].[ClientMotherNameNepali], [t].[ClientNameOfDaughters], [t].[ClientNameOfSons], [t].[ClientNationality], [t].[ClientNationalityIdStatus], [t].[ClientNepaliName], [t].[ClientOccupation], [t].[ClientOtherInfo], [t].[ClientOtherInfo2], [t].[ClientPanNumber], [t].[ClientPhotoFileData], [t].[ClientPhotoFileName], [t].[ClientPhotoFileType], [t].[ClientShareTypeInfoId], [t].[ClientSignatureFileData], [t].[ClientSignatureFileName], [t].[ClientSignatureFileType], [t].[ClientSpouseName], [t].[ClientSpouseOccupation], [t].[ClientTelephoneNumber1], [t].[ClientTelephoneNumber2], [t].[ClientTypeId], [t].[ClientUnitId], [t].[ClientVotingId], [t].[ClientWebsite], [t].[CreatedBy0], [t].[CreatedOn], [t].[CreatorId0], [t].[IsActive0], [t].[IsKYMUpdated], [t].[IsModified], [t].[IsShareAllowed], [t].[KYMTypeId], [t].[ModificationCount], [t].[ModifiedBy0], [t].[ModifiedOn], [t].[ModifierId0], [t].[NomineeAddress], [t].[NomineeCitizenshipNumber], [t].[NomineeContactNumber], [t].[NomineeIntroducedBy], [t].[NomineeName0], [t].[NomineeNepaliName], [t].[NomineeNepaliRelation], [t].[NomineePhotoFileData], [t].[NomineePhotoFileName], [t].[NomineePhotoFileType], [t].[NomineeRelation], [t].[PermanentDistrictCode], [t].[PermanentStateCode], [t].[PermanentToleVillage], [t].[PermanentToleVillageNepali], [t].[PermanentVdcMunicipality], [t].[PermanentVdcMunicipalityNepali], [t].[PermanentWardNumber], [t].[PermanentWardNumberNepali], [t].[RegistrationDate], [t].[TemporaryDistrictCode], [t].[TemporaryStateCode], [t].[TemporaryToleVillage], [t].[TemporaryToleVillageNepali], [t].[TemporaryVdcMunicipality], [t].[TemporaryVdcMunicipalityNepali], [t].[TemporaryWardNumber], [t].[TemporaryWardNumberNepali], [t].[Id1], [t].[BranchCode1], [t].[Calculation], [t].[CreatedBy1], [t].[CreatorId1], [t].[DepositSubledgerId], [t].[EnglishCreationDate0], [t].[EnglishModificationDate0], [t].[InterestRate0], [t].[InterestRateOnMinimumBalance], [t].[InterestSubLedgerId], [t].[IsActive1], [t].[MaximumInterestRate], [t].[MinimumBalance], [t].[MinimumInterestRate], [t].[ModifiedBy1], [t].[ModifierBranchCode0], [t].[ModifierId1], [t].[NepaliCreationDate0], [t].[NepaliModificationDate0], [t].[PostingScheme], [t].[RealWorldCreationDate0], [t].[RealWorldModificationDate0], [t].[SchemeName], [t].[SchemeNameNepali], [t].[SchemeTypeId], [t].[Symbol], [t].[TaxSubledgerId], [t].[Id2], [t].[AccountNumber0], [t].[AccountType0], [t].[BranchCode2], [t].[ClientId1], [t].[CreatedBy2], [t].[CreatorId2], [t].[DepositSchemeId0], [t].[Description0], [t].[EnglishCreationDate1], [t].[EnglishMatureDate0], [t].[EnglishModificationDate1], [t].[EnglishOpeningDate0], [t].[ExpectedDailyDepositAmount0], [t].[ExpectedTotalDepositAmount0], [t].[ExpectedTotalDepositDay0], [t].[ExpectedTotalInterestAmount0], [t].[ExpectedTotalReturnAmount0], [t].[InterestAmount0], [t].[InterestPostingAccountNumberId0], [t].[InterestRate1], [t].[IsActive2], [t].[IsSMSServiceActive0], [t].[MatureInterestPostingAccountNumberId0], [t].[ModifiedBy2], [t].[ModifierBranchCode1], [t].[ModifierId2], [t].[NepaliCreationDate1], [t].[NepaliMatureDate0], [t].[NepaliModificationDate1], [t].[NepaliOpeningDate0], [t].[NextInterestPostingDate0], [t].[NomineeName1], [t].[Period0], [t].[PeriodType0], [t].[PrincipalAmount0], [t].[RealWorldCreationDate1], [t].[RealWorldModificationDate1], [t].[ReferredByEmployeeId0], [t].[Relation0], [t].[SignatureFileData0], [t].[SignatureFileName0], [t].[SignatureFileType0], [t].[Status0], [t0].[Id], [t0].[CompanyCalendarEndDate], [t0].[CompanyCalendarStartDate], [t0].[DepositAccountId], [t0].[JointClientId], [t0].[RealWorldEndDate], [t0].[RealWorldStartDate], [t0].[Id0], [t0].[BranchCode], [t0].[ClientAccountPurposeNepali], [t0].[ClientCastCode], [t0].[ClientCitizenShipIssueDate], [t0].[ClientCitizenShipIssueDistrict], [t0].[ClientCitizenshipFileData], [t0].[ClientCitizenshipFileName], [t0].[ClientCitizenshipFileType], [t0].[ClientCitizenshipNumber], [t0].[ClientDateOfBirth], [t0].[ClientEducationStatus], [t0].[ClientEmail], [t0].[ClientFatherInLaw], [t0].[ClientFatherName], [t0].[ClientFatherNameNepali], [t0].[ClientFirstName], [t0].[ClientGenderCode], [t0].[ClientGrandFatherName], [t0].[ClientGrandFatherNameNepali], [t0].[ClientGroupId], [t0].[ClientId], [t0].[ClientIfMemberOfOtherParty], [t0].[ClientIncomeSource], [t0].[ClientLastName], [t0].[ClientMartialStatusCode], [t0].[ClientMiddleName], [t0].[ClientMobileNumber1], [t0].[ClientMobileNumber2], [t0].[ClientMotherInLaw], [t0].[ClientMotherName], [t0].[ClientMotherNameNepali], [t0].[ClientNameOfDaughters], [t0].[ClientNameOfSons], [t0].[ClientNationality], [t0].[ClientNationalityIdStatus], [t0].[ClientNepaliName], [t0].[ClientOccupation], [t0].[ClientOtherInfo], [t0].[ClientOtherInfo2], [t0].[ClientPanNumber], [t0].[ClientPhotoFileData], [t0].[ClientPhotoFileName], [t0].[ClientPhotoFileType], [t0].[ClientShareTypeInfoId], [t0].[ClientSignatureFileData], [t0].[ClientSignatureFileName], [t0].[ClientSignatureFileType], [t0].[ClientSpouseName], [t0].[ClientSpouseOccupation], [t0].[ClientTelephoneNumber1], [t0].[ClientTelephoneNumber2], [t0].[ClientTypeId], [t0].[ClientUnitId], [t0].[ClientVotingId], [t0].[ClientWebsite], [t0].[CreatedBy], [t0].[CreatedOn], [t0].[CreatorId], [t0].[IsActive], [t0].[IsKYMUpdated], [t0].[IsModified], [t0].[IsShareAllowed], [t0].[KYMTypeId], [t0].[ModificationCount], [t0].[ModifiedBy], [t0].[ModifiedOn], [t0].[ModifierId], [t0].[NomineeAddress], [t0].[NomineeCitizenshipNumber], [t0].[NomineeContactNumber], [t0].[NomineeIntroducedBy], [t0].[NomineeName], [t0].[NomineeNepaliName], [t0].[NomineeNepaliRelation], [t0].[NomineePhotoFileData], [t0].[NomineePhotoFileName], [t0].[NomineePhotoFileType], [t0].[NomineeRelation], [t0].[PermanentDistrictCode], [t0].[PermanentStateCode], [t0].[PermanentToleVillage], [t0].[PermanentToleVillageNepali], [t0].[PermanentVdcMunicipality], [t0].[PermanentVdcMunicipalityNepali], [t0].[PermanentWardNumber], [t0].[PermanentWardNumberNepali], [t0].[RegistrationDate], [t0].[TemporaryDistrictCode], [t0].[TemporaryStateCode], [t0].[TemporaryToleVillage], [t0].[TemporaryToleVillageNepali], [t0].[TemporaryVdcMunicipality], [t0].[TemporaryVdcMunicipalityNepali], [t0].[TemporaryWardNumber], [t0].[TemporaryWardNumberNepali]
FROM (
    SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[EnglishCreationDate], [d].[EnglishMatureDate], [d].[EnglishModificationDate], [d].[EnglishOpeningDate], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliMatureDate], [d].[NepaliModificationDate], [d].[NepaliOpeningDate], [d].[NextInterestPostingDate], [d].[NomineeName], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id] AS [Id0], [c].[BranchCode] AS [BranchCode0], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId] AS [ClientId0], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy] AS [CreatedBy0], [c].[CreatedOn], [c].[CreatorId] AS [CreatorId0], [c].[IsActive] AS [IsActive0], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy] AS [ModifiedBy0], [c].[ModifiedOn], [c].[ModifierId] AS [ModifierId0], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName] AS [NomineeName0], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id] AS [Id1], [d0].[BranchCode] AS [BranchCode1], [d0].[Calculation], [d0].[CreatedBy] AS [CreatedBy1], [d0].[CreatorId] AS [CreatorId1], [d0].[DepositSubledgerId], [d0].[EnglishCreationDate] AS [EnglishCreationDate0], [d0].[EnglishModificationDate] AS [EnglishModificationDate0], [d0].[InterestRate] AS [InterestRate0], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive] AS [IsActive1], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy] AS [ModifiedBy1], [d0].[ModifierBranchCode] AS [ModifierBranchCode0], [d0].[ModifierId] AS [ModifierId1], [d0].[NepaliCreationDate] AS [NepaliCreationDate0], [d0].[NepaliModificationDate] AS [NepaliModificationDate0], [d0].[PostingScheme], [d0].[RealWorldCreationDate] AS [RealWorldCreationDate0], [d0].[RealWorldModificationDate] AS [RealWorldModificationDate0], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id] AS [Id2], [d1].[AccountNumber] AS [AccountNumber0], [d1].[AccountType] AS [AccountType0], [d1].[BranchCode] AS [BranchCode2], [d1].[ClientId] AS [ClientId1], [d1].[CreatedBy] AS [CreatedBy2], [d1].[CreatorId] AS [CreatorId2], [d1].[DepositSchemeId] AS [DepositSchemeId0], [d1].[Description] AS [Description0], [d1].[EnglishCreationDate] AS [EnglishCreationDate1], [d1].[EnglishMatureDate] AS [EnglishMatureDate0], [d1].[EnglishModificationDate] AS [EnglishModificationDate1], [d1].[EnglishOpeningDate] AS [EnglishOpeningDate0], [d1].[ExpectedDailyDepositAmount] AS [ExpectedDailyDepositAmount0], [d1].[ExpectedTotalDepositAmount] AS [ExpectedTotalDepositAmount0], [d1].[ExpectedTotalDepositDay] AS [ExpectedTotalDepositDay0], [d1].[ExpectedTotalInterestAmount] AS [ExpectedTotalInterestAmount0], [d1].[ExpectedTotalReturnAmount] AS [ExpectedTotalReturnAmount0], [d1].[InterestAmount] AS [InterestAmount0], [d1].[InterestPostingAccountNumberId] AS [InterestPostingAccountNumberId0], [d1].[InterestRate] AS [InterestRate1], [d1].[IsActive] AS [IsActive2], [d1].[IsSMSServiceActive] AS [IsSMSServiceActive0], [d1].[MatureInterestPostingAccountNumberId] AS [MatureInterestPostingAccountNumberId0], [d1].[ModifiedBy] AS [ModifiedBy2], [d1].[ModifierBranchCode] AS [ModifierBranchCode1], [d1].[ModifierId] AS [ModifierId2], [d1].[NepaliCreationDate] AS [NepaliCreationDate1], [d1].[NepaliMatureDate] AS [NepaliMatureDate0], [d1].[NepaliModificationDate] AS [NepaliModificationDate1], [d1].[NepaliOpeningDate] AS [NepaliOpeningDate0], [d1].[NextInterestPostingDate] AS [NextInterestPostingDate0], [d1].[NomineeName] AS [NomineeName1], [d1].[Period] AS [Period0], [d1].[PeriodType] AS [PeriodType0], [d1].[PrincipalAmount] AS [PrincipalAmount0], [d1].[RealWorldCreationDate] AS [RealWorldCreationDate1], [d1].[RealWorldModificationDate] AS [RealWorldModificationDate1], [d1].[ReferredByEmployeeId] AS [ReferredByEmployeeId0], [d1].[Relation] AS [Relation0], [d1].[SignatureFileData] AS [SignatureFileData0], [d1].[SignatureFileName] AS [SignatureFileName0], [d1].[SignatureFileType] AS [SignatureFileType0], [d1].[Status] AS [Status0]
    FROM [DepositAccounts] AS [d]
    INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
    INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
    LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
    WHERE [d].[Id] = @__depositAccountId_0 AND [d].[Status] = 1
) AS [t]
LEFT JOIN (
    SELECT [j].[Id], [j].[CompanyCalendarEndDate], [j].[CompanyCalendarStartDate], [j].[DepositAccountId], [j].[JointClientId], [j].[RealWorldEndDate], [j].[RealWorldStartDate], [c0].[Id] AS [Id0], [c0].[BranchCode], [c0].[ClientAccountPurposeNepali], [c0].[ClientCastCode], [c0].[ClientCitizenShipIssueDate], [c0].[ClientCitizenShipIssueDistrict], [c0].[ClientCitizenshipFileData], [c0].[ClientCitizenshipFileName], [c0].[ClientCitizenshipFileType], [c0].[ClientCitizenshipNumber], [c0].[ClientDateOfBirth], [c0].[ClientEducationStatus], [c0].[ClientEmail], [c0].[ClientFatherInLaw], [c0].[ClientFatherName], [c0].[ClientFatherNameNepali], [c0].[ClientFirstName], [c0].[ClientGenderCode], [c0].[ClientGrandFatherName], [c0].[ClientGrandFatherNameNepali], [c0].[ClientGroupId], [c0].[ClientId], [c0].[ClientIfMemberOfOtherParty], [c0].[ClientIncomeSource], [c0].[ClientLastName], [c0].[ClientMartialStatusCode], [c0].[ClientMiddleName], [c0].[ClientMobileNumber1], [c0].[ClientMobileNumber2], [c0].[ClientMotherInLaw], [c0].[ClientMotherName], [c0].[ClientMotherNameNepali], [c0].[ClientNameOfDaughters], [c0].[ClientNameOfSons], [c0].[ClientNationality], [c0].[ClientNationalityIdStatus], [c0].[ClientNepaliName], [c0].[ClientOccupation], [c0].[ClientOtherInfo], [c0].[ClientOtherInfo2], [c0].[ClientPanNumber], [c0].[ClientPhotoFileData], [c0].[ClientPhotoFileName], [c0].[ClientPhotoFileType], [c0].[ClientShareTypeInfoId], [c0].[ClientSignatureFileData], [c0].[ClientSignatureFileName], [c0].[ClientSignatureFileType], [c0].[ClientSpouseName], [c0].[ClientSpouseOccupation], [c0].[ClientTelephoneNumber1], [c0].[ClientTelephoneNumber2], [c0].[ClientTypeId], [c0].[ClientUnitId], [c0].[ClientVotingId], [c0].[ClientWebsite], [c0].[CreatedBy], [c0].[CreatedOn], [c0].[CreatorId], [c0].[IsActive], [c0].[IsKYMUpdated], [c0].[IsModified], [c0].[IsShareAllowed], [c0].[KYMTypeId], [c0].[ModificationCount], [c0].[ModifiedBy], [c0].[ModifiedOn], [c0].[ModifierId], [c0].[NomineeAddress], [c0].[NomineeCitizenshipNumber], [c0].[NomineeContactNumber], [c0].[NomineeIntroducedBy], [c0].[NomineeName], [c0].[NomineeNepaliName], [c0].[NomineeNepaliRelation], [c0].[NomineePhotoFileData], [c0].[NomineePhotoFileName], [c0].[NomineePhotoFileType], [c0].[NomineeRelation], [c0].[PermanentDistrictCode], [c0].[PermanentStateCode], [c0].[PermanentToleVillage], [c0].[PermanentToleVillageNepali], [c0].[PermanentVdcMunicipality], [c0].[PermanentVdcMunicipalityNepali], [c0].[PermanentWardNumber], [c0].[PermanentWardNumberNepali], [c0].[RegistrationDate], [c0].[TemporaryDistrictCode], [c0].[TemporaryStateCode], [c0].[TemporaryToleVillage], [c0].[TemporaryToleVillageNepali], [c0].[TemporaryVdcMunicipality], [c0].[TemporaryVdcMunicipalityNepali], [c0].[TemporaryWardNumber], [c0].[TemporaryWardNumberNepali]
    FROM [JointAccounts] AS [j]
    INNER JOIN [Clients] AS [c0] ON [j].[JointClientId] = [c0].[Id]
    WHERE ([j].[RealWorldEndDate] IS NULL) AND ([j].[CompanyCalendarEndDate] IS NULL)
) AS [t0] ON [t].[Id] = [t0].[DepositAccountId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t].[Id2], [t0].[Id]
2023-08-13 02:40:46.698 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-13 02:40:46.775 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[@__id_0='58'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [SubLedgers] AS [s]
INNER JOIN [Ledgers] AS [l] ON [s].[LedgerId] = [l].[Id]
WHERE [s].[Id] = @__id_0
2023-08-13 02:40:46.849 +05:45 [INF] 8/13/2023 2:40:46 AM: Locking required accounts for the Deposit transaction...
2023-08-13 02:40:46.997 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@p0='Thousand' (Size = 4000), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3='000' (Nullable = false) (Size = 4000), @p4='admin' (Nullable = false) (Size = 4000), @p5='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 4000), @p6='2023-04-14T00:00:00.0000000', @p7=NULL (DbType = DateTime2), @p8=NULL (Size = 4000), @p9=NULL (Size = 4000), @p10=NULL (Size = 4000), @p11='2080-01-01' (Nullable = false) (Size = 4000), @p12=NULL (Size = 4000), @p13='1' (Nullable = true), @p14='2023-08-13T02:40:46.7821206+05:45', @p15=NULL (DbType = DateTime2), @p16='DepositTransaction' (Size = 4000), @p17='1000' (Precision = 18) (Scale = 4), @p18=NULL (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([AmountInWords], [BankChequeNumber], [BankDetailId], [BranchCode], [CreatedBy], [CreatorId], [EnglishCreationDate], [EnglishModificationDate], [ModifiedBy], [ModifierBranchCode], [ModifierId], [NepaliCreationDate], [NepaliModificationDate], [PaymentType], [RealWorldCreationDate], [RealWorldModificationDate], [Remarks], [TransactionAmount], [VoucherNumber])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18);
2023-08-13 02:40:47.008 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 02:40:47.015 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 02:40:47.114 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[@p19='1', @p0='Thousand' (Size = 4000), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3='000' (Nullable = false) (Size = 4000), @p4='admin' (Nullable = false) (Size = 4000), @p5='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Nullable = false) (Size = 4000), @p6='2023-04-14T00:00:00.0000000', @p7=NULL (DbType = DateTime2), @p8=NULL (Size = 4000), @p9=NULL (Size = 4000), @p10=NULL (Size = 4000), @p11='2080-01-01' (Nullable = false) (Size = 4000), @p12=NULL (Size = 4000), @p13='1' (Nullable = true), @p14='2023-08-13T02:40:46.7821206+05:45', @p15=NULL (DbType = DateTime2), @p16='DepositTransaction' (Size = 4000), @p17='1000' (Precision = 18) (Scale = 4), @p18='8182VCH1000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Transactions] SET [AmountInWords] = @p0, [BankChequeNumber] = @p1, [BankDetailId] = @p2, [BranchCode] = @p3, [CreatedBy] = @p4, [CreatorId] = @p5, [EnglishCreationDate] = @p6, [EnglishModificationDate] = @p7, [ModifiedBy] = @p8, [ModifierBranchCode] = @p9, [ModifierId] = @p10, [NepaliCreationDate] = @p11, [NepaliModificationDate] = @p12, [PaymentType] = @p13, [RealWorldCreationDate] = @p14, [RealWorldModificationDate] = @p15, [Remarks] = @p16, [TransactionAmount] = @p17, [VoucherNumber] = @p18
OUTPUT 1
WHERE [Id] = @p19;
2023-08-13 02:40:47.135 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__depositAccountTransactionWrapper_DepositAccountId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[EnglishCreationDate], [d].[EnglishMatureDate], [d].[EnglishModificationDate], [d].[EnglishOpeningDate], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliMatureDate], [d].[NepaliModificationDate], [d].[NepaliOpeningDate], [d].[NextInterestPostingDate], [d].[NomineeName], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status]
FROM [DepositAccounts] AS [d]
WHERE [d].[Id] = @__depositAccountTransactionWrapper_DepositAccountId_0 AND [d].[Status] <> 3
2023-08-13 02:40:47.303 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__depositAccountTransactionWrapper_DepositSchemeSubLedgerId_0='58'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [SubLedgers] AS [s]
INNER JOIN [Ledgers] AS [l] ON [s].[LedgerId] = [l].[Id]
WHERE [s].[Id] = @__depositAccountTransactionWrapper_DepositSchemeSubLedgerId_0
2023-08-13 02:40:47.397 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 1
2023-08-13 02:40:47.523 +05:45 [INF] Executed DbCommand (15ms) [Parameters=[@p0='1000.0000' (Precision = 18) (Scale = 4), @p1='1' (Nullable = true), @p2='1', @p3='Deposit By Ashish' (Size = 4000), @p4='Transaction done as DepositTransaction' (Size = 4000), @p5='Salary' (Nullable = false) (Size = 4000), @p6='1', @p7='2', @p8=NULL (Size = 4000), @p9=NULL (DbType = Int32), @p11='1', @p10='1000.0000' (Precision = 18) (Scale = 4), @p12='1000.0000' (Precision = 18) (Scale = 4), @p13='1', @p14='Transaction done as DepositTransaction' (Size = 4000), @p15='1', @p16='1', @p18='1', @p17='1000.0000' (Precision = 18) (Scale = 4), @p20='18', @p19='1000.0000' (Precision = 18) (Scale = 4), @p21='1000.0000' (Precision = 18) (Scale = 4), @p22='Transaction done as DepositTransaction' (Size = 4000), @p23='58', @p24='1', @p25='2', @p27='58', @p26='1000.0000' (Precision = 18) (Scale = 4)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DepositAccountTransactions] ([BalanceAfterTransaction], [CollectedByEmployeeId], [DepositAccountId], [Narration], [Remarks], [Source], [TransactionId], [TransactionType], [WithDrawalChequeNumber], [WithDrawalType])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
UPDATE [DepositAccounts] SET [PrincipalAmount] = @p10
OUTPUT 1
WHERE [Id] = @p11;
INSERT INTO [LedgerTransactions] ([BalanceAfterTransaction], [LedgerId], [Remarks], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p12, @p13, @p14, @p15, @p16);
UPDATE [Ledgers] SET [CurrentBalance] = @p17
OUTPUT 1
WHERE [Id] = @p18;
UPDATE [Ledgers] SET [CurrentBalance] = @p19
OUTPUT 1
WHERE [Id] = @p20;
INSERT INTO [SubLedgerTransactions] ([BalanceAfterTransaction], [Remarks], [SubLedgerId], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p21, @p22, @p23, @p24, @p25);
UPDATE [SubLedgers] SET [CurrentBalance] = @p26
OUTPUT 1
WHERE [Id] = @p27;
2023-08-13 02:40:47.560 +05:45 [INF] 8/13/2023 2:40:47 AM: Releasing the locks...
2023-08-13 02:40:47.565 +05:45 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-08-13 02:40:47.565 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 4875.498ms
2023-08-13 02:40:47.565 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-08-13 02:40:47.566 +05:45 [INF] HTTP POST /Transaction/makeDeposit responded 200 in 4880.0401 ms
2023-08-13 02:40:47.566 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 198 - 200 - text/plain;+charset=utf-8 4884.9314ms
2023-08-13 02:42:15.387 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - -
2023-08-13 02:42:15.392 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 02:42:15.398 +05:45 [INF] Route matched with {action = "GetDepositAccountTransactionReport", controller = "TransactionReport"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Models.Wrapper.Reports.DepositAccountTransactionReportWrapper]] GetDepositAccountTransactionReport(MicroFinance.Dtos.Reports.GetDepositAccountTransactionReport) on controller MicroFinance.Controllers.Reports.TransactionReportController (MicroFinance).
2023-08-13 02:42:15.398 +05:45 [INF] Executed action MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance) in 0.3895ms
2023-08-13 02:42:15.398 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 02:42:15.422 +05:45 [INF] HTTP GET /TransactionReport/depositAccount responded 401 in 30.4963 ms
2023-08-13 02:42:15.422 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - - - 401 - application/json 35.6530ms
2023-08-13 02:43:29.820 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 02:43:29.993 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:43:29.995 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:43:30.979 +05:45 [INF] Executed DbCommand (65ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:43:31.074 +05:45 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:43:31.087 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:43:31.089 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:43:31.114 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 02:43:31.144 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 02:43:31.486 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.496 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.501 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.506 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.521 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.533 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.540 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.545 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.557 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.560 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.562 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.571 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.575 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.578 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.581 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.585 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.589 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.593 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.596 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.599 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:43:31.714 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 02:43:31.861 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 02:43:31.861 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 02:43:31.865 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 02:43:31.886 +05:45 [INF] Hosting environment: Development
2023-08-13 02:43:31.886 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 02:43:37.313 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - -
2023-08-13 02:43:37.395 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 02:43:37.431 +05:45 [INF] Route matched with {action = "GetDepositAccountTransactionReport", controller = "TransactionReport"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Models.Wrapper.Reports.DepositAccountTransactionReportWrapper]] GetDepositAccountTransactionReport(MicroFinance.Dtos.Reports.GetDepositAccountTransactionReport) on controller MicroFinance.Controllers.Reports.TransactionReportController (MicroFinance).
2023-08-13 02:43:38.225 +05:45 [INF] Executed DbCommand (65ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[EnglishCreationDate], [d].[EnglishMatureDate], [d].[EnglishModificationDate], [d].[EnglishOpeningDate], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliMatureDate], [d].[NepaliModificationDate], [d].[NepaliOpeningDate], [d].[NextInterestPostingDate], [d].[NomineeName], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[EnglishCreationDate], [d0].[EnglishModificationDate], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[NepaliCreationDate], [d0].[NepaliModificationDate], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[EnglishCreationDate], [d1].[EnglishMatureDate], [d1].[EnglishModificationDate], [d1].[EnglishOpeningDate], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NepaliCreationDate], [d1].[NepaliMatureDate], [d1].[NepaliModificationDate], [d1].[NepaliOpeningDate], [d1].[NextInterestPostingDate], [d1].[NomineeName], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[SignatureFileData], [d1].[SignatureFileName], [d1].[SignatureFileType], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Id] = @__getDepositAccountTransactionReport_DepositAccountId_0
2023-08-13 02:43:38.450 +05:45 [INF] Executed action MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance) in 1014.4164ms
2023-08-13 02:43:38.453 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 02:43:38.629 +05:45 [INF] HTTP GET /TransactionReport/depositAccount responded 401 in 1239.0563 ms
2023-08-13 02:43:38.647 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - - - 401 - application/json 1336.3758ms
2023-08-13 02:44:00.031 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - -
2023-08-13 02:44:00.035 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 02:44:00.035 +05:45 [INF] Route matched with {action = "GetDepositAccountTransactionReport", controller = "TransactionReport"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Models.Wrapper.Reports.DepositAccountTransactionReportWrapper]] GetDepositAccountTransactionReport(MicroFinance.Dtos.Reports.GetDepositAccountTransactionReport) on controller MicroFinance.Controllers.Reports.TransactionReportController (MicroFinance).
2023-08-13 02:44:31.679 +05:45 [INF] Executed DbCommand (178ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[EnglishCreationDate], [d].[EnglishMatureDate], [d].[EnglishModificationDate], [d].[EnglishOpeningDate], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliMatureDate], [d].[NepaliModificationDate], [d].[NepaliOpeningDate], [d].[NextInterestPostingDate], [d].[NomineeName], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[EnglishCreationDate], [d0].[EnglishModificationDate], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[NepaliCreationDate], [d0].[NepaliModificationDate], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[EnglishCreationDate], [d1].[EnglishMatureDate], [d1].[EnglishModificationDate], [d1].[EnglishOpeningDate], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NepaliCreationDate], [d1].[NepaliMatureDate], [d1].[NepaliModificationDate], [d1].[NepaliOpeningDate], [d1].[NextInterestPostingDate], [d1].[NomineeName], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[SignatureFileData], [d1].[SignatureFileName], [d1].[SignatureFileType], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Id] = @__getDepositAccountTransactionReport_DepositAccountId_0
2023-08-13 02:46:07.632 +05:45 [INF] Executed action MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance) in 127596.3443ms
2023-08-13 02:46:07.632 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 02:46:07.686 +05:45 [INF] HTTP GET /TransactionReport/depositAccount responded 401 in 127651.0279 ms
2023-08-13 02:46:07.686 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - - - 401 - application/json 127655.3782ms
2023-08-13 02:47:21.069 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 02:47:21.281 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:47:21.283 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 02:47:22.359 +05:45 [INF] Executed DbCommand (68ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:47:22.450 +05:45 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:47:22.465 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 02:47:22.467 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 02:47:22.496 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 02:47:22.527 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 02:47:22.879 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.890 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.894 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.901 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.912 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.921 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.925 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.929 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.932 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.935 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.964 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.978 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.982 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.987 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.992 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:22.996 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:23.001 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:23.005 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:23.009 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:23.012 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 02:47:23.137 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 02:47:23.294 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 02:47:23.294 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 02:47:23.319 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 02:47:23.320 +05:45 [INF] Hosting environment: Development
2023-08-13 02:47:23.320 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 02:47:26.488 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - -
2023-08-13 02:47:26.565 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 02:47:26.599 +05:45 [INF] Route matched with {action = "GetDepositAccountTransactionReport", controller = "TransactionReport"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Models.Wrapper.Reports.DepositAccountTransactionReportWrapper]] GetDepositAccountTransactionReport(MicroFinance.Dtos.Reports.GetDepositAccountTransactionReport) on controller MicroFinance.Controllers.Reports.TransactionReportController (MicroFinance).
2023-08-13 02:47:29.389 +05:45 [INF] Executed DbCommand (58ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[EnglishCreationDate], [d].[EnglishMatureDate], [d].[EnglishModificationDate], [d].[EnglishOpeningDate], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliMatureDate], [d].[NepaliModificationDate], [d].[NepaliOpeningDate], [d].[NextInterestPostingDate], [d].[NomineeName], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[EnglishCreationDate], [d0].[EnglishModificationDate], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[NepaliCreationDate], [d0].[NepaliModificationDate], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[EnglishCreationDate], [d1].[EnglishMatureDate], [d1].[EnglishModificationDate], [d1].[EnglishOpeningDate], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NepaliCreationDate], [d1].[NepaliMatureDate], [d1].[NepaliModificationDate], [d1].[NepaliOpeningDate], [d1].[NextInterestPostingDate], [d1].[NomineeName], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[SignatureFileData], [d1].[SignatureFileName], [d1].[SignatureFileType], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Id] = @__getDepositAccountTransactionReport_DepositAccountId_0
2023-08-13 02:47:29.513 +05:45 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id] AS [BaseTransactionId], [d].[Id] AS [DepositAccountTransactionId], [t].[VoucherNumber], [t].[Remarks] AS [TransactionRemarks], [d].[TransactionType], [t].[TransactionAmount], [d].[Narration], [d].[Remarks] AS [Description], [t].[RealWorldCreationDate], [t].[NepaliCreationDate], [t].[EnglishCreationDate], [d].[BalanceAfterTransaction], [t].[CreatedBy] AS [TransactionDoneBy]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
INNER JOIN [DepositAccounts] AS [d0] ON [d].[DepositAccountId] = [d0].[Id]
ORDER BY [t].[RealWorldCreationDate]
2023-08-13 02:47:29.547 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[@__firstReport_RealWorldCreationDate_0='2023-08-13T02:40:46.7821206'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[BalanceAfterTransaction], [d].[CollectedByEmployeeId], [d].[DepositAccountId], [d].[Narration], [d].[Remarks], [d].[Source], [d].[TransactionId], [d].[TransactionType], [d].[WithDrawalChequeNumber], [d].[WithDrawalType], [t].[Id], [t].[AmountInWords], [t].[BankChequeNumber], [t].[BankDetailId], [t].[BranchCode], [t].[CreatedBy], [t].[CreatorId], [t].[EnglishCreationDate], [t].[EnglishModificationDate], [t].[ModifiedBy], [t].[ModifierBranchCode], [t].[ModifierId], [t].[NepaliCreationDate], [t].[NepaliModificationDate], [t].[PaymentType], [t].[RealWorldCreationDate], [t].[RealWorldModificationDate], [t].[Remarks], [t].[TransactionAmount], [t].[VoucherNumber]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
WHERE [t].[RealWorldCreationDate] < @__firstReport_RealWorldCreationDate_0
ORDER BY [t].[RealWorldCreationDate] DESC
2023-08-13 02:47:29.705 +05:45 [INF] Executed action MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance) in 3099.1797ms
2023-08-13 02:47:29.709 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 02:47:29.904 +05:45 [INF] HTTP GET /TransactionReport/depositAccount responded 401 in 3341.7591 ms
2023-08-13 02:47:29.929 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - - - 401 - application/json 3443.7877ms
2023-08-13 02:47:34.639 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - -
2023-08-13 02:47:34.643 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 02:47:34.644 +05:45 [INF] Route matched with {action = "GetDepositAccountTransactionReport", controller = "TransactionReport"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Models.Wrapper.Reports.DepositAccountTransactionReportWrapper]] GetDepositAccountTransactionReport(MicroFinance.Dtos.Reports.GetDepositAccountTransactionReport) on controller MicroFinance.Controllers.Reports.TransactionReportController (MicroFinance).
2023-08-13 02:47:41.536 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[EnglishCreationDate], [d].[EnglishMatureDate], [d].[EnglishModificationDate], [d].[EnglishOpeningDate], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliMatureDate], [d].[NepaliModificationDate], [d].[NepaliOpeningDate], [d].[NextInterestPostingDate], [d].[NomineeName], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[EnglishCreationDate], [d0].[EnglishModificationDate], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[NepaliCreationDate], [d0].[NepaliModificationDate], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[EnglishCreationDate], [d1].[EnglishMatureDate], [d1].[EnglishModificationDate], [d1].[EnglishOpeningDate], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NepaliCreationDate], [d1].[NepaliMatureDate], [d1].[NepaliModificationDate], [d1].[NepaliOpeningDate], [d1].[NextInterestPostingDate], [d1].[NomineeName], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[SignatureFileData], [d1].[SignatureFileName], [d1].[SignatureFileType], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Id] = @__getDepositAccountTransactionReport_DepositAccountId_0
2023-08-13 02:47:51.135 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id] AS [BaseTransactionId], [d].[Id] AS [DepositAccountTransactionId], [t].[VoucherNumber], [t].[Remarks] AS [TransactionRemarks], [d].[TransactionType], [t].[TransactionAmount], [d].[Narration], [d].[Remarks] AS [Description], [t].[RealWorldCreationDate], [t].[NepaliCreationDate], [t].[EnglishCreationDate], [d].[BalanceAfterTransaction], [t].[CreatedBy] AS [TransactionDoneBy]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
INNER JOIN [DepositAccounts] AS [d0] ON [d].[DepositAccountId] = [d0].[Id]
ORDER BY [t].[RealWorldCreationDate]
2023-08-13 02:48:39.209 +05:45 [INF] Executed DbCommand (45ms) [Parameters=[@__firstReport_RealWorldCreationDate_0='2023-08-13T02:40:46.7821206'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[BalanceAfterTransaction], [d].[CollectedByEmployeeId], [d].[DepositAccountId], [d].[Narration], [d].[Remarks], [d].[Source], [d].[TransactionId], [d].[TransactionType], [d].[WithDrawalChequeNumber], [d].[WithDrawalType], [t].[Id], [t].[AmountInWords], [t].[BankChequeNumber], [t].[BankDetailId], [t].[BranchCode], [t].[CreatedBy], [t].[CreatorId], [t].[EnglishCreationDate], [t].[EnglishModificationDate], [t].[ModifiedBy], [t].[ModifierBranchCode], [t].[ModifierId], [t].[NepaliCreationDate], [t].[NepaliModificationDate], [t].[PaymentType], [t].[RealWorldCreationDate], [t].[RealWorldModificationDate], [t].[Remarks], [t].[TransactionAmount], [t].[VoucherNumber]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
WHERE [t].[RealWorldCreationDate] < @__firstReport_RealWorldCreationDate_0
ORDER BY [t].[RealWorldCreationDate] DESC
2023-08-13 02:49:19.188 +05:45 [INF] Executed action MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance) in 104544.4032ms
2023-08-13 02:49:19.189 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 02:49:19.256 +05:45 [INF] HTTP GET /TransactionReport/depositAccount responded 401 in 104612.9295 ms
2023-08-13 02:49:19.257 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - - - 401 - application/json 104617.6633ms
2023-08-13 03:07:10.192 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 03:07:10.397 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 03:07:10.400 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 03:07:11.474 +05:45 [INF] Executed DbCommand (68ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 03:07:11.569 +05:45 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 03:07:11.583 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 03:07:11.585 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 03:07:11.612 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 03:07:11.643 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 03:07:11.977 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:11.986 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:11.990 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:11.994 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.003 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.009 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.012 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.016 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.019 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.022 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.025 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.031 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.033 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.036 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.039 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.041 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.045 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.048 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.050 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.054 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:07:12.168 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 03:07:12.361 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 03:07:12.361 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 03:07:12.385 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 03:07:12.385 +05:45 [INF] Hosting environment: Development
2023-08-13 03:07:12.385 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 03:07:18.551 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - -
2023-08-13 03:07:18.624 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 03:07:18.658 +05:45 [INF] Route matched with {action = "GetDepositAccountTransactionReport", controller = "TransactionReport"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Models.Wrapper.Reports.DepositAccountTransactionReportWrapper]] GetDepositAccountTransactionReport(MicroFinance.Dtos.Reports.GetDepositAccountTransactionReport) on controller MicroFinance.Controllers.Reports.TransactionReportController (MicroFinance).
2023-08-13 03:07:21.432 +05:45 [INF] Executed DbCommand (59ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[EnglishCreationDate], [d].[EnglishMatureDate], [d].[EnglishModificationDate], [d].[EnglishOpeningDate], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliMatureDate], [d].[NepaliModificationDate], [d].[NepaliOpeningDate], [d].[NextInterestPostingDate], [d].[NomineeName], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[EnglishCreationDate], [d0].[EnglishModificationDate], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[NepaliCreationDate], [d0].[NepaliModificationDate], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[EnglishCreationDate], [d1].[EnglishMatureDate], [d1].[EnglishModificationDate], [d1].[EnglishOpeningDate], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NepaliCreationDate], [d1].[NepaliMatureDate], [d1].[NepaliModificationDate], [d1].[NepaliOpeningDate], [d1].[NextInterestPostingDate], [d1].[NomineeName], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[SignatureFileData], [d1].[SignatureFileName], [d1].[SignatureFileType], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Id] = @__getDepositAccountTransactionReport_DepositAccountId_0
2023-08-13 03:07:21.676 +05:45 [INF] Executed action MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance) in 3013.0532ms
2023-08-13 03:07:21.680 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 03:07:21.864 +05:45 [INF] HTTP GET /TransactionReport/depositAccount responded 401 in 3243.2125 ms
2023-08-13 03:07:21.887 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - - - 401 - application/json 3338.0640ms
2023-08-13 03:28:12.579 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 03:28:12.761 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 03:28:12.763 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 03:28:13.832 +05:45 [INF] Executed DbCommand (66ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 03:28:13.926 +05:45 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 03:28:13.939 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 03:28:13.941 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 03:28:13.970 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 03:28:14.001 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 03:28:14.352 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.361 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.365 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.370 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.381 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.390 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.393 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.397 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.400 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.402 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.410 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.418 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.420 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.423 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.426 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.428 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.432 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.435 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.438 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.441 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:28:14.562 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 03:28:14.718 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 03:28:14.718 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 03:28:14.722 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 03:28:14.743 +05:45 [INF] Hosting environment: Development
2023-08-13 03:28:14.743 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 03:28:26.683 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - -
2023-08-13 03:28:26.780 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 03:28:26.817 +05:45 [INF] Route matched with {action = "GetDepositAccountTransactionReport", controller = "TransactionReport"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Models.Wrapper.Reports.DepositAccountTransactionReportWrapper]] GetDepositAccountTransactionReport(MicroFinance.Dtos.Reports.GetDepositAccountTransactionReport) on controller MicroFinance.Controllers.Reports.TransactionReportController (MicroFinance).
2023-08-13 03:29:02.348 +05:45 [INF] Executed DbCommand (78ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[EnglishCreationDate], [d].[EnglishMatureDate], [d].[EnglishModificationDate], [d].[EnglishOpeningDate], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliMatureDate], [d].[NepaliModificationDate], [d].[NepaliOpeningDate], [d].[NextInterestPostingDate], [d].[NomineeName], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[EnglishCreationDate], [d0].[EnglishModificationDate], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[NepaliCreationDate], [d0].[NepaliModificationDate], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[EnglishCreationDate], [d1].[EnglishMatureDate], [d1].[EnglishModificationDate], [d1].[EnglishOpeningDate], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NepaliCreationDate], [d1].[NepaliMatureDate], [d1].[NepaliModificationDate], [d1].[NepaliOpeningDate], [d1].[NextInterestPostingDate], [d1].[NomineeName], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[SignatureFileData], [d1].[SignatureFileName], [d1].[SignatureFileType], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Id] = @__getDepositAccountTransactionReport_DepositAccountId_0
2023-08-13 03:29:14.162 +05:45 [INF] Executed DbCommand (37ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1' (Nullable = true), @__fromDate_1='2023-04-14T00:00:00.0000000', @__toDate_2='2023-04-14T00:00:00.0000000'], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id] AS [BaseTransactionId], [d].[Id] AS [DepositAccountTransactionId], [t].[VoucherNumber], [t].[Remarks] AS [TransactionRemarks], [d].[TransactionType], [t].[TransactionAmount], [d].[Narration], [d].[Remarks] AS [Description], [t].[RealWorldCreationDate], [t].[NepaliCreationDate], [t].[EnglishCreationDate], [d].[BalanceAfterTransaction], [t].[CreatedBy] AS [TransactionDoneBy]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
WHERE [d].[DepositAccountId] = @__getDepositAccountTransactionReport_DepositAccountId_0 AND [t].[EnglishCreationDate] >= @__fromDate_1 AND [t].[EnglishCreationDate] <= @__toDate_2
2023-08-13 03:33:32.392 +05:45 [INF] Executed DbCommand (76ms) [Parameters=[@__firstReport_RealWorldCreationDate_0='2023-08-13T02:40:46.7821206'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[BalanceAfterTransaction], [d].[CollectedByEmployeeId], [d].[DepositAccountId], [d].[Narration], [d].[Remarks], [d].[Source], [d].[TransactionId], [d].[TransactionType], [d].[WithDrawalChequeNumber], [d].[WithDrawalType], [t].[Id], [t].[AmountInWords], [t].[BankChequeNumber], [t].[BankDetailId], [t].[BranchCode], [t].[CreatedBy], [t].[CreatorId], [t].[EnglishCreationDate], [t].[EnglishModificationDate], [t].[ModifiedBy], [t].[ModifierBranchCode], [t].[ModifierId], [t].[NepaliCreationDate], [t].[NepaliModificationDate], [t].[PaymentType], [t].[RealWorldCreationDate], [t].[RealWorldModificationDate], [t].[Remarks], [t].[TransactionAmount], [t].[VoucherNumber]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
WHERE [t].[RealWorldCreationDate] < @__firstReport_RealWorldCreationDate_0
ORDER BY [t].[RealWorldCreationDate] DESC
2023-08-13 03:33:32.413 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Models.Wrapper.Reports.DepositAccountTransactionReportWrapper'.
2023-08-13 03:33:32.538 +05:45 [INF] Executed action MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance) in 305716.5449ms
2023-08-13 03:33:32.540 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 03:33:32.546 +05:45 [INF] HTTP GET /TransactionReport/depositAccount responded 200 in 305769.0653 ms
2023-08-13 03:33:32.568 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - - - 200 - application/json;+charset=utf-8 305887.6529ms
2023-08-13 03:35:19.119 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - -
2023-08-13 03:35:19.134 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 03:35:19.159 +05:45 [INF] Route matched with {action = "GetDepositAccountTransactionReport", controller = "TransactionReport"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Models.Wrapper.Reports.DepositAccountTransactionReportWrapper]] GetDepositAccountTransactionReport(MicroFinance.Dtos.Reports.GetDepositAccountTransactionReport) on controller MicroFinance.Controllers.Reports.TransactionReportController (MicroFinance).
2023-08-13 03:35:34.389 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[EnglishCreationDate], [d].[EnglishMatureDate], [d].[EnglishModificationDate], [d].[EnglishOpeningDate], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliMatureDate], [d].[NepaliModificationDate], [d].[NepaliOpeningDate], [d].[NextInterestPostingDate], [d].[NomineeName], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[EnglishCreationDate], [d0].[EnglishModificationDate], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[NepaliCreationDate], [d0].[NepaliModificationDate], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[EnglishCreationDate], [d1].[EnglishMatureDate], [d1].[EnglishModificationDate], [d1].[EnglishOpeningDate], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NepaliCreationDate], [d1].[NepaliMatureDate], [d1].[NepaliModificationDate], [d1].[NepaliOpeningDate], [d1].[NextInterestPostingDate], [d1].[NomineeName], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[SignatureFileData], [d1].[SignatureFileName], [d1].[SignatureFileType], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Id] = @__getDepositAccountTransactionReport_DepositAccountId_0
2023-08-13 03:35:41.234 +05:45 [INF] Executed DbCommand (31ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1' (Nullable = true), @__fromDate_1='2023-04-14T00:00:00.0000000', @__toDate_2='2023-04-14T00:00:00.0000000'], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id] AS [BaseTransactionId], [d].[Id] AS [DepositAccountTransactionId], [t].[VoucherNumber], [t].[Remarks] AS [TransactionRemarks], [d].[TransactionType], [t].[TransactionAmount], [d].[Narration], [d].[Remarks] AS [Description], [t].[RealWorldCreationDate], [t].[NepaliCreationDate], [t].[EnglishCreationDate], [d].[BalanceAfterTransaction], [t].[CreatedBy] AS [TransactionDoneBy]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
WHERE [d].[DepositAccountId] = @__getDepositAccountTransactionReport_DepositAccountId_0 AND [t].[EnglishCreationDate] >= @__fromDate_1 AND [t].[EnglishCreationDate] <= @__toDate_2
2023-08-13 03:36:02.217 +05:45 [INF] Executed DbCommand (154ms) [Parameters=[@__firstReport_RealWorldCreationDate_0='2023-08-13T02:40:46.7821206'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[BalanceAfterTransaction], [d].[CollectedByEmployeeId], [d].[DepositAccountId], [d].[Narration], [d].[Remarks], [d].[Source], [d].[TransactionId], [d].[TransactionType], [d].[WithDrawalChequeNumber], [d].[WithDrawalType], [t].[Id], [t].[AmountInWords], [t].[BankChequeNumber], [t].[BankDetailId], [t].[BranchCode], [t].[CreatedBy], [t].[CreatorId], [t].[EnglishCreationDate], [t].[EnglishModificationDate], [t].[ModifiedBy], [t].[ModifierBranchCode], [t].[ModifierId], [t].[NepaliCreationDate], [t].[NepaliModificationDate], [t].[PaymentType], [t].[RealWorldCreationDate], [t].[RealWorldModificationDate], [t].[Remarks], [t].[TransactionAmount], [t].[VoucherNumber]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
WHERE [t].[RealWorldCreationDate] < @__firstReport_RealWorldCreationDate_0
ORDER BY [t].[RealWorldCreationDate] DESC
2023-08-13 03:37:53.192 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 03:37:53.387 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 03:37:53.389 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 03:37:54.497 +05:45 [INF] Executed DbCommand (67ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 03:37:54.596 +05:45 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 03:37:54.611 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 03:37:54.613 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 03:37:54.710 +05:45 [INF] Executed DbCommand (75ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 03:37:54.745 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 03:37:55.089 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.100 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.103 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.108 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.119 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.128 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.131 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.136 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.139 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.142 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.145 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.153 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.156 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.159 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.163 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.165 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.170 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.173 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.176 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.180 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:37:55.303 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 03:37:55.458 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 03:37:55.458 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 03:37:55.461 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 03:37:55.461 +05:45 [INF] Hosting environment: Development
2023-08-13 03:37:55.461 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 03:40:12.736 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 03:40:12.901 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 03:40:12.903 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 03:40:13.906 +05:45 [INF] Executed DbCommand (64ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 03:40:13.993 +05:45 [INF] Executed DbCommand (53ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 03:40:14.008 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 03:40:14.009 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 03:40:14.067 +05:45 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 03:40:14.098 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 03:40:14.454 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.463 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.467 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.472 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.484 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.493 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.496 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.501 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.503 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.506 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.509 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.515 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.517 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.520 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.522 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.524 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.528 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.531 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.534 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.537 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:40:14.649 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 03:40:14.797 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 03:40:14.797 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 03:40:14.802 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 03:40:14.802 +05:45 [INF] Hosting environment: Development
2023-08-13 03:40:14.803 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 03:40:19.175 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - -
2023-08-13 03:40:19.258 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 03:40:19.293 +05:45 [INF] Route matched with {action = "GetDepositAccountTransactionReport", controller = "TransactionReport"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Models.Wrapper.Reports.DepositAccountTransactionReportWrapper]] GetDepositAccountTransactionReport(MicroFinance.Dtos.Reports.GetDepositAccountTransactionReport) on controller MicroFinance.Controllers.Reports.TransactionReportController (MicroFinance).
2023-08-13 03:40:34.262 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-13 03:40:45.650 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 11384.3483ms
2023-08-13 03:40:46.104 +05:45 [INF] Executed DbCommand (79ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[EnglishCreationDate], [d].[EnglishMatureDate], [d].[EnglishModificationDate], [d].[EnglishOpeningDate], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliMatureDate], [d].[NepaliModificationDate], [d].[NepaliOpeningDate], [d].[NextInterestPostingDate], [d].[NomineeName], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[EnglishCreationDate], [d0].[EnglishModificationDate], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[NepaliCreationDate], [d0].[NepaliModificationDate], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[EnglishCreationDate], [d1].[EnglishMatureDate], [d1].[EnglishModificationDate], [d1].[EnglishOpeningDate], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NepaliCreationDate], [d1].[NepaliMatureDate], [d1].[NepaliModificationDate], [d1].[NepaliOpeningDate], [d1].[NextInterestPostingDate], [d1].[NomineeName], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[SignatureFileData], [d1].[SignatureFileName], [d1].[SignatureFileType], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Id] = @__getDepositAccountTransactionReport_DepositAccountId_0
2023-08-13 03:40:46.166 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-13 03:40:52.637 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1' (Nullable = true), @__fromDate_1='2023-04-14T00:00:00.0000000', @__toDate_2='2023-04-14T00:00:00.0000000'], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id] AS [BaseTransactionId], [d].[Id] AS [DepositAccountTransactionId], [t].[VoucherNumber], [t].[Remarks] AS [TransactionRemarks], [d].[TransactionType], [t].[TransactionAmount], [d].[Narration], [d].[Remarks] AS [Description], [t].[RealWorldCreationDate], [t].[NepaliCreationDate], [t].[EnglishCreationDate], [d].[BalanceAfterTransaction], [t].[CreatedBy] AS [TransactionDoneBy]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
WHERE [d].[DepositAccountId] = @__getDepositAccountTransactionReport_DepositAccountId_0 AND [t].[EnglishCreationDate] >= @__fromDate_1 AND [t].[EnglishCreationDate] <= @__toDate_2
2023-08-13 03:41:10.914 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__firstReport_RealWorldCreationDate_0='2023-08-13T02:40:46.7821206'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[BalanceAfterTransaction], [d].[CollectedByEmployeeId], [d].[DepositAccountId], [d].[Narration], [d].[Remarks], [d].[Source], [d].[TransactionId], [d].[TransactionType], [d].[WithDrawalChequeNumber], [d].[WithDrawalType], [t].[Id], [t].[AmountInWords], [t].[BankChequeNumber], [t].[BankDetailId], [t].[BranchCode], [t].[CreatedBy], [t].[CreatorId], [t].[EnglishCreationDate], [t].[EnglishModificationDate], [t].[ModifiedBy], [t].[ModifierBranchCode], [t].[ModifierId], [t].[NepaliCreationDate], [t].[NepaliModificationDate], [t].[PaymentType], [t].[RealWorldCreationDate], [t].[RealWorldModificationDate], [t].[Remarks], [t].[TransactionAmount], [t].[VoucherNumber]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
WHERE [t].[RealWorldCreationDate] < @__firstReport_RealWorldCreationDate_0
ORDER BY [t].[RealWorldCreationDate] DESC
2023-08-13 03:41:25.860 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Models.Wrapper.Reports.DepositAccountTransactionReportWrapper'.
2023-08-13 03:41:25.913 +05:45 [INF] Executed action MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance) in 66613.385ms
2023-08-13 03:41:25.918 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 03:41:25.928 +05:45 [INF] HTTP GET /TransactionReport/depositAccount responded 200 in 66672.3643 ms
2023-08-13 03:41:25.952 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-01-01&ToDate=2080-01-01&DepositAccountId=1 - - - 0 - application/json;+charset=utf-8 66780.8012ms
2023-08-13 03:41:26.190 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 40023.3558ms
2023-08-13 03:42:21.988 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-1-1&ToDate=2080-1-1&DepositAccountId=1 - -
2023-08-13 03:42:21.989 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 03:42:21.990 +05:45 [INF] Route matched with {action = "GetDepositAccountTransactionReport", controller = "TransactionReport"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Models.Wrapper.Reports.DepositAccountTransactionReportWrapper]] GetDepositAccountTransactionReport(MicroFinance.Dtos.Reports.GetDepositAccountTransactionReport) on controller MicroFinance.Controllers.Reports.TransactionReportController (MicroFinance).
2023-08-13 03:42:34.250 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[EnglishCreationDate], [d].[EnglishMatureDate], [d].[EnglishModificationDate], [d].[EnglishOpeningDate], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliMatureDate], [d].[NepaliModificationDate], [d].[NepaliOpeningDate], [d].[NextInterestPostingDate], [d].[NomineeName], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[EnglishCreationDate], [d0].[EnglishModificationDate], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[NepaliCreationDate], [d0].[NepaliModificationDate], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[EnglishCreationDate], [d1].[EnglishMatureDate], [d1].[EnglishModificationDate], [d1].[EnglishOpeningDate], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NepaliCreationDate], [d1].[NepaliMatureDate], [d1].[NepaliModificationDate], [d1].[NepaliOpeningDate], [d1].[NextInterestPostingDate], [d1].[NomineeName], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[SignatureFileData], [d1].[SignatureFileName], [d1].[SignatureFileType], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Id] = @__getDepositAccountTransactionReport_DepositAccountId_0
2023-08-13 03:42:39.872 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1' (Nullable = true), @__fromDate_1='2023-04-14T00:00:00.0000000', @__toDate_2='2023-04-14T00:00:00.0000000'], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id] AS [BaseTransactionId], [d].[Id] AS [DepositAccountTransactionId], [t].[VoucherNumber], [t].[Remarks] AS [TransactionRemarks], [d].[TransactionType], [t].[TransactionAmount], [d].[Narration], [d].[Remarks] AS [Description], [t].[RealWorldCreationDate], [t].[NepaliCreationDate], [t].[EnglishCreationDate], [d].[BalanceAfterTransaction], [t].[CreatedBy] AS [TransactionDoneBy]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
WHERE [d].[DepositAccountId] = @__getDepositAccountTransactionReport_DepositAccountId_0 AND [t].[EnglishCreationDate] >= @__fromDate_1 AND [t].[EnglishCreationDate] <= @__toDate_2
2023-08-13 03:42:46.008 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__firstReport_RealWorldCreationDate_0='2023-08-13T02:40:46.7821206'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[BalanceAfterTransaction], [d].[CollectedByEmployeeId], [d].[DepositAccountId], [d].[Narration], [d].[Remarks], [d].[Source], [d].[TransactionId], [d].[TransactionType], [d].[WithDrawalChequeNumber], [d].[WithDrawalType], [t].[Id], [t].[AmountInWords], [t].[BankChequeNumber], [t].[BankDetailId], [t].[BranchCode], [t].[CreatedBy], [t].[CreatorId], [t].[EnglishCreationDate], [t].[EnglishModificationDate], [t].[ModifiedBy], [t].[ModifierBranchCode], [t].[ModifierId], [t].[NepaliCreationDate], [t].[NepaliModificationDate], [t].[PaymentType], [t].[RealWorldCreationDate], [t].[RealWorldModificationDate], [t].[Remarks], [t].[TransactionAmount], [t].[VoucherNumber]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
WHERE [t].[RealWorldCreationDate] < @__firstReport_RealWorldCreationDate_0
ORDER BY [t].[RealWorldCreationDate] DESC
2023-08-13 03:43:15.708 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Models.Wrapper.Reports.DepositAccountTransactionReportWrapper'.
2023-08-13 03:43:19.639 +05:45 [INF] Executed action MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance) in 57649.2667ms
2023-08-13 03:43:19.640 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 03:43:23.135 +05:45 [INF] HTTP GET /TransactionReport/depositAccount responded 200 in 61146.3095 ms
2023-08-13 03:43:26.079 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-1-1&ToDate=2080-1-1&DepositAccountId=1 - - - 200 - application/json;+charset=utf-8 64090.7171ms
2023-08-13 03:55:30.633 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 03:55:30.851 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 03:55:30.853 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 03:55:31.989 +05:45 [INF] Executed DbCommand (70ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 03:55:32.082 +05:45 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 03:55:32.097 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 03:55:32.099 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 03:55:32.154 +05:45 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 03:55:32.185 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 03:55:32.528 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.538 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.542 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.547 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.557 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.566 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.569 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.573 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.575 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.578 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.581 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.590 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.593 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.596 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.599 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.602 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.608 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.612 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.616 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.619 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 03:55:32.763 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 03:55:32.930 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 03:55:32.930 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 03:55:32.934 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 03:55:32.934 +05:45 [INF] Hosting environment: Development
2023-08-13 03:55:32.935 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 03:55:38.023 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-13 03:55:38.278 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 256.5870ms
2023-08-13 03:55:38.616 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-13 03:55:39.054 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 438.4373ms
2023-08-13 03:56:55.709 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-1-31&ToDate=2080-1-31&DepositAccountId=1 - -
2023-08-13 03:56:55.745 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 03:56:55.785 +05:45 [INF] Route matched with {action = "GetDepositAccountTransactionReport", controller = "TransactionReport"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.Reports.DepositAccountTransactionReportWrapperDto]] GetDepositAccountTransactionReport(MicroFinance.Dtos.Reports.GetDepositAccountTransactionReport) on controller MicroFinance.Controllers.Reports.TransactionReportController (MicroFinance).
2023-08-13 03:57:09.777 +05:45 [INF] Executed DbCommand (50ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[EnglishCreationDate], [d].[EnglishMatureDate], [d].[EnglishModificationDate], [d].[EnglishOpeningDate], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliMatureDate], [d].[NepaliModificationDate], [d].[NepaliOpeningDate], [d].[NextInterestPostingDate], [d].[NomineeName], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[EnglishCreationDate], [d0].[EnglishModificationDate], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[NepaliCreationDate], [d0].[NepaliModificationDate], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[EnglishCreationDate], [d1].[EnglishMatureDate], [d1].[EnglishModificationDate], [d1].[EnglishOpeningDate], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NepaliCreationDate], [d1].[NepaliMatureDate], [d1].[NepaliModificationDate], [d1].[NepaliOpeningDate], [d1].[NextInterestPostingDate], [d1].[NomineeName], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[SignatureFileData], [d1].[SignatureFileName], [d1].[SignatureFileType], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Id] = @__getDepositAccountTransactionReport_DepositAccountId_0
2023-08-13 03:57:11.929 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1' (Nullable = true), @__fromDate_1='2023-05-14T00:00:00.0000000', @__toDate_2='2023-05-14T00:00:00.0000000'], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id] AS [BaseTransactionId], [d].[Id] AS [DepositAccountTransactionId], [t].[VoucherNumber], [t].[Remarks] AS [TransactionRemarks], [d].[TransactionType], [t].[TransactionAmount], [d].[Narration], [d].[Remarks] AS [Description], [t].[RealWorldCreationDate], [t].[NepaliCreationDate], [t].[EnglishCreationDate], [d].[BalanceAfterTransaction], [t].[CreatedBy] AS [TransactionDoneBy]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
WHERE [d].[DepositAccountId] = @__getDepositAccountTransactionReport_DepositAccountId_0 AND [t].[EnglishCreationDate] >= @__fromDate_1 AND [t].[EnglishCreationDate] <= @__toDate_2
2023-08-13 03:57:28.970 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.Reports.DepositAccountTransactionReportWrapperDto'.
2023-08-13 03:57:29.004 +05:45 [INF] Executed action MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance) in 33211.348ms
2023-08-13 03:57:29.007 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 03:57:29.013 +05:45 [INF] HTTP GET /TransactionReport/depositAccount responded 200 in 33278.1761 ms
2023-08-13 03:57:29.030 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-1-31&ToDate=2080-1-31&DepositAccountId=1 - - - 200 - application/json;+charset=utf-8 33321.7828ms
2023-08-13 03:57:55.251 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-1-1&ToDate=2080-1-31&DepositAccountId=1 - -
2023-08-13 03:57:55.252 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 03:57:55.253 +05:45 [INF] Route matched with {action = "GetDepositAccountTransactionReport", controller = "TransactionReport"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.Reports.DepositAccountTransactionReportWrapperDto]] GetDepositAccountTransactionReport(MicroFinance.Dtos.Reports.GetDepositAccountTransactionReport) on controller MicroFinance.Controllers.Reports.TransactionReportController (MicroFinance).
2023-08-13 03:57:58.221 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[EnglishCreationDate], [d].[EnglishMatureDate], [d].[EnglishModificationDate], [d].[EnglishOpeningDate], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NepaliCreationDate], [d].[NepaliMatureDate], [d].[NepaliModificationDate], [d].[NepaliOpeningDate], [d].[NextInterestPostingDate], [d].[NomineeName], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[EnglishCreationDate], [d0].[EnglishModificationDate], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[NepaliCreationDate], [d0].[NepaliModificationDate], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[EnglishCreationDate], [d1].[EnglishMatureDate], [d1].[EnglishModificationDate], [d1].[EnglishOpeningDate], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NepaliCreationDate], [d1].[NepaliMatureDate], [d1].[NepaliModificationDate], [d1].[NepaliOpeningDate], [d1].[NextInterestPostingDate], [d1].[NomineeName], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[SignatureFileData], [d1].[SignatureFileName], [d1].[SignatureFileType], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Id] = @__getDepositAccountTransactionReport_DepositAccountId_0
2023-08-13 03:58:10.654 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__getDepositAccountTransactionReport_DepositAccountId_0='1' (Nullable = true), @__fromDate_1='2023-04-14T00:00:00.0000000', @__toDate_2='2023-05-14T00:00:00.0000000'], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id] AS [BaseTransactionId], [d].[Id] AS [DepositAccountTransactionId], [t].[VoucherNumber], [t].[Remarks] AS [TransactionRemarks], [d].[TransactionType], [t].[TransactionAmount], [d].[Narration], [d].[Remarks] AS [Description], [t].[RealWorldCreationDate], [t].[NepaliCreationDate], [t].[EnglishCreationDate], [d].[BalanceAfterTransaction], [t].[CreatedBy] AS [TransactionDoneBy]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
WHERE [d].[DepositAccountId] = @__getDepositAccountTransactionReport_DepositAccountId_0 AND [t].[EnglishCreationDate] >= @__fromDate_1 AND [t].[EnglishCreationDate] <= @__toDate_2
2023-08-13 03:58:10.745 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__firstReport_RealWorldCreationDate_0='2023-08-13T02:40:46.7821206'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[BalanceAfterTransaction], [d].[CollectedByEmployeeId], [d].[DepositAccountId], [d].[Narration], [d].[Remarks], [d].[Source], [d].[TransactionId], [d].[TransactionType], [d].[WithDrawalChequeNumber], [d].[WithDrawalType], [t].[Id], [t].[AmountInWords], [t].[BankChequeNumber], [t].[BankDetailId], [t].[BranchCode], [t].[CreatedBy], [t].[CreatorId], [t].[EnglishCreationDate], [t].[EnglishModificationDate], [t].[ModifiedBy], [t].[ModifierBranchCode], [t].[ModifierId], [t].[NepaliCreationDate], [t].[NepaliModificationDate], [t].[PaymentType], [t].[RealWorldCreationDate], [t].[RealWorldModificationDate], [t].[Remarks], [t].[TransactionAmount], [t].[VoucherNumber]
FROM [DepositAccountTransactions] AS [d]
INNER JOIN [Transactions] AS [t] ON [d].[TransactionId] = [t].[Id]
WHERE [t].[RealWorldCreationDate] < @__firstReport_RealWorldCreationDate_0
ORDER BY [t].[RealWorldCreationDate] DESC
2023-08-13 03:58:38.847 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.Reports.DepositAccountTransactionReportWrapperDto'.
2023-08-13 03:58:38.859 +05:45 [INF] Executed action MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance) in 43606.2604ms
2023-08-13 03:58:38.859 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Reports.TransactionReportController.GetDepositAccountTransactionReport (MicroFinance)'
2023-08-13 03:58:38.859 +05:45 [INF] HTTP GET /TransactionReport/depositAccount responded 200 in 43607.3866 ms
2023-08-13 03:58:38.860 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/TransactionReport/depositAccount?FromDate=2080-1-1&ToDate=2080-1-31&DepositAccountId=1 - - - 200 - application/json;+charset=utf-8 43608.2894ms
2023-08-13 14:42:05.235 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 14:42:05.436 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 14:42:05.438 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 14:42:20.859 +05:45 [ERR] 8/13/2023 2:42:20 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 14:42:20.900 +05:45 [ERR] 8/13/2023 2:42:20 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 14:42:20.932 +05:45 [ERR] 8/13/2023 2:42:20 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 14:42:20.967 +05:45 [ERR] 8/13/2023 2:42:20 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 14:42:21.086 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 14:42:21.534 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 14:42:21.534 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 14:42:21.535 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 14:42:21.535 +05:45 [INF] Hosting environment: Development
2023-08-13 14:42:21.535 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 14:42:30.826 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-13 14:42:30.867 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 401 0 - 43.7761ms
2023-08-13 14:42:41.090 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-13 14:42:41.337 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 247.0090ms
2023-08-13 14:42:41.645 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-13 14:42:42.071 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 425.6152ms
2023-08-13 16:35:08.765 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 16:35:09.006 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 16:35:09.009 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 16:35:24.450 +05:45 [ERR] 8/13/2023 4:35:24 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:35:24.494 +05:45 [ERR] 8/13/2023 4:35:24 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:35:24.529 +05:45 [ERR] 8/13/2023 4:35:24 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:35:24.576 +05:45 [ERR] 8/13/2023 4:35:24 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:35:24.716 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 16:35:25.179 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 16:35:25.180 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 16:35:25.180 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 16:35:25.181 +05:45 [INF] Hosting environment: Development
2023-08-13 16:35:25.181 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 16:35:30.208 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-13 16:35:30.471 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 264.8861ms
2023-08-13 16:35:30.701 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-13 16:35:31.114 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 412.7711ms
2023-08-13 16:36:58.529 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 16:36:58.703 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 16:36:58.705 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 16:37:14.017 +05:45 [ERR] 8/13/2023 4:37:13 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:37:14.060 +05:45 [ERR] 8/13/2023 4:37:14 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:37:14.100 +05:45 [ERR] 8/13/2023 4:37:14 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:37:14.135 +05:45 [ERR] 8/13/2023 4:37:14 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:37:14.269 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 16:37:14.732 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 16:37:14.732 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 16:37:14.733 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 16:37:14.733 +05:45 [INF] Hosting environment: Development
2023-08-13 16:37:14.733 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 16:38:31.994 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 16:38:32.162 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 16:38:32.164 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 16:38:47.361 +05:45 [ERR] 8/13/2023 4:38:47 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:38:47.401 +05:45 [ERR] 8/13/2023 4:38:47 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:38:47.446 +05:45 [ERR] 8/13/2023 4:38:47 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:38:47.489 +05:45 [ERR] 8/13/2023 4:38:47 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:38:47.613 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 16:38:48.078 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 16:38:48.079 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 16:38:48.079 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 16:38:48.080 +05:45 [INF] Hosting environment: Development
2023-08-13 16:38:48.080 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 16:39:31.783 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 16:39:32.070 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 16:39:32.073 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 16:39:47.486 +05:45 [ERR] 8/13/2023 4:39:47 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:39:47.561 +05:45 [ERR] 8/13/2023 4:39:47 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:39:47.619 +05:45 [ERR] 8/13/2023 4:39:47 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:39:47.695 +05:45 [ERR] 8/13/2023 4:39:47 PM: Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 109
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:39:47.979 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 16:39:48.596 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 16:39:48.596 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 16:39:48.596 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 16:39:48.597 +05:45 [INF] Hosting environment: Development
2023-08-13 16:39:48.598 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 16:39:53.242 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-13 16:39:53.504 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 265.7174ms
2023-08-13 16:39:53.771 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-13 16:39:54.203 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 432.3681ms
2023-08-13 16:40:36.585 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73
2023-08-13 16:40:36.594 +05:45 [INF] CORS policy execution successful.
2023-08-13 16:40:36.805 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:40:36.838 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-08-13 16:40:52.455 +05:45 [ERR] An error occurred using the connection to database 'fintex_dev' on server 'localhost'.
2023-08-13 16:40:52.470 +05:45 [ERR] An exception occurred while iterating over the results of a query for context type 'MicroFinance.DBContext.ApplicationDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:00000000-0000-0000-0000-000000000000
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:00000000-0000-0000-0000-000000000000
2023-08-13 16:40:52.633 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 15789.6497ms
2023-08-13 16:40:52.677 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:40:52.777 +05:45 [INF] HTTP POST /FinanceCompany/login responded 401 in 16172.0054 ms
2023-08-13 16:40:52.805 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73 - 401 - application/json 16220.1167ms
2023-08-13 16:41:14.516 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73
2023-08-13 16:41:14.523 +05:45 [INF] CORS policy execution successful.
2023-08-13 16:41:14.524 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:41:14.524 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-08-13 16:41:14.821 +05:45 [ERR] An error occurred using the connection to database 'fintex_dev' on server 'localhost'.
2023-08-13 16:41:14.825 +05:45 [ERR] An exception occurred while iterating over the results of a query for context type 'MicroFinance.DBContext.ApplicationDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 0 - Unknown error -1937215752)
 ---> System.ComponentModel.Win32Exception (0x8C886EF8): Unknown error -1937215752
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParser.ConsumePreLoginHandshake(SqlConnectionEncryptOption encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean& marsCapable, Boolean& fedAuthRequired, Boolean tlsFirst)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:c1045c57-f81d-4b41-aa8b-05562fd666a7
Error Number:-1937215752,State:0,Class:20
Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 0 - Unknown error -1937215752)
 ---> System.ComponentModel.Win32Exception (0x8C886EF8): Unknown error -1937215752
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParser.ConsumePreLoginHandshake(SqlConnectionEncryptOption encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean& marsCapable, Boolean& fedAuthRequired, Boolean tlsFirst)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:c1045c57-f81d-4b41-aa8b-05562fd666a7
Error Number:-1937215752,State:0,Class:20
2023-08-13 16:41:15.000 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 475.6765ms
2023-08-13 16:41:15.000 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:41:15.076 +05:45 [INF] HTTP POST /FinanceCompany/login responded 401 in 553.5367 ms
2023-08-13 16:41:15.077 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73 - 401 - application/json 560.7671ms
2023-08-13 16:41:30.839 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 16:41:31.029 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 16:41:31.031 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 16:41:32.277 +05:45 [INF] Executed DbCommand (69ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 16:41:32.388 +05:45 [INF] Executed DbCommand (73ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 16:41:32.440 +05:45 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 16:41:32.442 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 16:41:32.487 +05:45 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 16:41:32.520 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 16:41:32.880 +05:45 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.893 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.899 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.907 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.920 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.932 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.937 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.944 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.948 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.952 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.958 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.968 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.973 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.979 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.988 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:32.999 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:33.006 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:33.013 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:33.020 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:33.026 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:41:33.154 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 16:41:33.366 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 16:41:33.366 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 16:41:33.371 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 16:41:33.392 +05:45 [INF] Hosting environment: Development
2023-08-13 16:41:33.393 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 16:41:33.618 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73
2023-08-13 16:41:33.703 +05:45 [INF] CORS policy execution successful.
2023-08-13 16:41:33.806 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:41:33.844 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-08-13 16:41:34.659 +05:45 [INF] Executed DbCommand (61ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 16:41:34.887 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 16:41:34.901 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 16:41:34.962 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 16:41:34.975 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 16:41:35.019 +05:45 [INF] 8/13/2023 4:41:35 PM User Logged In > admin
2023-08-13 16:41:35.049 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-08-13 16:41:35.201 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 1351.387ms
2023-08-13 16:41:35.203 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:41:35.330 +05:45 [INF] HTTP POST /FinanceCompany/login responded 401 in 1620.7595 ms
2023-08-13 16:41:35.350 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73 - 401 - application/json 1734.7897ms
2023-08-13 16:41:40.711 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73
2023-08-13 16:41:40.717 +05:45 [INF] CORS policy execution successful.
2023-08-13 16:41:40.718 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:41:40.719 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-08-13 16:41:40.798 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 16:41:40.864 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 16:41:40.909 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 16:41:40.911 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 16:41:40.919 +05:45 [INF] 8/13/2023 4:41:40 PM User Logged In > admin
2023-08-13 16:41:40.963 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__userId_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-08-13 16:41:41.065 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 346.6741ms
2023-08-13 16:41:41.066 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:41:41.124 +05:45 [INF] HTTP POST /FinanceCompany/login responded 401 in 406.5204 ms
2023-08-13 16:41:41.125 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73 - 401 - application/json 413.8437ms
2023-08-13 16:41:48.932 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73
2023-08-13 16:41:48.934 +05:45 [INF] CORS policy execution successful.
2023-08-13 16:41:48.937 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:41:48.937 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-08-13 16:41:49.016 +05:45 [INF] Executed DbCommand (64ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 16:41:49.073 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 16:41:49.109 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 16:41:49.134 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 16:41:49.161 +05:45 [INF] 8/13/2023 4:41:49 PM User Logged In > admin
2023-08-13 16:41:49.165 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-08-13 16:41:49.324 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 386.8365ms
2023-08-13 16:41:49.324 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:41:49.383 +05:45 [INF] HTTP POST /FinanceCompany/login responded 401 in 448.5460 ms
2023-08-13 16:41:49.383 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73 - 401 - application/json 450.6541ms
2023-08-13 16:42:03.366 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-13 16:42:03.457 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 90.2957ms
2023-08-13 16:42:03.755 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-13 16:42:04.171 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 416.0356ms
2023-08-13 16:42:20.932 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73
2023-08-13 16:42:20.933 +05:45 [INF] CORS policy execution successful.
2023-08-13 16:42:20.933 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:42:20.933 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-08-13 16:42:20.957 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 16:42:21.090 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 16:42:21.140 +05:45 [INF] Executed DbCommand (25ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 16:42:21.152 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 16:42:21.187 +05:45 [INF] 8/13/2023 4:42:21 PM User Logged In > admin
2023-08-13 16:42:21.190 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-08-13 16:42:21.339 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 405.6383ms
2023-08-13 16:42:21.339 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:42:21.394 +05:45 [INF] HTTP POST /FinanceCompany/login responded 401 in 461.2993 ms
2023-08-13 16:42:21.394 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73 - 401 - application/json 461.6991ms
2023-08-13 16:42:57.730 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 16:42:57.900 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 16:42:57.902 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 16:42:58.921 +05:45 [INF] Executed DbCommand (67ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 16:42:59.027 +05:45 [INF] Executed DbCommand (65ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 16:42:59.043 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 16:42:59.044 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 16:42:59.071 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 16:42:59.106 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 16:42:59.456 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.466 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.471 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.476 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.499 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.519 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.524 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.529 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.532 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.538 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.542 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.557 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.560 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.562 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.565 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.568 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.573 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.576 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.580 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.583 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 16:42:59.704 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 16:42:59.862 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 16:42:59.862 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 16:42:59.866 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 16:42:59.887 +05:45 [INF] Hosting environment: Development
2023-08-13 16:42:59.887 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 16:43:05.861 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-13 16:43:06.110 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 252.6064ms
2023-08-13 16:43:06.374 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-13 16:43:06.804 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 429.4446ms
2023-08-13 16:43:25.630 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73
2023-08-13 16:43:25.632 +05:45 [INF] CORS policy execution successful.
2023-08-13 16:43:25.712 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:43:25.741 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-08-13 16:43:30.110 +05:45 [INF] Executed DbCommand (55ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 16:43:32.238 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 16:43:32.279 +05:45 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 16:43:55.045 +05:45 [INF] Executed DbCommand (189ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 16:43:56.986 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 16:44:04.304 +05:45 [INF] 8/13/2023 4:44:04 PM User Logged In > admin
2023-08-13 16:44:04.341 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-08-13 16:44:04.454 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 38708.8637ms
2023-08-13 16:44:04.456 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:44:04.544 +05:45 [INF] HTTP POST /FinanceCompany/login responded 401 in 38905.2826 ms
2023-08-13 16:44:04.563 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73 - 401 - application/json 38932.6632ms
2023-08-13 16:44:10.633 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73
2023-08-13 16:44:10.637 +05:45 [INF] CORS policy execution successful.
2023-08-13 16:44:10.638 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:44:10.639 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-08-13 16:44:12.087 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 16:44:13.061 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 16:44:18.987 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__userName_0='admin' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 16:44:20.629 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-13 16:44:27.321 +05:45 [INF] 8/13/2023 4:44:27 PM User Logged In > admin
2023-08-13 16:44:41.444 +05:45 [INF] Executed DbCommand (117ms) [Parameters=[@__userId_0='25edb8a2-3d8c-4bcd-a4be-f1d04566e3a3' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-08-13 16:44:41.820 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 31181.3021ms
2023-08-13 16:44:41.820 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-13 16:49:28.385 +05:45 [INF] HTTP POST /FinanceCompany/login responded 401 in 317747.1169 ms
2023-08-13 16:49:28.431 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73 - 401 - application/json 317797.8019ms
2023-08-13 16:49:51.780 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/SuperAdmin/login application/json 54
2023-08-13 16:49:51.836 +05:45 [INF] CORS policy execution successful.
2023-08-13 16:49:51.903 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.SuperAdminController.Login (MicroFinance)'
2023-08-13 16:49:51.942 +05:45 [INF] Route matched with {action = "Login", controller = "SuperAdmin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.SuperAdminLoginDto) on controller MicroFinance.Controllers.UserManagement.SuperAdminController (MicroFinance).
2023-08-13 16:49:55.926 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[@__normalizedUserName_0='FINTEX' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-08-13 16:49:55.991 +05:45 [INF] 8/13/2023 4:49:55 PM: SuperAdmin Logged In > Fintex
2023-08-13 16:49:56.016 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='985485a7-90f9-4a52-8120-81dab43ff7dd' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-08-13 16:49:56.155 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.SuperAdminController.Login (MicroFinance) in 4212.7849ms
2023-08-13 16:49:56.155 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.SuperAdminController.Login (MicroFinance)'
2023-08-13 16:49:56.204 +05:45 [INF] HTTP POST /SuperAdmin/login responded 401 in 4367.6276 ms
2023-08-13 16:49:56.205 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/SuperAdmin/login application/json 54 - 401 - application/json 4436.0673ms
2023-08-13 18:51:21.106 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 18:51:21.263 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 18:51:21.264 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 18:51:21.672 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 18:51:21.672 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 18:51:51.092 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 18:51:51.215 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 18:51:51.216 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 18:51:52.219 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 18:51:52.219 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 18:51:52.551 +05:45 [INF] Executed DbCommand (237ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [fintex_dev];
2023-08-13 18:51:52.643 +05:45 [INF] Executed DbCommand (88ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [fintex_dev] SET READ_COMMITTED_SNAPSHOT ON;
END;
2023-08-13 18:51:52.670 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 18:51:52.757 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [__EFMigrationsHistory] (
    [MigrationId] nvarchar(150) NOT NULL,
    [ProductVersion] nvarchar(32) NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
);
2023-08-13 18:51:52.759 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 18:51:52.786 +05:45 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 18:51:52.799 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 18:51:52.823 +05:45 [INF] Applying migration '20230813130621_Initial'.
2023-08-13 18:51:52.996 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AccountTypes] (
    [Id] int NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AccountTypes] PRIMARY KEY ([Id])
);
2023-08-13 18:51:52.998 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoles] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(256) NULL,
    [NormalizedName] nvarchar(256) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY ([Id])
);
2023-08-13 18:51:52.999 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [BankTypes] (
    [Id] int NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_BankTypes] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.002 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Branches] (
    [Id] int NOT NULL IDENTITY,
    [BranchCode] nvarchar(450) NOT NULL,
    [BranchName] nvarchar(max) NULL,
    [IsActive] bit NOT NULL,
    [CreatedOn] datetime2 NOT NULL,
    [ModifiedOn] datetime2 NULL,
    [CreatedBy] nvarchar(max) NOT NULL,
    [ModifiedBy] nvarchar(max) NULL,
    CONSTRAINT [PK_Branches] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.004 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Calendars] (
    [Id] int NOT NULL IDENTITY,
    [Year] int NOT NULL,
    [Month] int NOT NULL,
    [MonthName] nvarchar(max) NOT NULL,
    [NumberOfDay] int NOT NULL,
    [RunningDay] int NOT NULL,
    [IsActive] bit NOT NULL,
    [IsLocked] bit NULL,
    [CreatedOn] datetime2 NOT NULL,
    [CreatedBy] nvarchar(max) NOT NULL,
    [ModifiedOn] datetime2 NULL,
    [ModifiedBy] nvarchar(max) NULL,
    CONSTRAINT [PK_Calendars] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.006 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Casts] (
    [Id] int NOT NULL IDENTITY,
    [Code] int NOT NULL,
    [NepaliName] nvarchar(max) NULL,
    [EnglishName] nvarchar(max) NULL,
    CONSTRAINT [PK_Casts] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.008 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ClientGroups] (
    [Id] int NOT NULL IDENTITY,
    [Code] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_ClientGroups] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.013 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ClientKYMTypes] (
    [Id] int NOT NULL,
    [Type] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_ClientKYMTypes] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.015 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ClientTypes] (
    [Id] int NOT NULL,
    [Type] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_ClientTypes] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.017 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ClientUnits] (
    [Id] int NOT NULL IDENTITY,
    [Code] int NOT NULL,
    CONSTRAINT [PK_ClientUnits] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.019 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [CompanyDetails] (
    [Id] int NOT NULL IDENTITY,
    [CompanyName] nvarchar(max) NOT NULL,
    [CompanyNameNepali] nvarchar(max) NULL,
    [CompanyAddress] nvarchar(max) NULL,
    [CompanyAddressNepali] nvarchar(max) NULL,
    [PANNo] nvarchar(max) NULL,
    [EstablishedDate] datetime2 NULL,
    [PhoneNo] nvarchar(max) NULL,
    [CompanyEmailAddress] nvarchar(max) NULL,
    [CompanyValidityStartDate] datetime2 NOT NULL,
    [CompanyValidityEndDate] datetime2 NOT NULL,
    [LogoFileData] varbinary(max) NULL,
    [LogoFileName] nvarchar(max) NULL,
    [LogoFileType] int NULL,
    [CurrentTax] decimal(4,2) NOT NULL,
    [CurrentFiscalYear] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_CompanyDetails] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.022 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [DebitOrCredits] (
    [Id] int NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_DebitOrCredits] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.024 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [DepositAccountStatuses] (
    [Id] int NOT NULL,
    [Title] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_DepositAccountStatuses] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.026 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [DepositAccountTypes] (
    [Id] int NOT NULL,
    [Title] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_DepositAccountTypes] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.028 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [DepositPostingSchemes] (
    [Id] int NOT NULL,
    [Title] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_DepositPostingSchemes] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.030 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [DepositSchemeCalculationTypes] (
    [Id] int NOT NULL,
    [Title] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_DepositSchemeCalculationTypes] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.032 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Districts] (
    [Id] int NOT NULL IDENTITY,
    [Code] int NOT NULL,
    [NepaliName] nvarchar(max) NULL,
    [EnglishName] nvarchar(max) NULL,
    CONSTRAINT [PK_Districts] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.038 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Employees] (
    [Id] int NOT NULL IDENTITY,
    [CreatedBy] nvarchar(max) NOT NULL,
    [CreatedOn] datetime2 NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    [Email] nvarchar(450) NOT NULL,
    [PhoneNumber] nvarchar(max) NOT NULL,
    [BranchCode] nvarchar(max) NOT NULL,
    [ModifiedBy] nvarchar(max) NULL,
    [ModifiedOn] datetime2 NULL,
    [DateOfJoining] datetime2 NULL,
    [Designation] nvarchar(max) NULL,
    [GenderCode] int NULL,
    [PFAllowed] bit NULL,
    [SalaryPostingAccount] nvarchar(max) NULL,
    [ProvidentPostingAccount] nvarchar(max) NULL,
    [SalaryAmount] float NULL,
    [Tax] real NULL,
    [Facilities] nvarchar(max) NULL,
    [OtherFacilities] nvarchar(max) NULL,
    [Grade] nvarchar(max) NULL,
    [PANNumber] nvarchar(max) NULL,
    [ProfilePicFileData] varbinary(max) NULL,
    [ProfilePicFileName] nvarchar(max) NULL,
    [ProfilePicFileType] int NULL,
    [CitizenShipFileData] varbinary(max) NULL,
    [CitizenShipFileType] int NULL,
    [CitizenShipFileName] nvarchar(max) NULL,
    [SignatureFileData] varbinary(max) NULL,
    [SignatureFileType] int NULL,
    [SignatureFileName] nvarchar(max) NULL,
    CONSTRAINT [PK_Employees] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.041 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Genders] (
    [Id] int NOT NULL IDENTITY,
    [Code] int NOT NULL,
    [NepaliName] nvarchar(max) NULL,
    [EnglishName] nvarchar(max) NULL,
    CONSTRAINT [PK_Genders] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.044 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [MaritalStatuses] (
    [Id] int NOT NULL IDENTITY,
    [Code] int NOT NULL,
    [NepaliName] nvarchar(max) NULL,
    [EnglishName] nvarchar(max) NULL,
    CONSTRAINT [PK_MaritalStatuses] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.046 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ShareKittas] (
    [Id] int NOT NULL IDENTITY,
    [PriceOfOneKitta] int NOT NULL,
    [CurrentKitta] decimal(18,2) NOT NULL,
    [IsActive] bit NOT NULL,
    CONSTRAINT [PK_ShareKittas] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.048 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [States] (
    [Id] int NOT NULL IDENTITY,
    [Code] int NOT NULL,
    [NepaliName] nvarchar(max) NULL,
    [EnglishName] nvarchar(max) NULL,
    CONSTRAINT [PK_States] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.051 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [UserRoles] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(450) NOT NULL,
    [RoleCode] int NOT NULL,
    CONSTRAINT [PK_UserRoles] PRIMARY KEY ([Id])
);
2023-08-13 18:51:53.054 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [GroupTypes] (
    [Id] int NOT NULL IDENTITY,
    [AccountTypeId] int NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [NepaliName] nvarchar(max) NULL,
    [EntryDate] datetime2 NOT NULL,
    [Schedule] int NULL,
    [CharKhataNumber] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_GroupTypes] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_GroupTypes_AccountTypes_AccountTypeId] FOREIGN KEY ([AccountTypeId]) REFERENCES [AccountTypes] ([Id]) ON DELETE CASCADE
);
2023-08-13 18:51:53.057 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetRoleClaims] (
    [Id] int NOT NULL IDENTITY,
    [RoleId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE
);
2023-08-13 18:51:53.061 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUsers] (
    [Id] nvarchar(450) NOT NULL,
    [DepositLimit] float NULL,
    [LoanLimit] float NULL,
    [IsActive] bit NOT NULL,
    [CreatedBy] nvarchar(max) NOT NULL,
    [CreatedOn] datetime2 NOT NULL,
    [ModifiedBy] nvarchar(max) NULL,
    [ModifiedOn] datetime2 NULL,
    [EmployeeId] int NULL,
    [RoleId] int NOT NULL,
    [UserName] nvarchar(256) NULL,
    [NormalizedUserName] nvarchar(256) NULL,
    [Email] nvarchar(256) NULL,
    [NormalizedEmail] nvarchar(256) NULL,
    [EmailConfirmed] bit NOT NULL,
    [PasswordHash] nvarchar(max) NULL,
    [SecurityStamp] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    [PhoneNumber] nvarchar(max) NULL,
    [PhoneNumberConfirmed] bit NOT NULL,
    [TwoFactorEnabled] bit NOT NULL,
    [LockoutEnd] datetimeoffset NULL,
    [LockoutEnabled] bit NOT NULL,
    [AccessFailedCount] int NOT NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetUsers_Employees_EmployeeId] FOREIGN KEY ([EmployeeId]) REFERENCES [Employees] ([Id]),
    CONSTRAINT [FK_AspNetUsers_UserRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [UserRoles] ([Id])
);
2023-08-13 18:51:53.065 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Ledgers] (
    [Id] int NOT NULL IDENTITY,
    [LedgerCode] int NULL,
    [GroupTypeId] int NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [NepaliName] nvarchar(max) NULL,
    [EntryDate] datetime2 NOT NULL,
    [DepreciationRate] decimal(5,2) NULL,
    [HisabNumber] nvarchar(max) NULL,
    [IsSubLedgerActive] bit NOT NULL,
    [CurrentBalance] decimal(18,4) NOT NULL,
    [IsBank] bit NOT NULL,
    CONSTRAINT [PK_Ledgers] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Ledgers_GroupTypes_GroupTypeId] FOREIGN KEY ([GroupTypeId]) REFERENCES [GroupTypes] ([Id]) ON DELETE CASCADE
);
2023-08-13 18:51:53.068 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserClaims] (
    [Id] int NOT NULL IDENTITY,
    [UserId] nvarchar(450) NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2023-08-13 18:51:53.073 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserLogins] (
    [LoginProvider] nvarchar(450) NOT NULL,
    [ProviderKey] nvarchar(450) NOT NULL,
    [ProviderDisplayName] nvarchar(max) NULL,
    [UserId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY ([LoginProvider], [ProviderKey]),
    CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2023-08-13 18:51:53.076 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserRoles] (
    [UserId] nvarchar(450) NOT NULL,
    [RoleId] nvarchar(450) NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY ([UserId], [RoleId]),
    CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2023-08-13 18:51:53.079 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [AspNetUserTokens] (
    [UserId] nvarchar(450) NOT NULL,
    [LoginProvider] nvarchar(450) NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [Value] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY ([UserId], [LoginProvider], [Name]),
    CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);
2023-08-13 18:51:53.084 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [BankSetups] (
    [Id] int NOT NULL IDENTITY,
    [LedgerId] int NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [NepaliName] nvarchar(max) NULL,
    [BankBranch] nvarchar(max) NOT NULL,
    [AccountNumber] nvarchar(max) NOT NULL,
    [BankTypeId] int NOT NULL,
    [InterestRate] decimal(5,2) NULL,
    [BranchCode] nvarchar(max) NOT NULL,
    [TotalInterestBalance] decimal(18,4) NOT NULL,
    CONSTRAINT [PK_BankSetups] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_BankSetups_BankTypes_BankTypeId] FOREIGN KEY ([BankTypeId]) REFERENCES [BankTypes] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_BankSetups_Ledgers_LedgerId] FOREIGN KEY ([LedgerId]) REFERENCES [Ledgers] ([Id]) ON DELETE CASCADE
);
2023-08-13 18:51:53.091 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Clients] (
    [Id] int NOT NULL IDENTITY,
    [IsKYMUpdated] bit NOT NULL,
    [IsShareAllowed] bit NOT NULL,
    [RegistrationDate] datetime2 NOT NULL,
    [PermanentVdcMunicipality] nvarchar(max) NULL,
    [PermanentVdcMunicipalityNepali] nvarchar(max) NULL,
    [PermanentToleVillage] nvarchar(max) NULL,
    [PermanentToleVillageNepali] nvarchar(max) NULL,
    [PermanentWardNumber] nvarchar(max) NULL,
    [PermanentWardNumberNepali] nvarchar(max) NULL,
    [PermanentDistrictCode] int NULL,
    [PermanentStateCode] int NULL,
    [TemporaryVdcMunicipality] nvarchar(max) NULL,
    [TemporaryVdcMunicipalityNepali] nvarchar(max) NULL,
    [TemporaryToleVillage] nvarchar(max) NULL,
    [TemporaryToleVillageNepali] nvarchar(max) NULL,
    [TemporaryWardNumber] nvarchar(max) NULL,
    [TemporaryWardNumberNepali] nvarchar(max) NULL,
    [TemporaryDistrictCode] int NULL,
    [TemporaryStateCode] nvarchar(max) NULL,
    [ClientMobileNumber1] nvarchar(max) NULL,
    [ClientMobileNumber2] nvarchar(max) NULL,
    [ClientTelephoneNumber1] nvarchar(max) NULL,
    [ClientTelephoneNumber2] nvarchar(max) NULL,
    [ClientEmail] nvarchar(max) NULL,
    [ClientWebsite] nvarchar(max) NULL,
    [ClientMotherName] nvarchar(max) NULL,
    [ClientMotherNameNepali] nvarchar(max) NULL,
    [ClientFatherName] nvarchar(max) NULL,
    [ClientFatherNameNepali] nvarchar(max) NULL,
    [ClientGrandFatherName] nvarchar(max) NULL,
    [ClientGrandFatherNameNepali] nvarchar(max) NULL,
    [ClientSpouseName] nvarchar(max) NULL,
    [ClientSpouseOccupation] nvarchar(max) NULL,
    [ClientNameOfSons] nvarchar(max) NULL,
    [ClientNameOfDaughters] nvarchar(max) NULL,
    [ClientFatherInLaw] nvarchar(max) NULL,
    [ClientMotherInLaw] nvarchar(max) NULL,
    [ClientFirstName] nvarchar(max) NOT NULL,
    [ClientMiddleName] nvarchar(max) NULL,
    [ClientLastName] nvarchar(max) NOT NULL,
    [ClientNepaliName] nvarchar(max) NULL,
    [ClientCastCode] int NULL,
    [ClientGenderCode] int NULL,
    [ClientDateOfBirth] datetime2 NULL,
    [ClientOccupation] nvarchar(max) NULL,
    [ClientCitizenshipNumber] nvarchar(max) NULL,
    [ClientCitizenShipIssueDistrict] nvarchar(max) NULL,
    [ClientCitizenShipIssueDate] datetime2 NULL,
    [ClientNationality] nvarchar(max) NULL,
    [ClientPanNumber] nvarchar(max) NULL,
    [ClientEducationStatus] nvarchar(max) NULL,
    [ClientMartialStatusCode] int NULL,
    [ClientNationalityIdStatus] nvarchar(max) NULL,
    [ClientVotingId] nvarchar(max) NULL,
    [ClientOtherInfo] nvarchar(max) NULL,
    [ClientOtherInfo2] nvarchar(max) NULL,
    [ClientIncomeSource] nvarchar(max) NULL,
    [ClientAccountPurposeNepali] nvarchar(max) NULL,
    [ClientIfMemberOfOtherParty] nvarchar(max) NULL,
    [NomineeName] nvarchar(max) NULL,
    [NomineeNepaliName] nvarchar(max) NULL,
    [NomineeRelation] nvarchar(max) NULL,
    [NomineeNepaliRelation] nvarchar(max) NULL,
    [NomineeIntroducedBy] nvarchar(max) NULL,
    [NomineeAddress] nvarchar(max) NULL,
    [NomineeCitizenshipNumber] nvarchar(max) NULL,
    [NomineeContactNumber] nvarchar(max) NULL,
    [ClientPhotoFileData] varbinary(max) NULL,
    [ClientPhotoFileName] nvarchar(max) NULL,
    [ClientPhotoFileType] int NULL,
    [ClientCitizenshipFileData] varbinary(max) NULL,
    [ClientCitizenshipFileName] nvarchar(max) NULL,
    [ClientCitizenshipFileType] int NULL,
    [ClientSignatureFileData] varbinary(max) NULL,
    [ClientSignatureFileName] nvarchar(max) NULL,
    [ClientSignatureFileType] int NULL,
    [NomineePhotoFileData] varbinary(max) NULL,
    [NomineePhotoFileName] nvarchar(max) NULL,
    [NomineePhotoFileType] int NULL,
    [ClientTypeId] int NOT NULL,
    [ClientShareTypeInfoId] int NULL,
    [ClientGroupId] int NULL,
    [ClientUnitId] int NULL,
    [KYMTypeId] int NULL,
    [ClientId] nvarchar(450) NULL,
    [IsActive] bit NOT NULL,
    [CreatedBy] nvarchar(max) NOT NULL,
    [BranchCode] nvarchar(max) NOT NULL,
    [CreatorId] nvarchar(max) NOT NULL,
    [CreatedOn] datetime2 NOT NULL,
    [IsModified] bit NULL,
    [ModifiedBy] nvarchar(max) NULL,
    [ModifierId] nvarchar(max) NULL,
    [ModifiedOn] datetime2 NULL,
    [ModificationCount] int NULL,
    CONSTRAINT [PK_Clients] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Clients_ClientGroups_ClientGroupId] FOREIGN KEY ([ClientGroupId]) REFERENCES [ClientGroups] ([Id]),
    CONSTRAINT [FK_Clients_ClientKYMTypes_KYMTypeId] FOREIGN KEY ([KYMTypeId]) REFERENCES [ClientKYMTypes] ([Id]),
    CONSTRAINT [FK_Clients_ClientTypes_ClientTypeId] FOREIGN KEY ([ClientTypeId]) REFERENCES [ClientTypes] ([Id]),
    CONSTRAINT [FK_Clients_ClientUnits_ClientUnitId] FOREIGN KEY ([ClientUnitId]) REFERENCES [ClientUnits] ([Id]),
    CONSTRAINT [FK_Clients_Ledgers_ClientShareTypeInfoId] FOREIGN KEY ([ClientShareTypeInfoId]) REFERENCES [Ledgers] ([Id])
);
2023-08-13 18:51:53.095 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [SubLedgers] (
    [Id] int NOT NULL IDENTITY,
    [SubLedgerCode] int NULL,
    [Name] nvarchar(450) NOT NULL,
    [Description] nvarchar(max) NULL,
    [CurrentBalance] decimal(18,4) NOT NULL,
    [LedgerId] int NOT NULL,
    CONSTRAINT [PK_SubLedgers] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_SubLedgers_Ledgers_LedgerId] FOREIGN KEY ([LedgerId]) REFERENCES [Ledgers] ([Id]) ON DELETE CASCADE
);
2023-08-13 18:51:53.099 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Transactions] (
    [Id] int NOT NULL IDENTITY,
    [VoucherNumber] nvarchar(450) NULL,
    [TransactionAmount] decimal(18,4) NOT NULL,
    [AmountInWords] nvarchar(max) NULL,
    [Remarks] nvarchar(max) NULL,
    [PaymentType] int NULL,
    [BankDetailId] int NULL,
    [BankChequeNumber] nvarchar(max) NULL,
    [CreatedBy] nvarchar(max) NOT NULL,
    [CreatorId] nvarchar(max) NOT NULL,
    [BranchCode] nvarchar(max) NOT NULL,
    [EnglishCreationDate] datetime2 NOT NULL,
    [NepaliCreationDate] nvarchar(max) NOT NULL,
    [RealWorldCreationDate] datetime2 NOT NULL,
    [ModifiedBy] nvarchar(max) NULL,
    [ModifierId] nvarchar(max) NULL,
    [ModifierBranchCode] nvarchar(max) NULL,
    [RealWorldModificationDate] datetime2 NULL,
    [EnglishModificationDate] datetime2 NULL,
    [NepaliModificationDate] nvarchar(max) NULL,
    CONSTRAINT [PK_Transactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Transactions_BankSetups_BankDetailId] FOREIGN KEY ([BankDetailId]) REFERENCES [BankSetups] ([Id])
);
2023-08-13 18:51:53.103 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ShareAccounts] (
    [Id] int NOT NULL IDENTITY,
    [ClientId] int NOT NULL,
    [CurrentShareBalance] decimal(18,2) NOT NULL,
    [IsActive] bit NOT NULL,
    [IsClose] bit NOT NULL,
    CONSTRAINT [PK_ShareAccounts] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_ShareAccounts_Clients_ClientId] FOREIGN KEY ([ClientId]) REFERENCES [Clients] ([Id])
);
2023-08-13 18:51:53.108 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [DepositSchemes] (
    [Id] int NOT NULL IDENTITY,
    [SchemeName] nvarchar(450) NOT NULL,
    [SchemeNameNepali] nvarchar(max) NULL,
    [SchemeTypeId] int NOT NULL,
    [Symbol] nvarchar(450) NOT NULL,
    [MinimumBalance] int NOT NULL,
    [InterestRateOnMinimumBalance] decimal(5,2) NOT NULL,
    [InterestRate] decimal(5,2) NOT NULL,
    [MinimumInterestRate] decimal(5,2) NOT NULL,
    [MaximumInterestRate] decimal(5,2) NOT NULL,
    [Calculation] int NOT NULL,
    [PostingScheme] int NOT NULL,
    [InterestSubLedgerId] int NOT NULL,
    [DepositSubledgerId] int NOT NULL,
    [TaxSubledgerId] int NOT NULL,
    [IsActive] bit NOT NULL,
    [CreatedBy] nvarchar(max) NOT NULL,
    [CreatorId] nvarchar(max) NOT NULL,
    [BranchCode] nvarchar(max) NOT NULL,
    [EnglishCreationDate] datetime2 NOT NULL,
    [NepaliCreationDate] nvarchar(max) NOT NULL,
    [RealWorldCreationDate] datetime2 NOT NULL,
    [ModifiedBy] nvarchar(max) NULL,
    [ModifierId] nvarchar(max) NULL,
    [ModifierBranchCode] nvarchar(max) NULL,
    [EnglishModificationDate] datetime2 NULL,
    [NepaliModificationDate] nvarchar(max) NULL,
    [RealWorldModificationDate] datetime2 NULL,
    CONSTRAINT [PK_DepositSchemes] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_DepositSchemes_Ledgers_SchemeTypeId] FOREIGN KEY ([SchemeTypeId]) REFERENCES [Ledgers] ([Id]),
    CONSTRAINT [FK_DepositSchemes_SubLedgers_DepositSubledgerId] FOREIGN KEY ([DepositSubledgerId]) REFERENCES [SubLedgers] ([Id]),
    CONSTRAINT [FK_DepositSchemes_SubLedgers_InterestSubLedgerId] FOREIGN KEY ([InterestSubLedgerId]) REFERENCES [SubLedgers] ([Id]),
    CONSTRAINT [FK_DepositSchemes_SubLedgers_TaxSubledgerId] FOREIGN KEY ([TaxSubledgerId]) REFERENCES [SubLedgers] ([Id])
);
2023-08-13 18:51:53.112 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [LedgerTransactions] (
    [Id] int NOT NULL IDENTITY,
    [TransactionId] int NOT NULL,
    [LedgerId] int NOT NULL,
    [TransactionType] int NOT NULL,
    [Remarks] nvarchar(max) NULL,
    [BalanceAfterTransaction] decimal(18,4) NOT NULL,
    CONSTRAINT [PK_LedgerTransactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_LedgerTransactions_Ledgers_LedgerId] FOREIGN KEY ([LedgerId]) REFERENCES [Ledgers] ([Id]),
    CONSTRAINT [FK_LedgerTransactions_Transactions_TransactionId] FOREIGN KEY ([TransactionId]) REFERENCES [Transactions] ([Id])
);
2023-08-13 18:51:53.115 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [SubLedgerTransactions] (
    [Id] int NOT NULL IDENTITY,
    [TransactionId] int NOT NULL,
    [SubLedgerId] int NOT NULL,
    [TransactionType] int NOT NULL,
    [Remarks] nvarchar(max) NULL,
    [BalanceAfterTransaction] decimal(18,4) NOT NULL,
    CONSTRAINT [PK_SubLedgerTransactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_SubLedgerTransactions_SubLedgers_SubLedgerId] FOREIGN KEY ([SubLedgerId]) REFERENCES [SubLedgers] ([Id]),
    CONSTRAINT [FK_SubLedgerTransactions_Transactions_TransactionId] FOREIGN KEY ([TransactionId]) REFERENCES [Transactions] ([Id])
);
2023-08-13 18:51:53.121 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [DepositAccounts] (
    [Id] int NOT NULL IDENTITY,
    [DepositSchemeId] int NOT NULL,
    [AccountNumber] nvarchar(450) NULL,
    [NepaliOpeningDate] nvarchar(max) NOT NULL,
    [EnglishOpeningDate] datetime2 NOT NULL,
    [Period] int NOT NULL,
    [PeriodType] int NOT NULL,
    [AccountType] int NOT NULL,
    [NepaliMatureDate] nvarchar(max) NOT NULL,
    [EnglishMatureDate] datetime2 NOT NULL,
    [NextInterestPostingDate] datetime2 NOT NULL,
    [InterestRate] decimal(5,2) NOT NULL,
    [PrincipalAmount] decimal(18,4) NOT NULL,
    [InterestAmount] decimal(18,4) NOT NULL,
    [ReferredByEmployeeId] int NOT NULL,
    [Relation] int NULL,
    [NomineeName] nvarchar(max) NULL,
    [Description] nvarchar(max) NULL,
    [Status] int NOT NULL,
    [IsSMSServiceActive] bit NOT NULL,
    [ExpectedDailyDepositAmount] int NULL,
    [ExpectedTotalDepositDay] int NULL,
    [ExpectedTotalDepositAmount] int NULL,
    [ExpectedTotalReturnAmount] int NULL,
    [ExpectedTotalInterestAmount] int NULL,
    [SignatureFileData] varbinary(max) NULL,
    [SignatureFileName] nvarchar(max) NULL,
    [SignatureFileType] int NULL,
    [ClientId] int NOT NULL,
    [InterestPostingAccountNumberId] int NULL,
    [MatureInterestPostingAccountNumberId] int NULL,
    [IsActive] bit NOT NULL,
    [CreatedBy] nvarchar(max) NOT NULL,
    [CreatorId] nvarchar(max) NOT NULL,
    [BranchCode] nvarchar(max) NOT NULL,
    [EnglishCreationDate] datetime2 NOT NULL,
    [NepaliCreationDate] nvarchar(max) NOT NULL,
    [RealWorldCreationDate] datetime2 NOT NULL,
    [ModifiedBy] nvarchar(max) NULL,
    [ModifierId] nvarchar(max) NULL,
    [ModifierBranchCode] nvarchar(max) NULL,
    [EnglishModificationDate] datetime2 NULL,
    [NepaliModificationDate] nvarchar(max) NULL,
    [RealWorldModificationDate] datetime2 NULL,
    CONSTRAINT [PK_DepositAccounts] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_DepositAccounts_Clients_ClientId] FOREIGN KEY ([ClientId]) REFERENCES [Clients] ([Id]),
    CONSTRAINT [FK_DepositAccounts_DepositAccounts_InterestPostingAccountNumberId] FOREIGN KEY ([InterestPostingAccountNumberId]) REFERENCES [DepositAccounts] ([Id]),
    CONSTRAINT [FK_DepositAccounts_DepositAccounts_MatureInterestPostingAccountNumberId] FOREIGN KEY ([MatureInterestPostingAccountNumberId]) REFERENCES [DepositAccounts] ([Id]),
    CONSTRAINT [FK_DepositAccounts_DepositSchemes_DepositSchemeId] FOREIGN KEY ([DepositSchemeId]) REFERENCES [DepositSchemes] ([Id])
);
2023-08-13 18:51:53.125 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [FlexibleInterestRates] (
    [Id] int NOT NULL IDENTITY,
    [DepositSchemeId] int NOT NULL,
    [EffectiveDate] datetime2 NOT NULL,
    [FromAmount] int NOT NULL,
    [ToAmount] int NOT NULL,
    [InterestRate] decimal(5,2) NOT NULL,
    CONSTRAINT [PK_FlexibleInterestRates] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_FlexibleInterestRates_DepositSchemes_DepositSchemeId] FOREIGN KEY ([DepositSchemeId]) REFERENCES [DepositSchemes] ([Id])
);
2023-08-13 18:51:53.130 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [DepositAccountTransactions] (
    [Id] int NOT NULL IDENTITY,
    [TransactionId] int NOT NULL,
    [DepositAccountId] int NOT NULL,
    [TransactionType] int NOT NULL,
    [WithDrawalType] int NULL,
    [WithDrawalChequeNumber] nvarchar(max) NULL,
    [CollectedByEmployeeId] int NULL,
    [Narration] nvarchar(max) NULL,
    [Source] nvarchar(max) NOT NULL,
    [Remarks] nvarchar(max) NULL,
    [BalanceAfterTransaction] decimal(18,4) NOT NULL,
    CONSTRAINT [PK_DepositAccountTransactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_DepositAccountTransactions_DepositAccounts_DepositAccountId] FOREIGN KEY ([DepositAccountId]) REFERENCES [DepositAccounts] ([Id]),
    CONSTRAINT [FK_DepositAccountTransactions_Transactions_TransactionId] FOREIGN KEY ([TransactionId]) REFERENCES [Transactions] ([Id])
);
2023-08-13 18:51:53.134 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [JointAccounts] (
    [Id] int NOT NULL IDENTITY,
    [DepositAccountId] int NOT NULL,
    [JointClientId] int NOT NULL,
    [RealWorldStartDate] datetime2 NOT NULL,
    [RealWorldEndDate] datetime2 NULL,
    [CompanyCalendarStartDate] nvarchar(max) NOT NULL,
    [CompanyCalendarEndDate] nvarchar(max) NULL,
    CONSTRAINT [PK_JointAccounts] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_JointAccounts_Clients_JointClientId] FOREIGN KEY ([JointClientId]) REFERENCES [Clients] ([Id]),
    CONSTRAINT [FK_JointAccounts_DepositAccounts_DepositAccountId] FOREIGN KEY ([DepositAccountId]) REFERENCES [DepositAccounts] ([Id])
);
2023-08-13 18:51:53.138 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ShareTransactions] (
    [Id] int NOT NULL IDENTITY,
    [ShareTransactionType] int NOT NULL,
    [TransactionType] int NOT NULL,
    [ShareCertificateNumber] nvarchar(max) NULL,
    [Narration] nvarchar(max) NULL,
    [Remarks] nvarchar(max) NULL,
    [TransactionId] int NOT NULL,
    [ShareAccountId] int NOT NULL,
    [TransferToDepositAccountId] int NULL,
    [PaymentDepositAccountId] int NULL,
    [BalanceAfterTransaction] decimal(18,4) NOT NULL,
    CONSTRAINT [PK_ShareTransactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_ShareTransactions_DepositAccounts_PaymentDepositAccountId] FOREIGN KEY ([PaymentDepositAccountId]) REFERENCES [DepositAccounts] ([Id]),
    CONSTRAINT [FK_ShareTransactions_DepositAccounts_TransferToDepositAccountId] FOREIGN KEY ([TransferToDepositAccountId]) REFERENCES [DepositAccounts] ([Id]),
    CONSTRAINT [FK_ShareTransactions_ShareAccounts_ShareAccountId] FOREIGN KEY ([ShareAccountId]) REFERENCES [ShareAccounts] ([Id]),
    CONSTRAINT [FK_ShareTransactions_Transactions_TransactionId] FOREIGN KEY ([TransactionId]) REFERENCES [Transactions] ([Id])
);
2023-08-13 18:51:53.141 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_AccountTypes_Name] ON [AccountTypes] ([Name]);
2023-08-13 18:51:53.142 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetRoleClaims_RoleId] ON [AspNetRoleClaims] ([RoleId]);
2023-08-13 18:51:53.145 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [RoleNameIndex] ON [AspNetRoles] ([NormalizedName]) WHERE [NormalizedName] IS NOT NULL;
2023-08-13 18:51:53.147 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserClaims_UserId] ON [AspNetUserClaims] ([UserId]);
2023-08-13 18:51:53.148 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserLogins_UserId] ON [AspNetUserLogins] ([UserId]);
2023-08-13 18:51:53.150 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUserRoles_RoleId] ON [AspNetUserRoles] ([RoleId]);
2023-08-13 18:51:53.152 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [EmailIndex] ON [AspNetUsers] ([NormalizedEmail]);
2023-08-13 18:51:53.154 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_AspNetUsers_EmployeeId] ON [AspNetUsers] ([EmployeeId]) WHERE [EmployeeId] IS NOT NULL;
2023-08-13 18:51:53.156 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_AspNetUsers_RoleId] ON [AspNetUsers] ([RoleId]);
2023-08-13 18:51:53.158 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [UserNameIndex] ON [AspNetUsers] ([NormalizedUserName]) WHERE [NormalizedUserName] IS NOT NULL;
2023-08-13 18:51:53.160 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_BankSetups_BankTypeId] ON [BankSetups] ([BankTypeId]);
2023-08-13 18:51:53.161 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_BankSetups_LedgerId] ON [BankSetups] ([LedgerId]);
2023-08-13 18:51:53.164 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_BankSetups_LedgerId_Name] ON [BankSetups] ([LedgerId], [Name]);
2023-08-13 18:51:53.166 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Branches_BranchCode] ON [Branches] ([BranchCode]);
2023-08-13 18:51:53.168 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Calendars_Year_Month] ON [Calendars] ([Year], [Month]);
2023-08-13 18:51:53.170 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_ClientGroups_Code] ON [ClientGroups] ([Code]);
2023-08-13 18:51:53.171 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_ClientKYMTypes_Type] ON [ClientKYMTypes] ([Type]);
2023-08-13 18:51:53.173 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Clients_ClientGroupId] ON [Clients] ([ClientGroupId]);
2023-08-13 18:51:53.176 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Clients_ClientId] ON [Clients] ([ClientId]) WHERE [ClientId] IS NOT NULL;
2023-08-13 18:51:53.178 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Clients_ClientShareTypeInfoId] ON [Clients] ([ClientShareTypeInfoId]);
2023-08-13 18:51:53.180 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Clients_ClientTypeId] ON [Clients] ([ClientTypeId]);
2023-08-13 18:51:53.182 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Clients_ClientUnitId] ON [Clients] ([ClientUnitId]);
2023-08-13 18:51:53.183 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Clients_KYMTypeId] ON [Clients] ([KYMTypeId]);
2023-08-13 18:51:53.185 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_ClientTypes_Type] ON [ClientTypes] ([Type]);
2023-08-13 18:51:53.186 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_ClientUnits_Code] ON [ClientUnits] ([Code]);
2023-08-13 18:51:53.266 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_DepositAccounts_AccountNumber] ON [DepositAccounts] ([AccountNumber]) WHERE [AccountNumber] IS NOT NULL;
2023-08-13 18:51:53.268 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_DepositAccounts_ClientId] ON [DepositAccounts] ([ClientId]);
2023-08-13 18:51:53.270 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_DepositAccounts_DepositSchemeId] ON [DepositAccounts] ([DepositSchemeId]);
2023-08-13 18:51:53.272 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_DepositAccounts_InterestPostingAccountNumberId] ON [DepositAccounts] ([InterestPostingAccountNumberId]);
2023-08-13 18:51:53.274 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_DepositAccounts_MatureInterestPostingAccountNumberId] ON [DepositAccounts] ([MatureInterestPostingAccountNumberId]);
2023-08-13 18:51:53.275 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_DepositAccountTransactions_DepositAccountId] ON [DepositAccountTransactions] ([DepositAccountId]);
2023-08-13 18:51:53.276 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_DepositAccountTransactions_Id] ON [DepositAccountTransactions] ([Id]);
2023-08-13 18:51:53.278 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_DepositAccountTransactions_TransactionId] ON [DepositAccountTransactions] ([TransactionId]);
2023-08-13 18:51:53.280 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_DepositSchemes_DepositSubledgerId] ON [DepositSchemes] ([DepositSubledgerId]);
2023-08-13 18:51:53.282 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_DepositSchemes_InterestSubLedgerId] ON [DepositSchemes] ([InterestSubLedgerId]);
2023-08-13 18:51:53.285 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_DepositSchemes_SchemeName] ON [DepositSchemes] ([SchemeName]);
2023-08-13 18:51:53.288 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_DepositSchemes_SchemeTypeId] ON [DepositSchemes] ([SchemeTypeId]);
2023-08-13 18:51:53.291 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_DepositSchemes_Symbol] ON [DepositSchemes] ([Symbol]);
2023-08-13 18:51:53.293 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_DepositSchemes_TaxSubledgerId] ON [DepositSchemes] ([TaxSubledgerId]);
2023-08-13 18:51:53.299 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Employees_Email] ON [Employees] ([Email]);
2023-08-13 18:51:53.304 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_FlexibleInterestRates_DepositSchemeId] ON [FlexibleInterestRates] ([DepositSchemeId]);
2023-08-13 18:51:53.305 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_GroupTypes_AccountTypeId_Name] ON [GroupTypes] ([AccountTypeId], [Name]);
2023-08-13 18:51:53.307 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_GroupTypes_CharKhataNumber] ON [GroupTypes] ([CharKhataNumber]);
2023-08-13 18:51:53.309 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_JointAccounts_DepositAccountId] ON [JointAccounts] ([DepositAccountId]);
2023-08-13 18:51:53.310 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_JointAccounts_JointClientId] ON [JointAccounts] ([JointClientId]);
2023-08-13 18:51:53.312 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Ledgers_GroupTypeId_Name] ON [Ledgers] ([GroupTypeId], [Name]);
2023-08-13 18:51:53.314 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Ledgers_LedgerCode] ON [Ledgers] ([LedgerCode]) WHERE [LedgerCode] IS NOT NULL;
2023-08-13 18:51:53.315 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_LedgerTransactions_LedgerId] ON [LedgerTransactions] ([LedgerId]);
2023-08-13 18:51:53.317 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_LedgerTransactions_TransactionId] ON [LedgerTransactions] ([TransactionId]);
2023-08-13 18:51:53.319 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_ShareAccounts_ClientId] ON [ShareAccounts] ([ClientId]);
2023-08-13 18:51:53.320 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ShareTransactions_PaymentDepositAccountId] ON [ShareTransactions] ([PaymentDepositAccountId]);
2023-08-13 18:51:53.322 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ShareTransactions_ShareAccountId] ON [ShareTransactions] ([ShareAccountId]);
2023-08-13 18:51:53.323 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_ShareTransactions_TransactionId] ON [ShareTransactions] ([TransactionId]);
2023-08-13 18:51:53.324 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ShareTransactions_TransferToDepositAccountId] ON [ShareTransactions] ([TransferToDepositAccountId]);
2023-08-13 18:51:53.326 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_SubLedgers_LedgerId] ON [SubLedgers] ([LedgerId]);
2023-08-13 18:51:53.327 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_SubLedgers_Name_LedgerId] ON [SubLedgers] ([Name], [LedgerId]);
2023-08-13 18:51:53.329 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_SubLedgers_SubLedgerCode] ON [SubLedgers] ([SubLedgerCode]) WHERE [SubLedgerCode] IS NOT NULL;
2023-08-13 18:51:53.330 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_SubLedgerTransactions_SubLedgerId] ON [SubLedgerTransactions] ([SubLedgerId]);
2023-08-13 18:51:53.332 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_SubLedgerTransactions_TransactionId] ON [SubLedgerTransactions] ([TransactionId]);
2023-08-13 18:51:53.333 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Transactions_BankDetailId] ON [Transactions] ([BankDetailId]);
2023-08-13 18:51:53.335 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_Transactions_VoucherNumber] ON [Transactions] ([VoucherNumber]) WHERE [VoucherNumber] IS NOT NULL;
2023-08-13 18:51:53.336 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_UserRoles_Name] ON [UserRoles] ([Name]);
2023-08-13 18:51:53.338 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_UserRoles_RoleCode] ON [UserRoles] ([RoleCode]);
2023-08-13 18:51:53.344 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230813130621_Initial', N'7.0.5');
2023-08-13 18:52:42.285 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 18:52:42.448 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 18:52:42.451 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 18:52:43.520 +05:45 [INF] Executed DbCommand (72ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 18:52:43.621 +05:45 [INF] Executed DbCommand (65ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 18:52:43.636 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 18:52:43.638 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 18:52:43.678 +05:45 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 18:52:43.713 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 18:52:50.582 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [UserRoles] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:52:55.050 +05:45 [INF] Executed DbCommand (87ms) [Parameters=[@p0='Assistant' (Nullable = false) (Size = 450), @p1='2', @p2='SeniorAssistant' (Nullable = false) (Size = 450), @p3='3', @p4='Marketing' (Nullable = false) (Size = 450), @p5='1', @p6='Officer' (Nullable = false) (Size = 450), @p7='4', @p8='SuperAdmin' (Nullable = false) (Size = 450), @p9='5'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [UserRoles] USING (
VALUES (@p0, @p1, 0),
(@p2, @p3, 1),
(@p4, @p5, 2),
(@p6, @p7, 3),
(@p8, @p9, 4)) AS i ([Name], [RoleCode], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Name], [RoleCode])
VALUES (i.[Name], i.[RoleCode])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 18:54:22.169 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-13 18:54:22.315 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 18:54:22.317 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-13 18:54:23.373 +05:45 [INF] Executed DbCommand (72ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 18:54:23.468 +05:45 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 18:54:23.517 +05:45 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-13 18:54:23.560 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-13 18:54:23.600 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-13 18:54:23.633 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-13 18:54:27.325 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [UserRoles] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:54:32.024 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:54:32.181 +05:45 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[Id], [u].[Name], [u].[RoleCode]
FROM [UserRoles] AS [u]
WHERE [u].[RoleCode] = 5
2023-08-13 18:54:32.324 +05:45 [INF] Executed DbCommand (46ms) [Parameters=[@__normalizedUserName_0='FINTEX' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RoleId], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-08-13 18:54:32.575 +05:45 [INF] Executed DbCommand (14ms) [Parameters=[@p0='9b135dcd-0c98-484a-b05a-66ef569c3902' (Nullable = false) (Size = 450), @p1='0', @p2='a2136277-be23-4dbc-a93f-e1bae4b655be' (Size = 4000), @p3='AshishAdhikari' (Nullable = false) (Size = 4000), @p4='2023-08-13T18:54:32.0254845+05:45', @p5=NULL (DbType = Double), @p6='iconichostnep@gmail.com' (Size = 256), @p7='False', @p8=NULL (DbType = Int32), @p9='True', @p10=NULL (DbType = Double), @p11='True', @p12=NULL (DbType = DateTimeOffset), @p13=NULL (Size = 4000), @p14=NULL (DbType = DateTime2), @p15='ICONICHOSTNEP@GMAIL.COM' (Size = 256), @p16='FINTEX' (Size = 256), @p17='AQAAAAEAACcQAAAAEKVoFU2HALoP36r1EU2igNs4L1Q7h4gxaZvVCdctJzmqFtV5636Vo5CI5MI5B0XErQ==' (Size = 4000), @p18=NULL (Size = 4000), @p19='False', @p20='5', @p21='6AJR7ROXPDA3TBEJZANZP3QZXRWH2Y2W' (Size = 4000), @p22='False', @p23='Fintex' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [CreatedBy], [CreatedOn], [DepositLimit], [Email], [EmailConfirmed], [EmployeeId], [IsActive], [LoanLimit], [LockoutEnabled], [LockoutEnd], [ModifiedBy], [ModifiedOn], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [RoleId], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23);
2023-08-13 18:55:42.733 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:42.862 +05:45 [INF] Executed DbCommand (58ms) [Parameters=[@p0='1', @p1='Debit' (Nullable = false) (Size = 4000), @p2='2', @p3='Credit' (Nullable = false) (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [DebitOrCredits] ([Id], [Name])
VALUES (@p0, @p1),
(@p2, @p3);
2023-08-13 18:55:42.870 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:42.887 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@p0='1', @p1='ASSETS' (Nullable = false) (Size = 450), @p2='2', @p3='EXPENSE' (Nullable = false) (Size = 450), @p4='3', @p5='INCOME' (Nullable = false) (Size = 450), @p6='4', @p7='LIABILITY' (Nullable = false) (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [AccountTypes] ([Id], [Name])
VALUES (@p0, @p1),
(@p2, @p3),
(@p4, @p5),
(@p6, @p7);
2023-08-13 18:55:42.896 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:42.963 +05:45 [INF] Executed DbCommand (21ms) [Parameters=[@p0='1', @p1='80' (Nullable = false) (Size = 450), @p2='2023-08-13T18:55:42.9028458+05:45', @p3='CASH' (Nullable = false) (Size = 450), @p4=NULL (Size = 4000), @p5=NULL (DbType = Int32), @p6='1', @p7='90' (Nullable = false) (Size = 450), @p8='2023-08-13T18:55:42.9029339+05:45', @p9='BANK' (Nullable = false) (Size = 450), @p10=NULL (Size = 4000), @p11=NULL (DbType = Int32), @p12='1', @p13='100' (Nullable = false) (Size = 450), @p14='2023-08-13T18:55:42.9029343+05:45', @p15='INVESTMENT' (Nullable = false) (Size = 450), @p16=NULL (Size = 4000), @p17=NULL (DbType = Int32), @p18='1', @p19='110' (Nullable = false) (Size = 450), @p20='2023-08-13T18:55:42.9029349+05:45', @p21='LOAN INVESTMENT' (Nullable = false) (Size = 450), @p22=NULL (Size = 4000), @p23=NULL (DbType = Int32), @p24='1', @p25='120' (Nullable = false) (Size = 450), @p26='2023-08-13T18:55:42.9029350+05:45', @p27='RECEIVABLE' (Nullable = false) (Size = 450), @p28=NULL (Size = 4000), @p29=NULL (DbType = Int32), @p30='1', @p31='120.3' (Nullable = false) (Size = 450), @p32='2023-08-13T18:55:42.9029363+05:45', @p33='INTEREST RECEIVABLE' (Nullable = false) (Size = 450), @p34=NULL (Size = 4000), @p35=NULL (DbType = Int32), @p36='1', @p37='130' (Nullable = false) (Size = 450), @p38='2023-08-13T18:55:42.9029364+05:45', @p39='FIXED ASSETS' (Nullable = false) (Size = 450), @p40=NULL (Size = 4000), @p41=NULL (DbType = Int32), @p42='1', @p43='140' (Nullable = false) (Size = 450), @p44='2023-08-13T18:55:42.9029365+05:45', @p45='OTHER ASSETS' (Nullable = false) (Size = 450), @p46=NULL (Size = 4000), @p47=NULL (DbType = Int32), @p48='2', @p49='150' (Nullable = false) (Size = 450), @p50='2023-08-13T18:55:42.9029367+05:45', @p51='EXPENSES' (Nullable = false) (Size = 450), @p52=NULL (Size = 4000), @p53=NULL (DbType = Int32), @p54='3', @p55='160.1' (Nullable = false) (Size = 450), @p56='2023-08-13T18:55:42.9029369+05:45', @p57='GOOD SALES' (Nullable = false) (Size = 450), @p58=NULL (Size = 4000), @p59=NULL (DbType = Int32), @p60='3', @p61='160.2' (Nullable = false) (Size = 450), @p62='2023-08-13T18:55:42.9029371+05:45', @p63='LOAN INTEREST EARNING (INTEREST RECEIVE FROM LOAN)' (Nullable = false) (Size = 450), @p64=NULL (Size = 4000), @p65=NULL (DbType = Int32), @p66='3', @p67='160.3' (Nullable = false) (Size = 450), @p68='2023-08-13T18:55:42.9029372+05:45', @p69='INCOME FROM INVESTMENT' (Nullable = false) (Size = 450), @p70=NULL (Size = 4000), @p71=NULL (DbType = Int32), @p72='3', @p73='160.4' (Nullable = false) (Size = 450), @p74='2023-08-13T18:55:42.9029373+05:45', @p75='OTHER INCOME' (Nullable = false) (Size = 450), @p76=NULL (Size = 4000), @p77=NULL (DbType = Int32), @p78='3', @p79='160.5' (Nullable = false) (Size = 450), @p80='2023-08-13T18:55:42.9029374+05:45', @p81='REBATE FROM PURCHASE' (Nullable = false) (Size = 450), @p82=NULL (Size = 4000), @p83=NULL (DbType = Int32), @p84='3', @p85='160.6' (Nullable = false) (Size = 450), @p86='2023-08-13T18:55:42.9029376+05:45', @p87='LOAN PROCESSING DONATION' (Nullable = false) (Size = 450), @p88=NULL (Size = 4000), @p89=NULL (DbType = Int32), @p90='3', @p91='160.9' (Nullable = false) (Size = 450), @p92='2023-08-13T18:55:42.9029377+05:45', @p93='INSURANCE AND LOAN FOUND' (Nullable = false) (Size = 450), @p94=NULL (Size = 4000), @p95=NULL (DbType = Int32), @p96='4', @p97='10' (Nullable = false) (Size = 450), @p98='2023-08-13T18:55:42.9029379+05:45', @p99='CAPITAL' (Nullable = false) (Size = 450), @p100=NULL (Size = 4000), @p101=NULL (DbType = Int32), @p102='4', @p103='20' (Nullable = false) (Size = 450), @p104='2023-08-13T18:55:42.9029381+05:45', @p105='RESERVER FUNDS' (Nullable = false) (Size = 450), @p106=NULL (Size = 4000), @p107=NULL (DbType = Int32), @p108='4', @p109='30' (Nullable = false) (Size = 450), @p110='2023-08-13T18:55:42.9029382+05:45', @p111='DEPOSIT' (Nullable = false) (Size = 450), @p112=NULL (Size = 4000), @p113=NULL (DbType = Int32), @p114='4', @p115='40' (Nullable = false) (Size = 450), @p116='2023-08-13T18:55:42.9029385+05:45', @p117='LOAN TAKEN' (Nullable = false) (Size = 450), @p118=NULL (Size = 4000), @p119=NULL (DbType = Int32), @p120='4', @p121='50' (Nullable = false) (Size = 450), @p122='2023-08-13T18:55:42.9029387+05:45', @p123='DONATION' (Nullable = false) (Size = 450), @p124=NULL (Size = 4000), @p125=NULL (DbType = Int32), @p126='4', @p127='60' (Nullable = false) (Size = 450), @p128='2023-08-13T18:55:42.9029388+05:45', @p129='PAYABLE' (Nullable = false) (Size = 450), @p130=NULL (Size = 4000), @p131=NULL (DbType = Int32), @p132='4', @p133='70' (Nullable = false) (Size = 450), @p134='2023-08-13T18:55:42.9029390+05:45', @p135='OTHER LIABILITIES' (Nullable = false) (Size = 450), @p136=NULL (Size = 4000), @p137=NULL (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [GroupTypes] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, 0),
(@p6, @p7, @p8, @p9, @p10, @p11, 1),
(@p12, @p13, @p14, @p15, @p16, @p17, 2),
(@p18, @p19, @p20, @p21, @p22, @p23, 3),
(@p24, @p25, @p26, @p27, @p28, @p29, 4),
(@p30, @p31, @p32, @p33, @p34, @p35, 5),
(@p36, @p37, @p38, @p39, @p40, @p41, 6),
(@p42, @p43, @p44, @p45, @p46, @p47, 7),
(@p48, @p49, @p50, @p51, @p52, @p53, 8),
(@p54, @p55, @p56, @p57, @p58, @p59, 9),
(@p60, @p61, @p62, @p63, @p64, @p65, 10),
(@p66, @p67, @p68, @p69, @p70, @p71, 11),
(@p72, @p73, @p74, @p75, @p76, @p77, 12),
(@p78, @p79, @p80, @p81, @p82, @p83, 13),
(@p84, @p85, @p86, @p87, @p88, @p89, 14),
(@p90, @p91, @p92, @p93, @p94, @p95, 15),
(@p96, @p97, @p98, @p99, @p100, @p101, 16),
(@p102, @p103, @p104, @p105, @p106, @p107, 17),
(@p108, @p109, @p110, @p111, @p112, @p113, 18),
(@p114, @p115, @p116, @p117, @p118, @p119, 19),
(@p120, @p121, @p122, @p123, @p124, @p125, 20),
(@p126, @p127, @p128, @p129, @p130, @p131, 21),
(@p132, @p133, @p134, @p135, @p136, @p137, 22)) AS i ([AccountTypeId], [CharKhataNumber], [EntryDate], [Name], [NepaliName], [Schedule], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([AccountTypeId], [CharKhataNumber], [EntryDate], [Name], [NepaliName], [Schedule])
VALUES (i.[AccountTypeId], i.[CharKhataNumber], i.[EntryDate], i.[Name], i.[NepaliName], i.[Schedule])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 18:55:43.009 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.019 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'80'
2023-08-13 18:55:43.029 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'120'
2023-08-13 18:55:43.034 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'130'
2023-08-13 18:55:43.040 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'140'
2023-08-13 18:55:43.049 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'10'
2023-08-13 18:55:43.058 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'30'
2023-08-13 18:55:43.063 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'50'
2023-08-13 18:55:43.072 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'60'
2023-08-13 18:55:43.107 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'70'
2023-08-13 18:55:43.113 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'160.1'
2023-08-13 18:55:43.119 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'160.3'
2023-08-13 18:55:43.125 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'160.4'
2023-08-13 18:55:43.130 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'160.6'
2023-08-13 18:55:43.136 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'150'
2023-08-13 18:55:43.281 +05:45 [INF] Executed DbCommand (74ms) [Parameters=[@p0='0' (Precision = 18) (Scale = 4), @p1=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p2='2023-08-13T18:55:43.1370582+05:45', @p3='1', @p4=NULL (Size = 4000), @p5='False', @p6='True', @p7='1' (Nullable = true), @p8='CASH IN HAND' (Nullable = false) (Size = 450), @p9=NULL (Size = 4000), @p10='0' (Precision = 18) (Scale = 4), @p11=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p12='2023-08-13T18:55:43.1370617+05:45', @p13='1', @p14=NULL (Size = 4000), @p15='False', @p16='True', @p17='2' (Nullable = true), @p18='CASH IN VAULT' (Nullable = false) (Size = 450), @p19=NULL (Size = 4000), @p20='0' (Precision = 18) (Scale = 4), @p21=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p22='2023-08-13T18:55:43.1370620+05:45', @p23='1', @p24=NULL (Size = 4000), @p25='False', @p26='True', @p27='3' (Nullable = true), @p28='CHEQUE IN COLLECTION' (Nullable = false) (Size = 450), @p29=NULL (Size = 4000), @p30='0' (Precision = 18) (Scale = 4), @p31=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p32='2023-08-13T18:55:43.1370623+05:45', @p33='5', @p34=NULL (Size = 4000), @p35='False', @p36='True', @p37='4' (Nullable = true), @p38='ADVANCED 120.2' (Nullable = false) (Size = 450), @p39=NULL (Size = 4000), @p40='0' (Precision = 18) (Scale = 4), @p41=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p42='2023-08-13T18:55:43.1370625+05:45', @p43='5', @p44=NULL (Size = 4000), @p45='False', @p46='True', @p47='5' (Nullable = true), @p48='BRANCH ABBS RECEIVABLE' (Nullable = false) (Size = 450), @p49=NULL (Size = 4000), @p50='0' (Precision = 18) (Scale = 4), @p51=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p52='2023-08-13T18:55:43.1370633+05:45', @p53='7', @p54=NULL (Size = 4000), @p55='False', @p56='True', @p57='6' (Nullable = true), @p58='FURNITURE' (Nullable = false) (Size = 450), @p59=NULL (Size = 4000), @p60='0' (Precision = 18) (Scale = 4), @p61=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p62='2023-08-13T18:55:43.1370635+05:45', @p63='7', @p64=NULL (Size = 4000), @p65='False', @p66='True', @p67='7' (Nullable = true), @p68='LAND OR BUILDING' (Nullable = false) (Size = 450), @p69=NULL (Size = 4000), @p70='0' (Precision = 18) (Scale = 4), @p71=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p72='2023-08-13T18:55:43.1370637+05:45', @p73='7', @p74=NULL (Size = 4000), @p75='False', @p76='True', @p77='8' (Nullable = true), @p78='ICONIC DEVELOPER' (Nullable = false) (Size = 450), @p79=NULL (Size = 4000), @p80='0' (Precision = 18) (Scale = 4), @p81=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p82='2023-08-13T18:55:43.1370639+05:45', @p83='7', @p84=NULL (Size = 4000), @p85='False', @p86='True', @p87='9' (Nullable = true), @p88='MOTORCYCLE' (Nullable = false) (Size = 450), @p89=NULL (Size = 4000), @p90='0' (Precision = 18) (Scale = 4), @p91=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p92='2023-08-13T18:55:43.1370645+05:45', @p93='7', @p94=NULL (Size = 4000), @p95='False', @p96='True', @p97='10' (Nullable = true), @p98='OFFICE EQUIPMENT' (Nullable = false) (Size = 450), @p99=NULL (Size = 4000), @p100='0' (Precision = 18) (Scale = 4), @p101=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p102='2023-08-13T18:55:43.1370650+05:45', @p103='7', @p104=NULL (Size = 4000), @p105='False', @p106='True', @p107='11' (Nullable = true), @p108='VEHICLE' (Nullable = false) (Size = 450), @p109=NULL (Size = 4000), @p110='0' (Precision = 18) (Scale = 4), @p111=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p112='2023-08-13T18:55:43.1370652+05:45', @p113='8', @p114=NULL (Size = 4000), @p115='False', @p116='True', @p117='12' (Nullable = true), @p118='LAST YEAR LOSS' (Nullable = false) (Size = 450), @p119=NULL (Size = 4000), @p120='0' (Precision = 18) (Scale = 4), @p121=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p122='2023-08-13T18:55:43.1370657+05:45', @p123='8', @p124=NULL (Size = 4000), @p125='False', @p126='True', @p127='13' (Nullable = true), @p128='OTHER ASSETS' (Nullable = false) (Size = 450), @p129=NULL (Size = 4000), @p130='0' (Precision = 18) (Scale = 4), @p131=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p132='2023-08-13T18:55:43.1370660+05:45', @p133='8', @p134=NULL (Size = 4000), @p135='False', @p136='True', @p137='14' (Nullable = true), @p138='DEPOSIT DR INTEREST RECEIVABLE A/C' (Nullable = false) (Size = 450), @p139=NULL (Size = 4000), @p140='0' (Precision = 18) (Scale = 4), @p141=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p142='2023-08-13T18:55:43.1370749+05:45', @p143='8', @p144=NULL (Size = 4000), @p145='False', @p146='True', @p147='15' (Nullable = true), @p148='LOAN INTEREST ACCRUE RI (REGULAR INTEREST)' (Nullable = false) (Size = 450), @p149=NULL (Size = 4000), @p150='0' (Precision = 18) (Scale = 4), @p151=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p152='2023-08-13T18:55:43.1370753+05:45', @p153='17', @p154=NULL (Size = 4000), @p155='False', @p156='True', @p157='16' (Nullable = true), @p158='ORDINARY SHARE CAPITAL' (Nullable = false) (Size = 450), @p159=NULL (Size = 4000), @p160='0' (Precision = 18) (Scale = 4), @p161=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p162='2023-08-13T18:55:43.1370757+05:45', @p163='17', @p164=NULL (Size = 4000), @p165='False', @p166='True', @p167='17' (Nullable = true), @p168='PROMOTER SHARE CAPITAL' (Nullable = false) (Size = 450), @p169=NULL (Size = 4000), @p170='0' (Precision = 18) (Scale = 4), @p171=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p172='2023-08-13T18:55:43.1370763+05:45', @p173='19', @p174=NULL (Size = 4000), @p175='False', @p176='True', @p177='18' (Nullable = true), @p178='CURRENT SAVING-30.1' (Nullable = false) (Size = 450), @p179=NULL (Size = 4000), @p180='0' (Precision = 18) (Scale = 4), @p181=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p182='2023-08-13T18:55:43.1370767+05:45', @p183='19', @p184=NULL (Size = 4000), @p185='False', @p186='True', @p187='19' (Nullable = true), @p188='SAVING DEPOSIT-30.2' (Nullable = false) (Size = 450), @p189=NULL (Size = 4000), @p190='0' (Precision = 18) (Scale = 4), @p191=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p192='2023-08-13T18:55:43.1370770+05:45', @p193='19', @p194=NULL (Size = 4000), @p195='False', @p196='True', @p197='20' (Nullable = true), @p198='FIXED DEPOSIT-30.3' (Nullable = false) (Size = 450), @p199=NULL (Size = 4000), @p200='0' (Precision = 18) (Scale = 4), @p201=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p202='2023-08-13T18:55:43.1370773+05:45', @p203='19', @p204=NULL (Size = 4000), @p205='False', @p206='True', @p207='21' (Nullable = true), @p208='RECURRING DEPOSIT' (Nullable = false) (Size = 450), @p209=NULL (Size = 4000), @p210='0' (Precision = 18) (Scale = 4), @p211=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p212='2023-08-13T18:55:43.1370777+05:45', @p213='21', @p214=NULL (Size = 4000), @p215='False', @p216='True', @p217='22' (Nullable = true), @p218='DONATION FROM MINISTRY OF SAHAKARI' (Nullable = false) (Size = 450), @p219=NULL (Size = 4000), @p220='0' (Precision = 18) (Scale = 4), @p221=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p222='2023-08-13T18:55:43.1370781+05:45', @p223='21', @p224=NULL (Size = 4000), @p225='False', @p226='True', @p227='23' (Nullable = true), @p228='DONATION RECEIVED' (Nullable = false) (Size = 450), @p229=NULL (Size = 4000), @p230='0' (Precision = 18) (Scale = 4), @p231=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p232='2023-08-13T18:55:43.1370784+05:45', @p233='22', @p234=NULL (Size = 4000), @p235='False', @p236='True', @p237='24' (Nullable = true), @p238='BRANCH ABBS PAYABLE' (Nullable = false) (Size = 450), @p239=NULL (Size = 4000), @p240='0' (Precision = 18) (Scale = 4), @p241=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p242='2023-08-13T18:55:43.1370787+05:45', @p243='22', @p244=NULL (Size = 4000), @p245='False', @p246='True', @p247='25' (Nullable = true), @p248='ADIT TAX' (Nullable = false) (Size = 450), @p249=NULL (Size = 4000), @p250='0' (Precision = 18) (Scale = 4), @p251=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p252='2023-08-13T18:55:43.1370791+05:45', @p253='22', @p254=NULL (Size = 4000), @p255='False', @p256='True', @p257='26' (Nullable = true), @p258='DIVIDEND PAYABLE' (Nullable = false) (Size = 450), @p259=NULL (Size = 4000), @p260='0' (Precision = 18) (Scale = 4), @p261=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p262='2023-08-13T18:55:43.1370794+05:45', @p263='22', @p264=NULL (Size = 4000), @p265='False', @p266='True', @p267='27' (Nullable = true), @p268='SUNDRY CREDITORS' (Nullable = false) (Size = 450), @p269=NULL (Size = 4000), @p270='0' (Precision = 18) (Scale = 4), @p271=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p272='2023-08-13T18:55:43.1370797+05:45', @p273='22', @p274=NULL (Size = 4000), @p275='False', @p276='True', @p277='28' (Nullable = true), @p278='SUNDRY PAYABLE' (Nullable = false) (Size = 450), @p279=NULL (Size = 4000), @p280='0' (Precision = 18) (Scale = 4), @p281=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p282='2023-08-13T18:55:43.1370801+05:45', @p283='22', @p284=NULL (Size = 4000), @p285='False', @p286='True', @p287='29' (Nullable = true), @p288='TAX PAYABLE' (Nullable = false) (Size = 450), @p289=NULL (Size = 4000), @p290='0' (Precision = 18) (Scale = 4), @p291=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p292='2023-08-13T18:55:43.1370804+05:45', @p293='23', @p294=NULL (Size = 4000), @p295='False', @p296='True', @p297='30' (Nullable = true), @p298='AUDIT FEE PAYABLE' (Nullable = false) (Size = 450), @p299=NULL (Size = 4000), @p300='0' (Precision = 18) (Scale = 4), @p301=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p302='2023-08-13T18:55:43.1370808+05:45', @p303='23', @p304=NULL (Size = 4000), @p305='False', @p306='True', @p307='31' (Nullable = true), @p308='HOUSE RENT PAYABLE' (Nullable = false) (Size = 450), @p309=NULL (Size = 4000), @p310='0' (Precision = 18) (Scale = 4), @p311=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p312='2023-08-13T18:55:43.1370811+05:45', @p313='23', @p314=NULL (Size = 4000), @p315='False', @p316='True', @p317='32' (Nullable = true), @p318='INTEREST PAYABLE A/C' (Nullable = false) (Size = 450), @p319=NULL (Size = 4000), @p320='0' (Precision = 18) (Scale = 4), @p321=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p322='2023-08-13T18:55:43.1370815+05:45', @p323='23', @p324=NULL (Size = 4000), @p325='False', @p326='True', @p327='33' (Nullable = true), @p328='OTHER PAYABLE' (Nullable = false) (Size = 450), @p329=NULL (Size = 4000), @p330='0' (Precision = 18) (Scale = 4), @p331=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p332='2023-08-13T18:55:43.1370820+05:45', @p333='23', @p334=NULL (Size = 4000), @p335='False', @p336='True', @p337='34' (Nullable = true), @p338='PROFIT & LOSS ACCOUNT' (Nullable = false) (Size = 450), @p339=NULL (Size = 4000), @p340='0' (Precision = 18) (Scale = 4), @p341=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p342='2023-08-13T18:55:43.1370824+05:45', @p343='23', @p344=NULL (Size = 4000), @p345='False', @p346='True', @p347='35' (Nullable = true), @p348='RIN JOKHIM KOSH' (Nullable = false) (Size = 450), @p349=NULL (Size = 4000), @p350='0' (Precision = 18) (Scale = 4), @p351=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p352='2023-08-13T18:55:43.1370827+05:45', @p353='23', @p354=NULL (Size = 4000), @p355='False', @p356='True', @p357='36' (Nullable = true), @p358='STAFF SALARY PAYABLE' (Nullable = false) (Size = 450), @p359=NULL (Size = 4000), @p360='0' (Precision = 18) (Scale = 4), @p361=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p362='2023-08-13T18:55:43.1370830+05:45', @p363='23', @p364=NULL (Size = 4000), @p365='False', @p366='True', @p367='37' (Nullable = true), @p368='CLEARING A/C' (Nullable = false) (Size = 450), @p369=NULL (Size = 4000), @p370='0' (Precision = 18) (Scale = 4), @p371=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p372='2023-08-13T18:55:43.1370834+05:45', @p373='23', @p374=NULL (Size = 4000), @p375='False', @p376='True', @p377='38' (Nullable = true), @p378='DEPOSIT ADJUSTMENT A/C' (Nullable = false) (Size = 450), @p379=NULL (Size = 4000), @p380='0' (Precision = 18) (Scale = 4), @p381=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p382='2023-08-13T18:55:43.1370837+05:45', @p383='23', @p384=NULL (Size = 4000), @p385='False', @p386='True', @p387='39' (Nullable = true), @p388='DEPOSIT DR INTEREST SUSPENSE' (Nullable = false) (Size = 450), @p389=NULL (Size = 4000), @p390='0' (Precision = 18) (Scale = 4), @p391=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p392='2023-08-13T18:55:43.1370840+05:45', @p393='23', @p394=NULL (Size = 4000), @p395='False', @p396='True', @p397='40' (Nullable = true), @p398='LOAN ADVANCE INTEREST' (Nullable = false) (Size = 450), @p399=NULL (Size = 4000), @p400='0' (Precision = 18) (Scale = 4), @p401=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p402='2023-08-13T18:55:43.1370844+05:45', @p403='10', @p404=NULL (Size = 4000), @p405='False', @p406='True', @p407='41' (Nullable = true), @p408='GOODS SALES-160.01' (Nullable = false) (Size = 450), @p409=NULL (Size = 4000), @p410='0' (Precision = 18) (Scale = 4), @p411=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p412='2023-08-13T18:55:43.1370847+05:45', @p413='12', @p414=NULL (Size = 4000), @p415='False', @p416='True', @p417='42' (Nullable = true), @p418='INTEREST INCOME BANK' (Nullable = false) (Size = 450), @p419=NULL (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Ledgers] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, 0),
(@p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, 1),
(@p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, 2),
(@p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, 3),
(@p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, 4),
(@p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, 5),
(@p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, 6),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, 7),
(@p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, 8),
(@p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, 9),
(@p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, 10),
(@p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, 11),
(@p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, 12),
(@p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, 13),
(@p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, 14),
(@p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, 15),
(@p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, 16),
(@p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, 17),
(@p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, 18),
(@p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, @p199, 19),
(@p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, 20),
(@p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 21),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, 22),
(@p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, 23),
(@p240, @p241, @p242, @p243, @p244, @p245, @p246, @p247, @p248, @p249, 24),
(@p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, 25),
(@p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, 26),
(@p270, @p271, @p272, @p273, @p274, @p275, @p276, @p277, @p278, @p279, 27),
(@p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, 28),
(@p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, 29),
(@p300, @p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, 30),
(@p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, 31),
(@p320, @p321, @p322, @p323, @p324, @p325, @p326, @p327, @p328, @p329, 32),
(@p330, @p331, @p332, @p333, @p334, @p335, @p336, @p337, @p338, @p339, 33),
(@p340, @p341, @p342, @p343, @p344, @p345, @p346, @p347, @p348, @p349, 34),
(@p350, @p351, @p352, @p353, @p354, @p355, @p356, @p357, @p358, @p359, 35),
(@p360, @p361, @p362, @p363, @p364, @p365, @p366, @p367, @p368, @p369, 36),
(@p370, @p371, @p372, @p373, @p374, @p375, @p376, @p377, @p378, @p379, 37),
(@p380, @p381, @p382, @p383, @p384, @p385, @p386, @p387, @p388, @p389, 38),
(@p390, @p391, @p392, @p393, @p394, @p395, @p396, @p397, @p398, @p399, 39),
(@p400, @p401, @p402, @p403, @p404, @p405, @p406, @p407, @p408, @p409, 40),
(@p410, @p411, @p412, @p413, @p414, @p415, @p416, @p417, @p418, @p419, 41)) AS i ([CurrentBalance], [DepreciationRate], [EntryDate], [GroupTypeId], [HisabNumber], [IsBank], [IsSubLedgerActive], [LedgerCode], [Name], [NepaliName], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CurrentBalance], [DepreciationRate], [EntryDate], [GroupTypeId], [HisabNumber], [IsBank], [IsSubLedgerActive], [LedgerCode], [Name], [NepaliName])
VALUES (i.[CurrentBalance], i.[DepreciationRate], i.[EntryDate], i.[GroupTypeId], i.[HisabNumber], i.[IsBank], i.[IsSubLedgerActive], i.[LedgerCode], i.[Name], i.[NepaliName])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 18:55:43.311 +05:45 [INF] Executed DbCommand (25ms) [Parameters=[@p0='0' (Precision = 18) (Scale = 4), @p1=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p2='2023-08-13T18:55:43.1370850+05:45', @p3='13', @p4=NULL (Size = 4000), @p5='False', @p6='True', @p7='43' (Nullable = true), @p8='ACCOUNT CLOSING CHARGE' (Nullable = false) (Size = 450), @p9=NULL (Size = 4000), @p10='0' (Precision = 18) (Scale = 4), @p11=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p12='2023-08-13T18:55:43.1370854+05:45', @p13='13', @p14=NULL (Size = 4000), @p15='False', @p16='True', @p17='44' (Nullable = true), @p18='CHEQUE BOOK INCOME' (Nullable = false) (Size = 450), @p19=NULL (Size = 4000), @p20='0' (Precision = 18) (Scale = 4), @p21=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p22='2023-08-13T18:55:43.1370857+05:45', @p23='13', @p24=NULL (Size = 4000), @p25='False', @p26='True', @p27='45' (Nullable = true), @p28='COMMISION FROM REMITTANCE' (Nullable = false) (Size = 450), @p29=NULL (Size = 4000), @p30='0' (Precision = 18) (Scale = 4), @p31=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p32='2023-08-13T18:55:43.1370860+05:45', @p33='13', @p34=NULL (Size = 4000), @p35='False', @p36='True', @p37='46' (Nullable = true), @p38='DRAFT COMMISSION INCOME' (Nullable = false) (Size = 450), @p39=NULL (Size = 4000), @p40='0' (Precision = 18) (Scale = 4), @p41=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p42='2023-08-13T18:55:43.1370863+05:45', @p43='13', @p44=NULL (Size = 4000), @p45='False', @p46='True', @p47='47' (Nullable = true), @p48='ENTRY FEE' (Nullable = false) (Size = 450), @p49=NULL (Size = 4000), @p50='0' (Precision = 18) (Scale = 4), @p51=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p52='2023-08-13T18:55:43.1370867+05:45', @p53='13', @p54=NULL (Size = 4000), @p55='False', @p56='True', @p57='48' (Nullable = true), @p58='EXCESS WDR CHARGE' (Nullable = false) (Size = 450), @p59=NULL (Size = 4000), @p60='0' (Precision = 18) (Scale = 4), @p61=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p62='2023-08-13T18:55:43.1370871+05:45', @p63='13', @p64=NULL (Size = 4000), @p65='False', @p66='True', @p67='49' (Nullable = true), @p68='FINE & PENALTY' (Nullable = false) (Size = 450), @p69=NULL (Size = 4000), @p70='0' (Precision = 18) (Scale = 4), @p71=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p72='2023-08-13T18:55:43.1370874+05:45', @p73='13', @p74=NULL (Size = 4000), @p75='False', @p76='True', @p77='50' (Nullable = true), @p78='FORM FEE' (Nullable = false) (Size = 450), @p79=NULL (Size = 4000), @p80='0' (Precision = 18) (Scale = 4), @p81=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p82='2023-08-13T18:55:43.1370878+05:45', @p83='13', @p84=NULL (Size = 4000), @p85='False', @p86='True', @p87='51' (Nullable = true), @p88='INTEREST REIMBURSE A/C' (Nullable = false) (Size = 450), @p89=NULL (Size = 4000), @p90='0' (Precision = 18) (Scale = 4), @p91=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p92='2023-08-13T18:55:43.1370881+05:45', @p93='13', @p94=NULL (Size = 4000), @p95='False', @p96='True', @p97='52' (Nullable = true), @p98='LOAN SERVICE CHARGE' (Nullable = false) (Size = 450), @p99=NULL (Size = 4000), @p100='0' (Precision = 18) (Scale = 4), @p101=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p102='2023-08-13T18:55:43.1370884+05:45', @p103='13', @p104=NULL (Size = 4000), @p105='False', @p106='True', @p107='53' (Nullable = true), @p108='MEMBERSHIP FEE' (Nullable = false) (Size = 450), @p109=NULL (Size = 4000), @p110='0' (Precision = 18) (Scale = 4), @p111=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p112='2023-08-13T18:55:43.1370888+05:45', @p113='13', @p114=NULL (Size = 4000), @p115='False', @p116='True', @p117='54' (Nullable = true), @p118='MISCELLANEOUS INCOME' (Nullable = false) (Size = 450), @p119=NULL (Size = 4000), @p120='0' (Precision = 18) (Scale = 4), @p121=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p122='2023-08-13T18:55:43.1370891+05:45', @p123='13', @p124=NULL (Size = 4000), @p125='False', @p126='True', @p127='55' (Nullable = true), @p128='PASSBOOK INCOME' (Nullable = false) (Size = 450), @p129=NULL (Size = 4000), @p130='0' (Precision = 18) (Scale = 4), @p131=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p132='2023-08-13T18:55:43.1370894+05:45', @p133='13', @p134=NULL (Size = 4000), @p135='False', @p136='True', @p137='56' (Nullable = true), @p138='REGD. FEE INCOME-160.4' (Nullable = false) (Size = 450), @p139=NULL (Size = 4000), @p140='0' (Precision = 18) (Scale = 4), @p141=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p142='2023-08-13T18:55:43.1370898+05:45', @p143='13', @p144=NULL (Size = 4000), @p145='False', @p146='True', @p147='57' (Nullable = true), @p148='SERVICE CHARGE' (Nullable = false) (Size = 450), @p149=NULL (Size = 4000), @p150='0' (Precision = 18) (Scale = 4), @p151=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p152='2023-08-13T18:55:43.1370901+05:45', @p153='13', @p154=NULL (Size = 4000), @p155='False', @p156='True', @p157='58' (Nullable = true), @p158='TALIM INCOME' (Nullable = false) (Size = 450), @p159=NULL (Size = 4000), @p160='0' (Precision = 18) (Scale = 4), @p161=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p162='2023-08-13T18:55:43.1370904+05:45', @p163='15', @p164=NULL (Size = 4000), @p165='False', @p166='True', @p167='59' (Nullable = true), @p168='LOAN PROCESSING DONATION INCOME-160.6' (Nullable = false) (Size = 450), @p169=NULL (Size = 4000), @p170='0' (Precision = 18) (Scale = 4), @p171=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p172='2023-08-13T18:55:43.1370908+05:45', @p173='15', @p174=NULL (Size = 4000), @p175='False', @p176='True', @p177='60' (Nullable = true), @p178='DEPOSIT DR INTEREST INCOME' (Nullable = false) (Size = 450), @p179=NULL (Size = 4000), @p180='0' (Precision = 18) (Scale = 4), @p181=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p182='2023-08-13T18:55:43.1370953+05:45', @p183='15', @p184=NULL (Size = 4000), @p185='False', @p186='True', @p187='61' (Nullable = true), @p188='MIN BAL WDR CHARGE' (Nullable = false) (Size = 450), @p189=NULL (Size = 4000), @p190='0' (Precision = 18) (Scale = 4), @p191=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p192='2023-08-13T18:55:43.1370957+05:45', @p193='9', @p194=NULL (Size = 4000), @p195='False', @p196='True', @p197='62' (Nullable = true), @p198='GOODS PURCHASE 150.01' (Nullable = false) (Size = 450), @p199=NULL (Size = 4000), @p200='0' (Precision = 18) (Scale = 4), @p201=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p202='2023-08-13T18:55:43.1370961+05:45', @p203='9', @p204=NULL (Size = 4000), @p205='False', @p206='True', @p207='63' (Nullable = true), @p208='DHUWANI JYALA KHARCHA' (Nullable = false) (Size = 450), @p209=NULL (Size = 4000), @p210='0' (Precision = 18) (Scale = 4), @p211=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p212='2023-08-13T18:55:43.1370964+05:45', @p213='9', @p214=NULL (Size = 4000), @p215='False', @p216='True', @p217='64' (Nullable = true), @p218='SALARY STAFF-150.1' (Nullable = false) (Size = 450), @p219=NULL (Size = 4000), @p220='0' (Precision = 18) (Scale = 4), @p221=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p222='2023-08-13T18:55:43.1370967+05:45', @p223='9', @p224=NULL (Size = 4000), @p225='False', @p226='True', @p227='65' (Nullable = true), @p228='RENT EXP' (Nullable = false) (Size = 450), @p229=NULL (Size = 4000), @p230='0' (Precision = 18) (Scale = 4), @p231=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p232='2023-08-13T18:55:43.1370974+05:45', @p233='9', @p234=NULL (Size = 4000), @p235='False', @p236='True', @p237='66' (Nullable = true), @p238='STATIONARY EXPENSE' (Nullable = false) (Size = 450), @p239=NULL (Size = 4000), @p240='0' (Precision = 18) (Scale = 4), @p241=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p242='2023-08-13T18:55:43.1370977+05:45', @p243='9', @p244=NULL (Size = 4000), @p245='False', @p246='True', @p247='67' (Nullable = true), @p248='REPAIR EXPENSE' (Nullable = false) (Size = 450), @p249=NULL (Size = 4000), @p250='0' (Precision = 18) (Scale = 4), @p251=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p252='2023-08-13T18:55:43.1370981+05:45', @p253='9', @p254=NULL (Size = 4000), @p255='False', @p256='True', @p257='68' (Nullable = true), @p258='INTEREST EXPENSE' (Nullable = false) (Size = 450), @p259=NULL (Size = 4000), @p260='0' (Precision = 18) (Scale = 4), @p261=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p262='2023-08-13T18:55:43.1370984+05:45', @p263='9', @p264=NULL (Size = 4000), @p265='False', @p266='True', @p267='69' (Nullable = true), @p268='MISCELLANEOUS EXPENSE-150.1' (Nullable = false) (Size = 450), @p269=NULL (Size = 4000), @p270='0' (Precision = 18) (Scale = 4), @p271=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p272='2023-08-13T18:55:43.1370988+05:45', @p273='9', @p274=NULL (Size = 4000), @p275='False', @p276='True', @p277='70' (Nullable = true), @p278='DEPRECIATION EXPENSE' (Nullable = false) (Size = 450), @p279=NULL (Size = 4000), @p280='0' (Precision = 18) (Scale = 4), @p281=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p282='2023-08-13T18:55:43.1370991+05:45', @p283='9', @p284=NULL (Size = 4000), @p285='False', @p286='True', @p287='71' (Nullable = true), @p288='FUEL EXPENSE' (Nullable = false) (Size = 450), @p289=NULL (Size = 4000), @p290='0' (Precision = 18) (Scale = 4), @p291=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p292='2023-08-13T18:55:43.1370995+05:45', @p293='9', @p294=NULL (Size = 4000), @p295='False', @p296='True', @p297='72' (Nullable = true), @p298='BOARD MEETING EXP' (Nullable = false) (Size = 450), @p299=NULL (Size = 4000), @p300='0' (Precision = 18) (Scale = 4), @p301=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p302='2023-08-13T18:55:43.1370998+05:45', @p303='9', @p304=NULL (Size = 4000), @p305='False', @p306='True', @p307='73' (Nullable = true), @p308='PENALTY EXP' (Nullable = false) (Size = 450), @p309=NULL (Size = 4000), @p310='0' (Precision = 18) (Scale = 4), @p311=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p312='2023-08-13T18:55:43.1371001+05:45', @p313='9', @p314=NULL (Size = 4000), @p315='False', @p316='True', @p317='74' (Nullable = true), @p318='REBATE EXPENSE' (Nullable = false) (Size = 450), @p319=NULL (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Ledgers] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, 0),
(@p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, 1),
(@p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, 2),
(@p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, 3),
(@p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, 4),
(@p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, 5),
(@p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, 6),
(@p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, 7),
(@p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, 8),
(@p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, 9),
(@p100, @p101, @p102, @p103, @p104, @p105, @p106, @p107, @p108, @p109, 10),
(@p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, 11),
(@p120, @p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, 12),
(@p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137, @p138, @p139, 13),
(@p140, @p141, @p142, @p143, @p144, @p145, @p146, @p147, @p148, @p149, 14),
(@p150, @p151, @p152, @p153, @p154, @p155, @p156, @p157, @p158, @p159, 15),
(@p160, @p161, @p162, @p163, @p164, @p165, @p166, @p167, @p168, @p169, 16),
(@p170, @p171, @p172, @p173, @p174, @p175, @p176, @p177, @p178, @p179, 17),
(@p180, @p181, @p182, @p183, @p184, @p185, @p186, @p187, @p188, @p189, 18),
(@p190, @p191, @p192, @p193, @p194, @p195, @p196, @p197, @p198, @p199, 19),
(@p200, @p201, @p202, @p203, @p204, @p205, @p206, @p207, @p208, @p209, 20),
(@p210, @p211, @p212, @p213, @p214, @p215, @p216, @p217, @p218, @p219, 21),
(@p220, @p221, @p222, @p223, @p224, @p225, @p226, @p227, @p228, @p229, 22),
(@p230, @p231, @p232, @p233, @p234, @p235, @p236, @p237, @p238, @p239, 23),
(@p240, @p241, @p242, @p243, @p244, @p245, @p246, @p247, @p248, @p249, 24),
(@p250, @p251, @p252, @p253, @p254, @p255, @p256, @p257, @p258, @p259, 25),
(@p260, @p261, @p262, @p263, @p264, @p265, @p266, @p267, @p268, @p269, 26),
(@p270, @p271, @p272, @p273, @p274, @p275, @p276, @p277, @p278, @p279, 27),
(@p280, @p281, @p282, @p283, @p284, @p285, @p286, @p287, @p288, @p289, 28),
(@p290, @p291, @p292, @p293, @p294, @p295, @p296, @p297, @p298, @p299, 29),
(@p300, @p301, @p302, @p303, @p304, @p305, @p306, @p307, @p308, @p309, 30),
(@p310, @p311, @p312, @p313, @p314, @p315, @p316, @p317, @p318, @p319, 31)) AS i ([CurrentBalance], [DepreciationRate], [EntryDate], [GroupTypeId], [HisabNumber], [IsBank], [IsSubLedgerActive], [LedgerCode], [Name], [NepaliName], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CurrentBalance], [DepreciationRate], [EntryDate], [GroupTypeId], [HisabNumber], [IsBank], [IsSubLedgerActive], [LedgerCode], [Name], [NepaliName])
VALUES (i.[CurrentBalance], i.[DepreciationRate], i.[EntryDate], i.[GroupTypeId], i.[HisabNumber], i.[IsBank], i.[IsSubLedgerActive], i.[LedgerCode], i.[Name], i.[NepaliName])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 18:55:43.347 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.370 +05:45 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 4
2023-08-13 18:55:43.382 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 29
2023-08-13 18:55:43.391 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 62
2023-08-13 18:55:43.401 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 63
2023-08-13 18:55:43.409 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 64
2023-08-13 18:55:43.416 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 65
2023-08-13 18:55:43.425 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 66
2023-08-13 18:55:43.433 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 67
2023-08-13 18:55:43.441 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 69
2023-08-13 18:55:43.448 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 70
2023-08-13 18:55:43.455 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 71
2023-08-13 18:55:43.463 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 74
2023-08-13 18:55:43.514 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[@p0='0' (Precision = 18) (Scale = 4), @p1=NULL (Size = 4000), @p2='4', @p3='ADVANCED INCOME TAX' (Nullable = false) (Size = 450), @p4='1' (Nullable = true), @p5='0' (Precision = 18) (Scale = 4), @p6=NULL (Size = 4000), @p7='4', @p8='ADVANCED RENT' (Nullable = false) (Size = 450), @p9='2' (Nullable = true), @p10='0' (Precision = 18) (Scale = 4), @p11=NULL (Size = 4000), @p12='4', @p13='ADVANCED TAX' (Nullable = false) (Size = 450), @p14='3' (Nullable = true), @p15='0' (Precision = 18) (Scale = 4), @p16=NULL (Size = 4000), @p17='4', @p18='OTHER RECEIVABLE' (Nullable = false) (Size = 450), @p19='4' (Nullable = true), @p20='0' (Precision = 18) (Scale = 4), @p21=NULL (Size = 4000), @p22='4', @p23='STAFF ADVANCED' (Nullable = false) (Size = 450), @p24='5' (Nullable = true), @p25='0' (Precision = 18) (Scale = 4), @p26=NULL (Size = 4000), @p27='4', @p28='SUNDRY TERS' (Nullable = false) (Size = 450), @p29='6' (Nullable = true), @p30='0' (Precision = 18) (Scale = 4), @p31=NULL (Size = 4000), @p32='4', @p33='TELEPHONE DEPOSIT' (Nullable = false) (Size = 450), @p34='7' (Nullable = true), @p35='0' (Precision = 18) (Scale = 4), @p36=NULL (Size = 4000), @p37='4', @p38='ROOM RENT ADVANCED' (Nullable = false) (Size = 450), @p39='8' (Nullable = true), @p40='0' (Precision = 18) (Scale = 4), @p41=NULL (Size = 4000), @p42='29', @p43='DEPOSIT INTEREST TAX PAYABLE' (Nullable = false) (Size = 450), @p44='9' (Nullable = true), @p45='0' (Precision = 18) (Scale = 4), @p46=NULL (Size = 4000), @p47='29', @p48='DIVIDEND TAX PAYABLE' (Nullable = false) (Size = 450), @p49='10' (Nullable = true), @p50='0' (Precision = 18) (Scale = 4), @p51=NULL (Size = 4000), @p52='29', @p53='HOUSE RENT TAX PAYABLE' (Nullable = false) (Size = 450), @p54='11' (Nullable = true), @p55='0' (Precision = 18) (Scale = 4), @p56=NULL (Size = 4000), @p57='29', @p58='INCOME TAX PAYABLE' (Nullable = false) (Size = 450), @p59='12' (Nullable = true), @p60='0' (Precision = 18) (Scale = 4), @p61=NULL (Size = 4000), @p62='29', @p63='STAFF SALARY TAX PAYABLE' (Nullable = false) (Size = 450), @p64='13' (Nullable = true), @p65='0' (Precision = 18) (Scale = 4), @p66=NULL (Size = 4000), @p67='62', @p68='SAMAN KHARID 150.1' (Nullable = false) (Size = 450), @p69='14' (Nullable = true), @p70='0' (Precision = 18) (Scale = 4), @p71=NULL (Size = 4000), @p72='63', @p73='WAGES FAIR EXPENSES 150.2' (Nullable = false) (Size = 450), @p74='15' (Nullable = true), @p75='0' (Precision = 18) (Scale = 4), @p76=NULL (Size = 4000), @p77='64', @p78='OVER DUTY (STAFF) 150.3' (Nullable = false) (Size = 450), @p79='16' (Nullable = true), @p80='0' (Precision = 18) (Scale = 4), @p81=NULL (Size = 4000), @p82='64', @p83='SALARY (STAFF) 150.3' (Nullable = false) (Size = 450), @p84='17' (Nullable = true), @p85='0' (Precision = 18) (Scale = 4), @p86=NULL (Size = 4000), @p87='64', @p88='SANCHAY KOSH 150.03' (Nullable = false) (Size = 450), @p89='18' (Nullable = true), @p90='0' (Precision = 18) (Scale = 4), @p91=NULL (Size = 4000), @p92='64', @p93='STAFF ALLOWANCE PAYMENT 150.3' (Nullable = false) (Size = 450), @p94='19' (Nullable = true), @p95='0' (Precision = 18) (Scale = 4), @p96=NULL (Size = 4000), @p97='64', @p98='TRANSPORT & DAILY ALLOWANCE 150.3' (Nullable = false) (Size = 450), @p99='20' (Nullable = true), @p100='0' (Precision = 18) (Scale = 4), @p101=NULL (Size = 4000), @p102='65', @p103='BONUS EXPENSE 150.4' (Nullable = false) (Size = 450), @p104='21' (Nullable = true), @p105='0' (Precision = 18) (Scale = 4), @p106=NULL (Size = 4000), @p107='65', @p108='MEETING EXPENSE 150.4' (Nullable = false) (Size = 450), @p109='22' (Nullable = true), @p110='0' (Precision = 18) (Scale = 4), @p111=NULL (Size = 4000), @p112='65', @p113='ROOM RENT EXPENSE 150.4' (Nullable = false) (Size = 450), @p114='23' (Nullable = true), @p115='0' (Precision = 18) (Scale = 4), @p116=NULL (Size = 4000), @p117='66', @p118='PHOTOCOPY EXPENSE 150.5' (Nullable = false) (Size = 450), @p119='24' (Nullable = true), @p120='0' (Precision = 18) (Scale = 4), @p121=NULL (Size = 4000), @p122='66', @p123='PRINTING AND STATIONARY' (Nullable = false) (Size = 450), @p124='25' (Nullable = true), @p125='0' (Precision = 18) (Scale = 4), @p126=NULL (Size = 4000), @p127='66', @p128='STATIONARY EXPENSE 150.5' (Nullable = false) (Size = 450), @p129='26' (Nullable = true), @p130='0' (Precision = 18) (Scale = 4), @p131=NULL (Size = 4000), @p132='67', @p133='COMPUTER REPAIR 150.06' (Nullable = false) (Size = 450), @p134='27' (Nullable = true), @p135='0' (Precision = 18) (Scale = 4), @p136=NULL (Size = 4000), @p137='67', @p138='CYCLE REPAIR 150.06' (Nullable = false) (Size = 450), @p139='28' (Nullable = true), @p140='0' (Precision = 18) (Scale = 4), @p141=NULL (Size = 4000), @p142='67', @p143='FINTEX ANNUAL MAINTENANCE CHARGE 150.06' (Nullable = false) (Size = 450), @p144='29' (Nullable = true), @p145='0' (Precision = 18) (Scale = 4), @p146=NULL (Size = 4000), @p147='67', @p148='GENERATOR REPAIR 150.06' (Nullable = false) (Size = 450), @p149='30' (Nullable = true), @p150='0' (Precision = 18) (Scale = 4), @p151=NULL (Size = 4000), @p152='67', @p153='INVERTER REPAIR 150.06' (Nullable = false) (Size = 450), @p154='31' (Nullable = true), @p155='0' (Precision = 18) (Scale = 4), @p156=NULL (Size = 4000), @p157='67', @p158='MOTORCYCLE REPAIR 150.06' (Nullable = false) (Size = 450), @p159='32' (Nullable = true), @p160='0' (Precision = 18) (Scale = 4), @p161=NULL (Size = 4000), @p162='69', @p163='MISCELLANEOUS EXPENSE' (Nullable = false) (Size = 450), @p164='33' (Nullable = true), @p165='0' (Precision = 18) (Scale = 4), @p166=NULL (Size = 4000), @p167='69', @p168='AGM EXP' (Nullable = false) (Size = 450), @p169='34' (Nullable = true), @p170='0' (Precision = 18) (Scale = 4), @p171=NULL (Size = 4000), @p172='69', @p173='AUDIT EXP' (Nullable = false) (Size = 450), @p174='35' (Nullable = true), @p175='0' (Precision = 18) (Scale = 4), @p176=NULL (Size = 4000), @p177='69', @p178='DHITO SULKA EXP' (Nullable = false) (Size = 450), @p179='36' (Nullable = true), @p180='0' (Precision = 18) (Scale = 4), @p181=NULL (Size = 4000), @p182='69', @p183='DONATION EXP' (Nullable = false) (Size = 450), @p184='37' (Nullable = true), @p185='0' (Precision = 18) (Scale = 4), @p186=NULL (Size = 4000), @p187='69', @p188='ELECTRICITY EXP' (Nullable = false) (Size = 450), @p189='38' (Nullable = true), @p190='0' (Precision = 18) (Scale = 4), @p191=NULL (Size = 4000), @p192='69', @p193='ENTERTAINMENT EXP' (Nullable = false) (Size = 450), @p194='39' (Nullable = true), @p195='0' (Precision = 18) (Scale = 4), @p196=NULL (Size = 4000), @p197='69', @p198='FUEL AND TRANSPORTATION EXP' (Nullable = false) (Size = 450), @p199='40' (Nullable = true), @p200='0' (Precision = 18) (Scale = 4), @p201=NULL (Size = 4000), @p202='69', @p203='GUEST SERVICE EXP' (Nullable = false) (Size = 450), @p204='41' (Nullable = true), @p205='0' (Precision = 18) (Scale = 4), @p206=NULL (Size = 4000), @p207='69', @p208='LOAN PROVISION FOR BAD DEPT EXP' (Nullable = false) (Size = 450), @p209='42' (Nullable = true)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [SubLedgers] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, 0),
(@p5, @p6, @p7, @p8, @p9, 1),
(@p10, @p11, @p12, @p13, @p14, 2),
(@p15, @p16, @p17, @p18, @p19, 3),
(@p20, @p21, @p22, @p23, @p24, 4),
(@p25, @p26, @p27, @p28, @p29, 5),
(@p30, @p31, @p32, @p33, @p34, 6),
(@p35, @p36, @p37, @p38, @p39, 7),
(@p40, @p41, @p42, @p43, @p44, 8),
(@p45, @p46, @p47, @p48, @p49, 9),
(@p50, @p51, @p52, @p53, @p54, 10),
(@p55, @p56, @p57, @p58, @p59, 11),
(@p60, @p61, @p62, @p63, @p64, 12),
(@p65, @p66, @p67, @p68, @p69, 13),
(@p70, @p71, @p72, @p73, @p74, 14),
(@p75, @p76, @p77, @p78, @p79, 15),
(@p80, @p81, @p82, @p83, @p84, 16),
(@p85, @p86, @p87, @p88, @p89, 17),
(@p90, @p91, @p92, @p93, @p94, 18),
(@p95, @p96, @p97, @p98, @p99, 19),
(@p100, @p101, @p102, @p103, @p104, 20),
(@p105, @p106, @p107, @p108, @p109, 21),
(@p110, @p111, @p112, @p113, @p114, 22),
(@p115, @p116, @p117, @p118, @p119, 23),
(@p120, @p121, @p122, @p123, @p124, 24),
(@p125, @p126, @p127, @p128, @p129, 25),
(@p130, @p131, @p132, @p133, @p134, 26),
(@p135, @p136, @p137, @p138, @p139, 27),
(@p140, @p141, @p142, @p143, @p144, 28),
(@p145, @p146, @p147, @p148, @p149, 29),
(@p150, @p151, @p152, @p153, @p154, 30),
(@p155, @p156, @p157, @p158, @p159, 31),
(@p160, @p161, @p162, @p163, @p164, 32),
(@p165, @p166, @p167, @p168, @p169, 33),
(@p170, @p171, @p172, @p173, @p174, 34),
(@p175, @p176, @p177, @p178, @p179, 35),
(@p180, @p181, @p182, @p183, @p184, 36),
(@p185, @p186, @p187, @p188, @p189, 37),
(@p190, @p191, @p192, @p193, @p194, 38),
(@p195, @p196, @p197, @p198, @p199, 39),
(@p200, @p201, @p202, @p203, @p204, 40),
(@p205, @p206, @p207, @p208, @p209, 41)) AS i ([CurrentBalance], [Description], [LedgerId], [Name], [SubLedgerCode], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CurrentBalance], [Description], [LedgerId], [Name], [SubLedgerCode])
VALUES (i.[CurrentBalance], i.[Description], i.[LedgerId], i.[Name], i.[SubLedgerCode])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 18:55:43.529 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[@p0='0' (Precision = 18) (Scale = 4), @p1=NULL (Size = 4000), @p2='69', @p3='LOAN RISK EXPENSES' (Nullable = false) (Size = 450), @p4='43' (Nullable = true), @p5='0' (Precision = 18) (Scale = 4), @p6=NULL (Size = 4000), @p7='69', @p8='PAINT HOUSE EXP' (Nullable = false) (Size = 450), @p9='44' (Nullable = true), @p10='0' (Precision = 18) (Scale = 4), @p11=NULL (Size = 4000), @p12='69', @p13='PROVIDENT FUND EXPENSE' (Nullable = false) (Size = 450), @p14='45' (Nullable = true), @p15='0' (Precision = 18) (Scale = 4), @p16=NULL (Size = 4000), @p17='69', @p18='SWEEPER EXP' (Nullable = false) (Size = 450), @p19='46' (Nullable = true), @p20='0' (Precision = 18) (Scale = 4), @p21=NULL (Size = 4000), @p22='69', @p23='TALIM EXP' (Nullable = false) (Size = 450), @p24='47' (Nullable = true), @p25='0' (Precision = 18) (Scale = 4), @p26=NULL (Size = 4000), @p27='69', @p28='TAX EXPENSE' (Nullable = false) (Size = 450), @p29='48' (Nullable = true), @p30='0' (Precision = 18) (Scale = 4), @p31=NULL (Size = 4000), @p32='69', @p33='TEA & WATER' (Nullable = false) (Size = 450), @p34='49' (Nullable = true), @p35='0' (Precision = 18) (Scale = 4), @p36=NULL (Size = 4000), @p37='69', @p38='TELEPHONE & COMMUNICATION' (Nullable = false) (Size = 450), @p39='50' (Nullable = true), @p40='0' (Precision = 18) (Scale = 4), @p41=NULL (Size = 4000), @p42='70', @p43='HARAS-150.9' (Nullable = false) (Size = 450), @p44='51' (Nullable = true), @p45='0' (Precision = 18) (Scale = 4), @p46=NULL (Size = 4000), @p47='71', @p48='KEROSINE-150.10' (Nullable = false) (Size = 450), @p49='52' (Nullable = true), @p50='0' (Precision = 18) (Scale = 4), @p51=NULL (Size = 4000), @p52='71', @p53='PETROL EXP-150.10' (Nullable = false) (Size = 450), @p54='53' (Nullable = true), @p55='0' (Precision = 18) (Scale = 4), @p56=NULL (Size = 4000), @p57='71', @p58='REBATE ON INTEREST' (Nullable = false) (Size = 450), @p59='54' (Nullable = true)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [SubLedgers] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, 0),
(@p5, @p6, @p7, @p8, @p9, 1),
(@p10, @p11, @p12, @p13, @p14, 2),
(@p15, @p16, @p17, @p18, @p19, 3),
(@p20, @p21, @p22, @p23, @p24, 4),
(@p25, @p26, @p27, @p28, @p29, 5),
(@p30, @p31, @p32, @p33, @p34, 6),
(@p35, @p36, @p37, @p38, @p39, 7),
(@p40, @p41, @p42, @p43, @p44, 8),
(@p45, @p46, @p47, @p48, @p49, 9),
(@p50, @p51, @p52, @p53, @p54, 10),
(@p55, @p56, @p57, @p58, @p59, 11)) AS i ([CurrentBalance], [Description], [LedgerId], [Name], [SubLedgerCode], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([CurrentBalance], [Description], [LedgerId], [Name], [SubLedgerCode])
VALUES (i.[CurrentBalance], i.[Description], i.[LedgerId], i.[Name], i.[SubLedgerCode])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 18:55:43.537 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.547 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@p0='1', @p1='Commercial' (Nullable = false) (Size = 4000), @p2='2', @p3='Development' (Nullable = false) (Size = 4000), @p4='3', @p5='Finance' (Nullable = false) (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [BankTypes] ([Id], [Name])
VALUES (@p0, @p1),
(@p2, @p3),
(@p4, @p5);
2023-08-13 18:55:43.553 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.563 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@p0='1', @p1='Indivisual' (Nullable = false) (Size = 450), @p2='2', @p3='Organization' (Nullable = false) (Size = 450), @p4='3', @p5='Minor' (Nullable = false) (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [ClientTypes] ([Id], [Type])
VALUES (@p0, @p1),
(@p2, @p3),
(@p4, @p5);
2023-08-13 18:55:43.567 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.579 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@p0='1', @p1='High Risk' (Nullable = false) (Size = 450), @p2='2', @p3='Medium Risk' (Nullable = false) (Size = 450), @p4='3', @p5='Low Risk' (Nullable = false) (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [ClientKYMTypes] ([Id], [Type])
VALUES (@p0, @p1),
(@p2, @p3),
(@p4, @p5);
2023-08-13 18:55:43.582 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.595 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.610 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.632 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[@p0='A' (Nullable = false) (Size = 450), @p1='B' (Nullable = false) (Size = 450), @p2='C' (Nullable = false) (Size = 450), @p3='D' (Nullable = false) (Size = 450), @p4='E' (Nullable = false) (Size = 450), @p5='F' (Nullable = false) (Size = 450), @p6='G' (Nullable = false) (Size = 450), @p7='H' (Nullable = false) (Size = 450), @p8='I' (Nullable = false) (Size = 450), @p9='J' (Nullable = false) (Size = 450), @p10='K' (Nullable = false) (Size = 450), @p11='L' (Nullable = false) (Size = 450), @p12='M' (Nullable = false) (Size = 450), @p13='N' (Nullable = false) (Size = 450), @p14='O' (Nullable = false) (Size = 450), @p15='P' (Nullable = false) (Size = 450), @p16='Q' (Nullable = false) (Size = 450), @p17='R' (Nullable = false) (Size = 450), @p18='S' (Nullable = false) (Size = 450), @p19='T' (Nullable = false) (Size = 450), @p20='U' (Nullable = false) (Size = 450), @p21='V' (Nullable = false) (Size = 450), @p22='W' (Nullable = false) (Size = 450), @p23='X' (Nullable = false) (Size = 450), @p24='Y' (Nullable = false) (Size = 450), @p25='Z' (Nullable = false) (Size = 450), @p26='1', @p27='2', @p28='3', @p29='4', @p30='5', @p31='6', @p32='7', @p33='8', @p34='9', @p35='10', @p36='11', @p37='12', @p38='13', @p39='14', @p40='15', @p41='16'], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
MERGE [ClientGroups] USING (
VALUES (@p0, 0),
(@p1, 1),
(@p2, 2),
(@p3, 3),
(@p4, 4),
(@p5, 5),
(@p6, 6),
(@p7, 7),
(@p8, 8),
(@p9, 9),
(@p10, 10),
(@p11, 11),
(@p12, 12),
(@p13, 13),
(@p14, 14),
(@p15, 15),
(@p16, 16),
(@p17, 17),
(@p18, 18),
(@p19, 19),
(@p20, 20),
(@p21, 21),
(@p22, 22),
(@p23, 23),
(@p24, 24),
(@p25, 25)) AS i ([Code], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Code])
VALUES (i.[Code])
OUTPUT INSERTED.[Id], i._Position;
MERGE [ClientUnits] USING (
VALUES (@p26, 0),
(@p27, 1),
(@p28, 2),
(@p29, 3),
(@p30, 4),
(@p31, 5),
(@p32, 6),
(@p33, 7),
(@p34, 8),
(@p35, 9),
(@p36, 10),
(@p37, 11),
(@p38, 12),
(@p39, 13),
(@p40, 14),
(@p41, 15)) AS i ([Code], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Code])
VALUES (i.[Code])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 18:55:43.644 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@p0='17', @p1='18', @p2='19', @p3='20', @p4='21', @p5='22', @p6='23', @p7='24', @p8='25', @p9='26', @p10='27', @p11='28', @p12='29', @p13='30', @p14='1', @p15='Koshi Pardesh' (Size = 4000), @p16='कोशी प्रदेश' (Size = 4000), @p17='2', @p18='Madesh Pardesh' (Size = 4000), @p19='मदेश प्रदेश' (Size = 4000), @p20='3', @p21='Bagmati Pardesh' (Size = 4000), @p22='बागमती प्रदेश' (Size = 4000), @p23='4', @p24='Gandaki Pardesh' (Size = 4000), @p25='गण्डकी प्रदेश' (Size = 4000), @p26='5', @p27='Lumbini Pardesh' (Size = 4000), @p28='लुम्बिनी प्रदेश' (Size = 4000), @p29='6', @p30='Karnali Pardesh' (Size = 4000), @p31='कर्णाली प्रदेश' (Size = 4000), @p32='7', @p33='Sudurpashchim Pardesh' (Size = 4000), @p34='सुदुरपश्चिम प्रदेश' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
MERGE [ClientUnits] USING (
VALUES (@p0, 0),
(@p1, 1),
(@p2, 2),
(@p3, 3),
(@p4, 4),
(@p5, 5),
(@p6, 6),
(@p7, 7),
(@p8, 8),
(@p9, 9),
(@p10, 10),
(@p11, 11),
(@p12, 12),
(@p13, 13)) AS i ([Code], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Code])
VALUES (i.[Code])
OUTPUT INSERTED.[Id], i._Position;
MERGE [States] USING (
VALUES (@p14, @p15, @p16, 0),
(@p17, @p18, @p19, 1),
(@p20, @p21, @p22, 2),
(@p23, @p24, @p25, 3),
(@p26, @p27, @p28, 4),
(@p29, @p30, @p31, 5),
(@p32, @p33, @p34, 6)) AS i ([Code], [EnglishName], [NepaliName], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Code], [EnglishName], [NepaliName])
VALUES (i.[Code], i.[EnglishName], i.[NepaliName])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 18:55:43.652 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.673 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[@p0='2', @p1='Brahmin' (Size = 4000), @p2='ब्रामण' (Size = 4000), @p3='1', @p4='Kshatriya' (Size = 4000), @p5='क्षेत्री' (Size = 4000), @p6='3', @p7='Magar' (Size = 4000), @p8='मगर' (Size = 4000), @p9='4', @p10='Tharu' (Size = 4000), @p11='थारु' (Size = 4000), @p12='5', @p13='Tamang' (Size = 4000), @p14='तमाङ्ग' (Size = 4000), @p15='6', @p16='Newar' (Size = 4000), @p17='नेवार' (Size = 4000), @p18='7', @p19='Muslim' (Size = 4000), @p20='मुसलमान' (Size = 4000), @p21='8', @p22='Kami' (Size = 4000), @p23='कामी' (Size = 4000), @p24='9', @p25='Yadav' (Size = 4000), @p26='यादव' (Size = 4000), @p27='10', @p28='Rai' (Size = 4000), @p29='रार्इ' (Size = 4000), @p30='11', @p31='Gurung' (Size = 4000), @p32='गुरुङ्ग' (Size = 4000), @p33='12', @p34='Damai/Dholi' (Size = 4000), @p35='दमार्इ/धोली' (Size = 4000), @p36='13', @p37='Limbu' (Size = 4000), @p38='लिम्वु' (Size = 4000), @p39='14', @p40='Thakuri' (Size = 4000), @p41='ठकुरी ' (Size = 4000), @p42='15', @p43='Sarki' (Size = 4000), @p44='सार्की' (Size = 4000), @p45='16', @p46='Teli' (Size = 4000), @p47='तेली' (Size = 4000), @p48='17', @p49='Chamar/Harijan/Ram' (Size = 4000), @p50='चमार/हरिजन/राम' (Size = 4000), @p51='18', @p52='Koiri' (Size = 4000), @p53='कोर्इरी' (Size = 4000), @p54='19', @p55='Kurmi' (Size = 4000), @p56='कुर्मी' (Size = 4000), @p57='20', @p58='Sanyasi/Dasnam' (Size = 4000), @p59='सन्यासी/दसनामी' (Size = 4000), @p60='21', @p61='Dhanuk' (Size = 4000), @p62='धानुक' (Size = 4000), @p63='22', @p64='Musahar' (Size = 4000), @p65='मुसहर' (Size = 4000), @p66='23', @p67='Dusadh/Paswan/Pasi' (Size = 4000), @p68='दुसाध/पासवान/पासी' (Size = 4000), @p69='24', @p70='Sherpa' (Size = 4000), @p71='शेर्पा' (Size = 4000), @p72='25', @p73='Sonar' (Size = 4000), @p74='सोनार' (Size = 4000), @p75='26', @p76='Kevat' (Size = 4000), @p77='केवट' (Size = 4000), @p78='27', @p79='Brahmin Terai' (Size = 4000), @p80='ब्रामण तराइ' (Size = 4000), @p81='28', @p82='Kathwaniya' (Size = 4000), @p83='कथवानिया' (Size = 4000), @p84='29', @p85='Gharti/Bhujel' (Size = 4000), @p86='घर्ति/भुजेल' (Size = 4000), @p87='30', @p88='Malal' (Size = 4000), @p89='मलाल्स' (Size = 4000), @p90='31', @p91='Kalwar' (Size = 4000), @p92='कलवार' (Size = 4000), @p93='32', @p94='Kumal' (Size = 4000), @p95='कुमाल' (Size = 4000), @p96='33', @p97='Hajam/Thakur' (Size = 4000), @p98='हजाम/ठाकुर' (Size = 4000), @p99='34', @p100='Kanu' (Size = 4000), @p101='कानु' (Size = 4000), @p102='35', @p103='Rajbanshi' (Size = 4000), @p104='राजवशीं' (Size = 4000), @p105='36', @p106='Sunuwar' (Size = 4000), @p107='सुनुवार' (Size = 4000), @p108='37', @p109='Sudhi' (Size = 4000), @p110='सुधी' (Size = 4000), @p111='38', @p112='Losar' (Size = 4000), @p113='लोसार' (Size = 4000), @p114='39', @p115='Tatma/Tatwa' (Size = 4000), @p116='तत्मा/तत्वा' (Size = 4000), @p117='40', @p118='Khatwe' (Size = 4000), @p119='खत्वे' (Size = 4000), @p120='41', @p121='Dhobi' (Size = 4000), @p122='धोवी' (Size = 4000), @p123='42', @p124='Majhi' (Size = 4000), @p125='माझी' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Casts] USING (
VALUES (@p0, @p1, @p2, 0),
(@p3, @p4, @p5, 1),
(@p6, @p7, @p8, 2),
(@p9, @p10, @p11, 3),
(@p12, @p13, @p14, 4),
(@p15, @p16, @p17, 5),
(@p18, @p19, @p20, 6),
(@p21, @p22, @p23, 7),
(@p24, @p25, @p26, 8),
(@p27, @p28, @p29, 9),
(@p30, @p31, @p32, 10),
(@p33, @p34, @p35, 11),
(@p36, @p37, @p38, 12),
(@p39, @p40, @p41, 13),
(@p42, @p43, @p44, 14),
(@p45, @p46, @p47, 15),
(@p48, @p49, @p50, 16),
(@p51, @p52, @p53, 17),
(@p54, @p55, @p56, 18),
(@p57, @p58, @p59, 19),
(@p60, @p61, @p62, 20),
(@p63, @p64, @p65, 21),
(@p66, @p67, @p68, 22),
(@p69, @p70, @p71, 23),
(@p72, @p73, @p74, 24),
(@p75, @p76, @p77, 25),
(@p78, @p79, @p80, 26),
(@p81, @p82, @p83, 27),
(@p84, @p85, @p86, 28),
(@p87, @p88, @p89, 29),
(@p90, @p91, @p92, 30),
(@p93, @p94, @p95, 31),
(@p96, @p97, @p98, 32),
(@p99, @p100, @p101, 33),
(@p102, @p103, @p104, 34),
(@p105, @p106, @p107, 35),
(@p108, @p109, @p110, 36),
(@p111, @p112, @p113, 37),
(@p114, @p115, @p116, 38),
(@p117, @p118, @p119, 39),
(@p120, @p121, @p122, 40),
(@p123, @p124, @p125, 41)) AS i ([Code], [EnglishName], [NepaliName], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Code], [EnglishName], [NepaliName])
VALUES (i.[Code], i.[EnglishName], i.[NepaliName])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 18:55:43.681 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[@p0='43', @p1='Nuniya' (Size = 4000), @p2='नुनिया' (Size = 4000), @p3='44', @p4='Gupta' (Size = 4000), @p5='गुप्ता' (Size = 4000), @p6='45', @p7='Others' (Size = 4000), @p8='अन्य' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Casts] USING (
VALUES (@p0, @p1, @p2, 0),
(@p3, @p4, @p5, 1),
(@p6, @p7, @p8, 2)) AS i ([Code], [EnglishName], [NepaliName], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Code], [EnglishName], [NepaliName])
VALUES (i.[Code], i.[EnglishName], i.[NepaliName])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 18:55:43.686 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.708 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[@p0='1', @p1='Taplejung' (Size = 4000), @p2='ताप्लेजुङ' (Size = 4000), @p3='2', @p4='Panchthar' (Size = 4000), @p5='पाँचथर' (Size = 4000), @p6='3', @p7='Ilam' (Size = 4000), @p8='ईलाम' (Size = 4000), @p9='4', @p10='Sankhuwasabha' (Size = 4000), @p11='संखुवासभा' (Size = 4000), @p12='5', @p13='Tehrathum' (Size = 4000), @p14='तेर्हथुम' (Size = 4000), @p15='6', @p16='Dhankuta' (Size = 4000), @p17='धनकुटा' (Size = 4000), @p18='7', @p19='Bhojpur' (Size = 4000), @p20='भोजपुर' (Size = 4000), @p21='8', @p22='Khotang' (Size = 4000), @p23='खोटांङ' (Size = 4000), @p24='9', @p25='Solukhumbu' (Size = 4000), @p26='सोलुखुम्बु' (Size = 4000), @p27='10', @p28='Okhaldhunga' (Size = 4000), @p29='ओखलढुंगा' (Size = 4000), @p30='11', @p31='Udayapur' (Size = 4000), @p32='उदयपुर' (Size = 4000), @p33='12', @p34='Jhapa' (Size = 4000), @p35='झापा' (Size = 4000), @p36='13', @p37='Morang' (Size = 4000), @p38='मोरङ' (Size = 4000), @p39='14', @p40='Sunsari' (Size = 4000), @p41='सुनसरी' (Size = 4000), @p42='15', @p43='Saptari' (Size = 4000), @p44='सप्तरी' (Size = 4000), @p45='16', @p46='Siraha' (Size = 4000), @p47='सिराहा' (Size = 4000), @p48='17', @p49='Dhanusha' (Size = 4000), @p50='धनुषा' (Size = 4000), @p51='18', @p52='Mahottari' (Size = 4000), @p53='महोतरी' (Size = 4000), @p54='19', @p55='Sarlahi' (Size = 4000), @p56='सर्लाही' (Size = 4000), @p57='20', @p58='Rautahat' (Size = 4000), @p59='रौतहट' (Size = 4000), @p60='21', @p61='Bara' (Size = 4000), @p62='बारा' (Size = 4000), @p63='22', @p64='Parsa' (Size = 4000), @p65='पर्सा' (Size = 4000), @p66='23', @p67='Dolakha' (Size = 4000), @p68='दोलखा' (Size = 4000), @p69='24', @p70='Ramechhap' (Size = 4000), @p71='रामेछाप' (Size = 4000), @p72='25', @p73='Sindhuli' (Size = 4000), @p74='सिन्धुली' (Size = 4000), @p75='26', @p76='Kavrepalanchok' (Size = 4000), @p77='काभ्रेपलान्चोक' (Size = 4000), @p78='27', @p79='Sindhupalchok' (Size = 4000), @p80='सिन्धुपाल्चोक' (Size = 4000), @p81='28', @p82='Rasuwa' (Size = 4000), @p83='रसुवा' (Size = 4000), @p84='29', @p85='Nuwakot' (Size = 4000), @p86='नुवाकोट' (Size = 4000), @p87='30', @p88='Dhading' (Size = 4000), @p89='धादिंङ' (Size = 4000), @p90='31', @p91='Chitwan' (Size = 4000), @p92='चितवन' (Size = 4000), @p93='32', @p94='Bhaktapur' (Size = 4000), @p95='भक्तपुर' (Size = 4000), @p96='33', @p97='Makwanpur' (Size = 4000), @p98='मकवानपुर' (Size = 4000), @p99='34', @p100='Lalitpur' (Size = 4000), @p101='ललितपुर' (Size = 4000), @p102='35', @p103='Kathmandu' (Size = 4000), @p104='काठमाण्डौ' (Size = 4000), @p105='36', @p106='Gorkha' (Size = 4000), @p107='गोर्खा' (Size = 4000), @p108='37', @p109='Lamjung' (Size = 4000), @p110='लमजुङ' (Size = 4000), @p111='38', @p112='Tanahun' (Size = 4000), @p113='तनहुँ' (Size = 4000), @p114='39', @p115='Kaski' (Size = 4000), @p116='कास्की' (Size = 4000), @p117='40', @p118='Manang' (Size = 4000), @p119='मनाङ' (Size = 4000), @p120='41', @p121='Mustang' (Size = 4000), @p122='मुस्तांङ' (Size = 4000), @p123='42', @p124='Parbat' (Size = 4000), @p125='पर्वत' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Districts] USING (
VALUES (@p0, @p1, @p2, 0),
(@p3, @p4, @p5, 1),
(@p6, @p7, @p8, 2),
(@p9, @p10, @p11, 3),
(@p12, @p13, @p14, 4),
(@p15, @p16, @p17, 5),
(@p18, @p19, @p20, 6),
(@p21, @p22, @p23, 7),
(@p24, @p25, @p26, 8),
(@p27, @p28, @p29, 9),
(@p30, @p31, @p32, 10),
(@p33, @p34, @p35, 11),
(@p36, @p37, @p38, 12),
(@p39, @p40, @p41, 13),
(@p42, @p43, @p44, 14),
(@p45, @p46, @p47, 15),
(@p48, @p49, @p50, 16),
(@p51, @p52, @p53, 17),
(@p54, @p55, @p56, 18),
(@p57, @p58, @p59, 19),
(@p60, @p61, @p62, 20),
(@p63, @p64, @p65, 21),
(@p66, @p67, @p68, 22),
(@p69, @p70, @p71, 23),
(@p72, @p73, @p74, 24),
(@p75, @p76, @p77, 25),
(@p78, @p79, @p80, 26),
(@p81, @p82, @p83, 27),
(@p84, @p85, @p86, 28),
(@p87, @p88, @p89, 29),
(@p90, @p91, @p92, 30),
(@p93, @p94, @p95, 31),
(@p96, @p97, @p98, 32),
(@p99, @p100, @p101, 33),
(@p102, @p103, @p104, 34),
(@p105, @p106, @p107, 35),
(@p108, @p109, @p110, 36),
(@p111, @p112, @p113, 37),
(@p114, @p115, @p116, 38),
(@p117, @p118, @p119, 39),
(@p120, @p121, @p122, 40),
(@p123, @p124, @p125, 41)) AS i ([Code], [EnglishName], [NepaliName], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Code], [EnglishName], [NepaliName])
VALUES (i.[Code], i.[EnglishName], i.[NepaliName])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 18:55:43.722 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[@p0='43', @p1='Syangja' (Size = 4000), @p2='स्याङ्जा' (Size = 4000), @p3='44', @p4='Myagdi' (Size = 4000), @p5='म्याग्दी' (Size = 4000), @p6='45', @p7='Baglung' (Size = 4000), @p8='बाग्लुंङ' (Size = 4000), @p9='46', @p10='Nawalparasi (Bardghat Susta East)' (Size = 4000), @p11='नवलपरासी (बरद्घाट सुस्तापूर्व)' (Size = 4000), @p12='47', @p13='Nawalparasi (Bardghat Susta West)' (Size = 4000), @p14='नवलपरासी (बरद्घाट सुस्ता पश्चिम )' (Size = 4000), @p15='48', @p16='Rupandehi' (Size = 4000), @p17='रुपन्देही' (Size = 4000), @p18='49', @p19='Kapilvastu' (Size = 4000), @p20='कपिलवस्तु' (Size = 4000), @p21='50', @p22='Palpa' (Size = 4000), @p23='पाल्पा' (Size = 4000), @p24='51', @p25='Arghakhanchi' (Size = 4000), @p26='अर्घाखाँची' (Size = 4000), @p27='52', @p28='Gulmi' (Size = 4000), @p29='गुल्मी' (Size = 4000), @p30='53', @p31='Rukum (East)' (Size = 4000), @p32='रुकुम (पूर्वी भाग)' (Size = 4000), @p33='54', @p34='Rolpa' (Size = 4000), @p35='रोल्पा' (Size = 4000), @p36='55', @p37='Pyuthan' (Size = 4000), @p38='प्युठान' (Size = 4000), @p39='56', @p40='Dang' (Size = 4000), @p41='दाङ' (Size = 4000), @p42='57', @p43='Banke' (Size = 4000), @p44='बाँके' (Size = 4000), @p45='58', @p46='Bardiya' (Size = 4000), @p47='बर्दिया' (Size = 4000), @p48='59', @p49='Rukum (West)' (Size = 4000), @p50='रुकुम (पश्चिम भाग)' (Size = 4000), @p51='60', @p52='Salyan' (Size = 4000), @p53='सल्यान' (Size = 4000), @p54='61', @p55='Dolpa' (Size = 4000), @p56='डोल्पा' (Size = 4000), @p57='62', @p58='Jumla' (Size = 4000), @p59='जुम्ला' (Size = 4000), @p60='63', @p61='Mugu' (Size = 4000), @p62='मुगु' (Size = 4000), @p63='64', @p64='Humla' (Size = 4000), @p65='हुम्ला' (Size = 4000), @p66='65', @p67='Kalikot' (Size = 4000), @p68='कालिकोट' (Size = 4000), @p69='66', @p70='Jajarkot' (Size = 4000), @p71='जाजरकोट' (Size = 4000), @p72='67', @p73='Dailekh' (Size = 4000), @p74='दैलेख' (Size = 4000), @p75='68', @p76='Surkhet' (Size = 4000), @p77='सुर्खेत' (Size = 4000), @p78='69', @p79='Bajura' (Size = 4000), @p80='बाजुरा' (Size = 4000), @p81='70', @p82='Bajhang' (Size = 4000), @p83='बझाङ' (Size = 4000), @p84='71', @p85='Doti' (Size = 4000), @p86='डोटी' (Size = 4000), @p87='72', @p88='Achham' (Size = 4000), @p89='अछाम' (Size = 4000), @p90='73', @p91='Darchula' (Size = 4000), @p92='दार्चुला' (Size = 4000), @p93='74', @p94='Baitadi' (Size = 4000), @p95='बैतडी' (Size = 4000), @p96='75', @p97='Dadeldhura' (Size = 4000), @p98='डडेलधुरा' (Size = 4000), @p99='76', @p100='Kanchanpur' (Size = 4000), @p101='कञ्चनपुर' (Size = 4000), @p102='77', @p103='Kailali' (Size = 4000), @p104='कैलाली' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Districts] USING (
VALUES (@p0, @p1, @p2, 0),
(@p3, @p4, @p5, 1),
(@p6, @p7, @p8, 2),
(@p9, @p10, @p11, 3),
(@p12, @p13, @p14, 4),
(@p15, @p16, @p17, 5),
(@p18, @p19, @p20, 6),
(@p21, @p22, @p23, 7),
(@p24, @p25, @p26, 8),
(@p27, @p28, @p29, 9),
(@p30, @p31, @p32, 10),
(@p33, @p34, @p35, 11),
(@p36, @p37, @p38, 12),
(@p39, @p40, @p41, 13),
(@p42, @p43, @p44, 14),
(@p45, @p46, @p47, 15),
(@p48, @p49, @p50, 16),
(@p51, @p52, @p53, 17),
(@p54, @p55, @p56, 18),
(@p57, @p58, @p59, 19),
(@p60, @p61, @p62, 20),
(@p63, @p64, @p65, 21),
(@p66, @p67, @p68, 22),
(@p69, @p70, @p71, 23),
(@p72, @p73, @p74, 24),
(@p75, @p76, @p77, 25),
(@p78, @p79, @p80, 26),
(@p81, @p82, @p83, 27),
(@p84, @p85, @p86, 28),
(@p87, @p88, @p89, 29),
(@p90, @p91, @p92, 30),
(@p93, @p94, @p95, 31),
(@p96, @p97, @p98, 32),
(@p99, @p100, @p101, 33),
(@p102, @p103, @p104, 34)) AS i ([Code], [EnglishName], [NepaliName], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Code], [EnglishName], [NepaliName])
VALUES (i.[Code], i.[EnglishName], i.[NepaliName])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 18:55:43.730 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.753 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[@p0='1', @p1='Married' (Size = 4000), @p2='विवाहित' (Size = 4000), @p3='2', @p4='Unmarried' (Size = 4000), @p5='अविवाहित' (Size = 4000), @p6='3', @p7='Divorced' (Size = 4000), @p8='विदुर' (Size = 4000), @p9='4', @p10='Widow' (Size = 4000), @p11='विदुवा' (Size = 4000), @p12='5', @p13='Separated' (Size = 4000), @p14='परपाचुके' (Size = 4000), @p15='6', @p16='Annulled' (Size = 4000), @p17='छुट्टिएक' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [MaritalStatuses] USING (
VALUES (@p0, @p1, @p2, 0),
(@p3, @p4, @p5, 1),
(@p6, @p7, @p8, 2),
(@p9, @p10, @p11, 3),
(@p12, @p13, @p14, 4),
(@p15, @p16, @p17, 5)) AS i ([Code], [EnglishName], [NepaliName], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Code], [EnglishName], [NepaliName])
VALUES (i.[Code], i.[EnglishName], i.[NepaliName])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 18:55:43.762 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.784 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[@p0='1', @p1='Male' (Size = 4000), @p2='पुरूष' (Size = 4000), @p3='2', @p4='Female' (Size = 4000), @p5='महिला' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [Genders] USING (
VALUES (@p0, @p1, @p2, 0),
(@p3, @p4, @p5, 1)) AS i ([Code], [EnglishName], [NepaliName], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Code], [EnglishName], [NepaliName])
VALUES (i.[Code], i.[EnglishName], i.[NepaliName])
OUTPUT INSERTED.[Id], i._Position;
2023-08-13 18:55:43.797 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.814 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[@p0='1', @p1='Yearly' (Nullable = false) (Size = 4000), @p2='2', @p3='HalfYearly' (Nullable = false) (Size = 4000), @p4='3', @p5='Quarterly' (Nullable = false) (Size = 4000), @p6='4', @p7='Monthly' (Nullable = false) (Size = 4000), @p8='5', @p9='None' (Nullable = false) (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [DepositPostingSchemes] ([Id], [Title])
VALUES (@p0, @p1),
(@p2, @p3),
(@p4, @p5),
(@p6, @p7),
(@p8, @p9);
2023-08-13 18:55:43.824 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.842 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@p0='1', @p1='Active' (Nullable = false) (Size = 4000), @p2='2', @p3='Mature' (Nullable = false) (Size = 4000), @p4='3', @p5='Close' (Nullable = false) (Size = 4000), @p6='4', @p7='Suspend' (Nullable = false) (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [DepositAccountStatuses] ([Id], [Title])
VALUES (@p0, @p1),
(@p2, @p3),
(@p4, @p5),
(@p6, @p7);
2023-08-13 18:55:43.848 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.860 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@p0='1', @p1='Single' (Nullable = false) (Size = 4000), @p2='2', @p3='Joint' (Nullable = false) (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [DepositAccountTypes] ([Id], [Title])
VALUES (@p0, @p1),
(@p2, @p3);
2023-08-13 18:55:43.866 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-13 18:55:43.878 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@p0='1', @p1='DailyBalance' (Nullable = false) (Size = 4000), @p2='2', @p3='DailyMinimumBalance' (Nullable = false) (Size = 4000), @p4='3', @p5='WeeklyMinimumBalance' (Nullable = false) (Size = 4000), @p6='4', @p7='Fornight' (Nullable = false) (Size = 4000), @p8='5', @p9='MonthlyMinimumBalance' (Nullable = false) (Size = 4000), @p10='6', @p11='Flexible' (Nullable = false) (Size = 4000), @p12='7', @p13='None' (Nullable = false) (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [DepositSchemeCalculationTypes] ([Id], [Title])
VALUES (@p0, @p1),
(@p2, @p3),
(@p4, @p5),
(@p6, @p7),
(@p8, @p9),
(@p10, @p11),
(@p12, @p13);
2023-08-13 18:55:44.001 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-13 18:55:44.182 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-13 18:55:44.182 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-13 18:55:44.186 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-13 18:55:44.187 +05:45 [INF] Hosting environment: Development
2023-08-13 18:55:44.187 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-13 18:56:08.894 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/SuperAdmin/login application/json 54
2023-08-13 18:56:08.965 +05:45 [INF] CORS policy execution successful.
2023-08-13 18:56:09.157 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.SuperAdminController.Login (MicroFinance)'
2023-08-13 18:56:09.190 +05:45 [INF] Route matched with {action = "Login", controller = "SuperAdmin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.SuperAdminLoginDto) on controller MicroFinance.Controllers.UserManagement.SuperAdminController (MicroFinance).
2023-08-13 18:56:17.668 +05:45 [INF] Executed DbCommand (29ms) [Parameters=[@__userName_0='Fintex' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RoleId], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [u].[Id], [u].[Name], [u].[RoleCode]
FROM [AspNetUsers] AS [a]
INNER JOIN [UserRoles] AS [u] ON [a].[RoleId] = [u].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 18:56:38.735 +05:45 [INF] 8/13/2023 6:56:38 PM: SuperAdmin Logged In > Fintex
2023-08-13 18:56:45.989 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.UserManagement.TokenResponseDto'.
2023-08-13 18:56:46.047 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.SuperAdminController.Login (MicroFinance) in 36851.5384ms
2023-08-13 18:56:46.050 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.SuperAdminController.Login (MicroFinance)'
2023-08-13 18:56:46.056 +05:45 [INF] HTTP POST /SuperAdmin/login responded 200 in 37084.2187 ms
2023-08-13 18:56:46.093 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/SuperAdmin/login application/json 54 - 200 - application/json;+charset=utf-8 37203.1223ms
2023-08-13 18:57:57.009 +05:45 [INF] Request starting HTTP/1.1 PUT http://localhost:5000/SuperAdmin/updatePassword application/json 104
2023-08-13 18:57:57.013 +05:45 [INF] CORS policy execution successful.
2023-08-13 18:57:57.116 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.SuperAdminController.UpdatePassword (MicroFinance)'
2023-08-13 18:57:57.123 +05:45 [INF] Route matched with {action = "UpdatePassword", controller = "SuperAdmin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] UpdatePassword(MicroFinance.Dtos.UserManagement.SuperAdminUpdatePasswordDto) on controller MicroFinance.Controllers.UserManagement.SuperAdminController (MicroFinance).
2023-08-13 18:57:57.202 +05:45 [INF] Executed DbCommand (16ms) [Parameters=[@__id_0='9b135dcd-0c98-484a-b05a-66ef569c3902' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RoleId], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [u].[Id], [u].[Name], [u].[RoleCode]
FROM [AspNetUsers] AS [a]
INNER JOIN [UserRoles] AS [u] ON [a].[RoleId] = [u].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 18:57:57.237 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__userName_0='Fintex' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RoleId], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [u].[Id], [u].[Name], [u].[RoleCode]
FROM [AspNetUsers] AS [a]
INNER JOIN [UserRoles] AS [u] ON [a].[RoleId] = [u].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-13 18:57:57.335 +05:45 [INF] Executed DbCommand (21ms) [Parameters=[@__normalizedUserName_0='FINTEX' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RoleId], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-08-13 18:57:57.376 +05:45 [INF] Executed DbCommand (19ms) [Parameters=[@p23='9b135dcd-0c98-484a-b05a-66ef569c3902' (Nullable = false) (Size = 450), @p0='0', @p1='b1a41af9-70d2-4438-9158-45e94f74956c' (Size = 4000), @p24='a2136277-be23-4dbc-a93f-e1bae4b655be' (Size = 4000), @p2='AshishAdhikari' (Nullable = false) (Size = 4000), @p3='2023-08-13T18:54:32.0254845', @p4=NULL (DbType = Double), @p5='iconichostnep@gmail.com' (Size = 256), @p6='False', @p7=NULL (DbType = Int32), @p8='True', @p9=NULL (DbType = Double), @p10='True', @p11=NULL (DbType = DateTimeOffset), @p12=NULL (Size = 4000), @p13=NULL (DbType = DateTime2), @p14='ICONICHOSTNEP@GMAIL.COM' (Size = 256), @p15='FINTEX' (Size = 256), @p16='AQAAAAEAACcQAAAAEA2nwkYuxa5kIMNnVGxJmP+za2m670SAOHTdTW2L1v4TTRAUwu9IPxoG4aaS3wuiDw==' (Size = 4000), @p17=NULL (Size = 4000), @p18='False', @p19='5', @p20='TZFWCPRNCVA42IDNSQLVUTR4I63FSXK5' (Size = 4000), @p21='False', @p22='Fintex' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [CreatedBy] = @p2, [CreatedOn] = @p3, [DepositLimit] = @p4, [Email] = @p5, [EmailConfirmed] = @p6, [EmployeeId] = @p7, [IsActive] = @p8, [LoanLimit] = @p9, [LockoutEnabled] = @p10, [LockoutEnd] = @p11, [ModifiedBy] = @p12, [ModifiedOn] = @p13, [NormalizedEmail] = @p14, [NormalizedUserName] = @p15, [PasswordHash] = @p16, [PhoneNumber] = @p17, [PhoneNumberConfirmed] = @p18, [RoleId] = @p19, [SecurityStamp] = @p20, [TwoFactorEnabled] = @p21, [UserName] = @p22
OUTPUT 1
WHERE [Id] = @p23 AND [ConcurrencyStamp] = @p24;
2023-08-13 18:57:57.383 +05:45 [INF] 8/13/2023 6:57:57 PM (SuperAdmin: UpdatePassword) Password Updated: Fintex
2023-08-13 18:57:57.385 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 18:57:57.394 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.SuperAdminController.UpdatePassword (MicroFinance) in 270.7515ms
2023-08-13 18:57:57.394 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.SuperAdminController.UpdatePassword (MicroFinance)'
2023-08-13 18:57:57.396 +05:45 [INF] HTTP PUT /SuperAdmin/updatePassword responded 200 in 382.4144 ms
2023-08-13 18:57:57.396 +05:45 [INF] Request finished HTTP/1.1 PUT http://localhost:5000/SuperAdmin/updatePassword application/json 104 - 200 - application/json;+charset=utf-8 387.2213ms
2023-08-13 19:10:46.700 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCompanyProfile multipart/form-data;+boundary=----WebKitFormBoundarynTRBGiaBOJSfSc5x 1513
2023-08-13 19:10:46.777 +05:45 [INF] CORS policy execution successful.
2023-08-13 19:10:46.804 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCompanyProfile (MicroFinance)'
2023-08-13 19:10:46.887 +05:45 [INF] Route matched with {action = "CreateCompanyProfile", controller = "CompanyProfile"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateCompanyProfile(MicroFinance.Dtos.CompanyProfile.CreateCompanyProfileDto) on controller MicroFinance.Controllers.CompanyProfile.CompanyProfileController (MicroFinance).
2023-08-13 19:10:47.276 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='9b135dcd-0c98-484a-b05a-66ef569c3902' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RoleId], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [u].[Id], [u].[Name], [u].[RoleCode]
FROM [AspNetUsers] AS [a]
INNER JOIN [UserRoles] AS [u] ON [a].[RoleId] = [u].[Id]
WHERE [a].[Id] = @__id_0
2023-08-13 19:10:49.858 +05:45 [WRN] The query uses the 'First'/'FirstOrDefault' operator without 'OrderBy' and filter operators. This may lead to unpredictable results.
2023-08-13 19:10:49.940 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyAddress], [c].[CompanyAddressNepali], [c].[CompanyEmailAddress], [c].[CompanyName], [c].[CompanyNameNepali], [c].[CompanyValidityEndDate], [c].[CompanyValidityStartDate], [c].[CurrentFiscalYear], [c].[CurrentTax], [c].[EstablishedDate], [c].[LogoFileData], [c].[LogoFileName], [c].[LogoFileType], [c].[PANNo], [c].[PhoneNo]
FROM [CompanyDetails] AS [c]
2023-08-13 19:10:50.050 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[@p0='Jeetpur, Padampur' (Size = 4000), @p1='Kalika-02' (Size = 4000), @p2='ashish.adhikari727@gmail.com' (Size = 4000), @p3='Sahakari Sastha' (Nullable = false) (Size = 4000), @p4='Nepali Sahakari Sastha' (Size = 4000), @p5='2023-08-14T00:00:00.0000000', @p6='2023-08-13T00:00:00.0000000', @p7='8081' (Nullable = false) (Size = 4000), @p8='2' (Precision = 4) (Scale = 2), @p9='2022-01-01T00:00:00.0000000' (Nullable = true), @p10=NULL (Size = 8000) (DbType = Binary), @p11=NULL (Size = 4000), @p12=NULL (DbType = Int32), @p13='123456' (Size = 4000), @p14='+9779840382936' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [CompanyDetails] ([CompanyAddress], [CompanyAddressNepali], [CompanyEmailAddress], [CompanyName], [CompanyNameNepali], [CompanyValidityEndDate], [CompanyValidityStartDate], [CurrentFiscalYear], [CurrentTax], [EstablishedDate], [LogoFileData], [LogoFileName], [LogoFileType], [PANNo], [PhoneNo])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14);
2023-08-13 19:10:50.057 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-13 19:10:50.058 +05:45 [INF] Executed action MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCompanyProfile (MicroFinance) in 3171.2206ms
2023-08-13 19:10:50.058 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.CompanyProfile.CompanyProfileController.CreateCompanyProfile (MicroFinance)'
2023-08-13 19:10:50.058 +05:45 [INF] HTTP POST /CompanyProfile/createCompanyProfile responded 200 in 3280.9315 ms
2023-08-13 19:10:50.059 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/CompanyProfile/createCompanyProfile multipart/form-data;+boundary=----WebKitFormBoundarynTRBGiaBOJSfSc5x 1513 - 200 - application/json;+charset=utf-8 3359.3789ms
