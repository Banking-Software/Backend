2023-07-27 00:01:27.653 +05:45 [INF] Executed DbCommand (104ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:01:27.947 +05:45 [INF] Executed DbCommand (125ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:01:27.958 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:01:27.967 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:01:28.040 +05:45 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:01:28.093 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:01:28.737 +05:45 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.023 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:01:29.025 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:01:29.027 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:01:29.029 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:01:29.034 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:01:29.035 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:01:29.445 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 00:01:29.476 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:01:29.476 +05:45 [WRN] No store type was specified for the decimal property 'TransactionAmount' on entity type 'BaseTransaction'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:01:29.477 +05:45 [WRN] No store type was specified for the decimal property 'BalanceAfterTransaction' on entity type 'DepositAccountTransaction'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:01:29.624 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:01:29.628 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:01:29.631 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:01:29.633 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:01:29.639 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:01:29.647 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:01:29.657 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.675 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.684 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.702 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.716 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.725 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.743 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.758 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.766 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.774 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.800 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.807 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.813 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.819 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.825 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.835 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.843 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.852 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:29.862 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:01:30.075 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-07-27 00:01:30.440 +05:45 [INF] Now listening on: https://localhost:5001
2023-07-27 00:01:30.441 +05:45 [INF] Now listening on: http://localhost:5000
2023-07-27 00:01:30.448 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-07-27 00:01:30.450 +05:45 [INF] Hosting environment: Development
2023-07-27 00:01:30.450 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-07-27 00:01:31.147 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/AccountSetup/creatBankSetup application/json 198
2023-07-27 00:01:31.278 +05:45 [INF] CORS policy execution successful.
2023-07-27 00:01:32.041 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.AccountSetup.AccountSetupController.CreateBankSetup (MicroFinance)'
2023-07-27 00:01:32.550 +05:45 [INF] Route matched with {action = "CreateBankSetup", controller = "AccountSetup"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateBankSetup(MicroFinance.Dtos.AccountSetup.MainLedger.CreateBankSetupDto) on controller MicroFinance.Controllers.AccountSetup.AccountSetupController (MicroFinance).
2023-07-27 00:01:33.258 +05:45 [INF] Executed DbCommand (109ms) [Parameters=[@__id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-07-27 00:01:33.634 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-07-27 00:02:09.130 +05:45 [INF] Executed DbCommand (61ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[Name]
FROM [BankTypes] AS [b]
WHERE [b].[Id] = @__p_0
2023-07-27 00:02:14.552 +05:45 [INF] Executed DbCommand (56ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-07-27 00:02:27.306 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'90'
2023-07-27 00:02:27.377 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__groupType_Id_0='2', @__ToUpper_1='KUMARI BANK' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[GroupTypeId] = @__groupType_Id_0 AND [l].[Name] = @__ToUpper_1
2023-07-27 00:02:27.890 +05:45 [INF] Executed DbCommand (31ms) [Parameters=[@p0='0' (Precision = 18) (Scale = 4), @p1=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p2='2023-07-27T00:02:27.3802953+05:45', @p3='2', @p4=NULL (Size = 4000), @p5='True', @p6='False', @p7=NULL (DbType = Int32), @p8='KUMARI BANK' (Nullable = false) (Size = 450), @p9='कुमारी बैंक' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Ledgers] ([CurrentBalance], [DepreciationRate], [EntryDate], [GroupTypeId], [HisabNumber], [IsBank], [IsSubLedgerActive], [LedgerCode], [Name], [NepaliName])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-07-27 00:02:28.048 +05:45 [INF] Executed DbCommand (14ms) [Parameters=[@p0='string' (Nullable = false) (Size = 4000), @p1='Chitwan' (Nullable = false) (Size = 4000), @p2='1', @p3='000' (Nullable = false) (Size = 4000), @p4='10' (Nullable = true) (Precision = 5) (Scale = 2), @p5='75', @p6='KUMARI BANK' (Nullable = false) (Size = 450), @p7='कुमारी बैंक' (Size = 4000), @p8='0' (Precision = 18) (Scale = 4)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [BankSetups] ([AccountNumber], [BankBranch], [BankTypeId], [BranchCode], [InterestRate], [LedgerId], [Name], [NepaliName], [TotalInterestBalance])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2023-07-27 00:02:28.079 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-07-27 00:02:28.168 +05:45 [INF] Executed action MicroFinance.Controllers.AccountSetup.AccountSetupController.CreateBankSetup (MicroFinance) in 55610.0274ms
2023-07-27 00:02:28.171 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.AccountSetup.AccountSetupController.CreateBankSetup (MicroFinance)'
2023-07-27 00:02:28.180 +05:45 [INF] HTTP POST /AccountSetup/creatBankSetup responded 200 in 56138.7939 ms
2023-07-27 00:02:28.221 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/AccountSetup/creatBankSetup application/json 198 - 200 - application/json;+charset=utf-8 57082.6320ms
2023-07-27 00:03:16.724 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/AccountSetup/creatBankSetup application/json 221
2023-07-27 00:03:16.733 +05:45 [INF] CORS policy execution successful.
2023-07-27 00:03:16.736 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.AccountSetup.AccountSetupController.CreateBankSetup (MicroFinance)'
2023-07-27 00:03:16.739 +05:45 [INF] Route matched with {action = "CreateBankSetup", controller = "AccountSetup"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateBankSetup(MicroFinance.Dtos.AccountSetup.MainLedger.CreateBankSetupDto) on controller MicroFinance.Controllers.AccountSetup.AccountSetupController (MicroFinance).
2023-07-27 00:03:16.768 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[@__id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-07-27 00:03:16.884 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-07-27 00:03:19.272 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[Name]
FROM [BankTypes] AS [b]
WHERE [b].[Id] = @__p_0
2023-07-27 00:03:19.300 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__branchCode_0='001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-07-27 00:03:19.304 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule]
FROM [GroupTypes] AS [g]
WHERE [g].[CharKhataNumber] = N'90'
2023-07-27 00:03:19.351 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[@__groupType_Id_0='2', @__ToUpper_1='NIC ASIA BANK' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[GroupTypeId] = @__groupType_Id_0 AND [l].[Name] = @__ToUpper_1
2023-07-27 00:03:19.355 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@p0='0' (Precision = 18) (Scale = 4), @p1=NULL (Precision = 5) (Scale = 2) (DbType = Decimal), @p2='2023-07-27T00:03:19.3516287+05:45', @p3='2', @p4=NULL (Size = 4000), @p5='True', @p6='False', @p7=NULL (DbType = Int32), @p8='NIC ASIA BANK' (Nullable = false) (Size = 450), @p9='एनआईसी एशिया बैंक' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Ledgers] ([CurrentBalance], [DepreciationRate], [EntryDate], [GroupTypeId], [HisabNumber], [IsBank], [IsSubLedgerActive], [LedgerCode], [Name], [NepaliName])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2023-07-27 00:03:19.361 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@p0='01234567896' (Nullable = false) (Size = 4000), @p1='Chitwan' (Nullable = false) (Size = 4000), @p2='2', @p3='001' (Nullable = false) (Size = 4000), @p4='10' (Nullable = true) (Precision = 5) (Scale = 2), @p5='76', @p6='NIC ASIA BANK' (Nullable = false) (Size = 450), @p7='एनआईसी एशिया बैंक' (Size = 4000), @p8='0' (Precision = 18) (Scale = 4)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [BankSetups] ([AccountNumber], [BankBranch], [BankTypeId], [BranchCode], [InterestRate], [LedgerId], [Name], [NepaliName], [TotalInterestBalance])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2023-07-27 00:03:19.363 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-07-27 00:03:19.364 +05:45 [INF] Executed action MicroFinance.Controllers.AccountSetup.AccountSetupController.CreateBankSetup (MicroFinance) in 2624.3512ms
2023-07-27 00:03:19.364 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.AccountSetup.AccountSetupController.CreateBankSetup (MicroFinance)'
2023-07-27 00:03:19.364 +05:45 [INF] HTTP POST /AccountSetup/creatBankSetup responded 200 in 2628.1585 ms
2023-07-27 00:03:19.365 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/AccountSetup/creatBankSetup application/json 221 - 200 - application/json;+charset=utf-8 2640.4735ms
2023-07-27 00:34:56.818 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 00:34:57.041 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:34:57.043 +05:45 [WRN] No store type was specified for the decimal property 'TransactionAmount' on entity type 'BaseTransaction'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:34:57.044 +05:45 [WRN] No store type was specified for the decimal property 'BalanceAfterTransaction' on entity type 'DepositAccountTransaction'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:34:57.667 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:34:57.668 +05:45 [WRN] No store type was specified for the decimal property 'TransactionAmount' on entity type 'BaseTransaction'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:34:57.668 +05:45 [WRN] No store type was specified for the decimal property 'BalanceAfterTransaction' on entity type 'DepositAccountTransaction'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:35:19.966 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 00:35:20.202 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:35:20.205 +05:45 [WRN] No store type was specified for the decimal property 'TransactionAmount' on entity type 'BaseTransaction'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:35:20.206 +05:45 [WRN] No store type was specified for the decimal property 'BalanceAfterTransaction' on entity type 'DepositAccountTransaction'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:35:21.700 +05:45 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:35:21.765 +05:45 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:35:21.775 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:35:21.778 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:35:21.814 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:35:21.854 +05:45 [INF] Applying migration '20230726184958_Transaction1.1'.
2023-07-27 00:35:22.143 +05:45 [INF] Executed DbCommand (67ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var0 sysname;
SELECT @var0 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositAccountTransactions]') AND [c].[name] = N'CollectedBy');
IF @var0 IS NOT NULL EXEC(N'ALTER TABLE [DepositAccountTransactions] DROP CONSTRAINT [' + @var0 + '];');
ALTER TABLE [DepositAccountTransactions] DROP COLUMN [CollectedBy];
2023-07-27 00:35:22.149 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [DepositAccountTransactions] ADD [CollectedByEmployeeId] int NULL;
2023-07-27 00:35:22.155 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230726184958_Transaction1.1', N'7.0.5');
2023-07-27 00:37:27.940 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 00:37:28.206 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:37:28.849 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:38:09.908 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 00:38:10.177 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:38:11.504 +05:45 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:38:11.584 +05:45 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:38:11.595 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:38:11.601 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:38:11.645 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:38:11.693 +05:45 [INF] Applying migration '20230726185229_Transaction1.2'.
2023-07-27 00:38:12.009 +05:45 [INF] Executed DbCommand (74ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var0 sysname;
SELECT @var0 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Transactions]') AND [c].[name] = N'TransactionAmount');
IF @var0 IS NOT NULL EXEC(N'ALTER TABLE [Transactions] DROP CONSTRAINT [' + @var0 + '];');
ALTER TABLE [Transactions] ALTER COLUMN [TransactionAmount] decimal(18,4) NOT NULL;
2023-07-27 00:38:12.056 +05:45 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var1 sysname;
SELECT @var1 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositAccountTransactions]') AND [c].[name] = N'BalanceAfterTransaction');
IF @var1 IS NOT NULL EXEC(N'ALTER TABLE [DepositAccountTransactions] DROP CONSTRAINT [' + @var1 + '];');
ALTER TABLE [DepositAccountTransactions] ALTER COLUMN [BalanceAfterTransaction] decimal(18,4) NOT NULL;
2023-07-27 00:38:12.063 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230726185229_Transaction1.2', N'7.0.5');
2023-07-27 00:41:59.675 +05:45 [INF] Executed DbCommand (111ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:41:59.930 +05:45 [INF] Executed DbCommand (108ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:41:59.953 +05:45 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:41:59.955 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:42:00.005 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:42:00.063 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:42:00.670 +05:45 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.019 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:42:01.021 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:42:01.023 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:42:01.025 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:42:01.030 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:42:01.031 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:42:01.471 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 00:42:01.503 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:42:01.689 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:42:01.693 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:42:01.696 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:42:01.698 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:42:01.709 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:42:01.717 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:42:01.727 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.738 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.748 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.768 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.785 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.793 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.801 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.809 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.815 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.822 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.843 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.850 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.857 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.865 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.872 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.882 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.891 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.899 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:01.906 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:42:02.164 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-07-27 00:42:02.456 +05:45 [INF] Now listening on: https://localhost:5001
2023-07-27 00:42:02.456 +05:45 [INF] Now listening on: http://localhost:5000
2023-07-27 00:42:02.464 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-07-27 00:42:02.466 +05:45 [INF] Hosting environment: Development
2023-07-27 00:42:02.466 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-07-27 00:42:18.704 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-07-27 00:42:19.180 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 482.0523ms
2023-07-27 00:42:19.589 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-07-27 00:42:20.208 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 618.4906ms
2023-07-27 00:42:54.489 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 235
2023-07-27 00:42:54.507 +05:45 [INF] CORS policy execution successful.
2023-07-27 00:42:54.543 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:42:54.676 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 00:42:54.695 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 5.0184ms
2023-07-27 00:42:54.698 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:42:54.703 +05:45 [ERR] HTTP POST /Transaction/makeDeposit responded 500 in 162.8111 ms
System.InvalidOperationException: Unable to resolve service for type 'MicroFinance.Services.Transactions.IDepositAccountTransactionService' while attempting to activate 'MicroFinance.Controllers.Transactions.TransactionController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)
   at lambda_method165(Closure , IServiceProvider , Object[] )
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass7_0.<CreateActivator>b__0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2023-07-27 00:42:54.874 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 235 - 401 - application/json 384.9455ms
2023-07-27 00:44:36.429 +05:45 [INF] Executed DbCommand (106ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:44:36.676 +05:45 [INF] Executed DbCommand (113ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:44:36.706 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:44:36.716 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:44:36.814 +05:45 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:44:36.866 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:44:37.462 +05:45 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:37.787 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:44:37.790 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:44:37.793 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:44:37.817 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:44:37.825 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:44:37.827 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:44:38.253 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 00:44:38.286 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:44:38.458 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:44:38.464 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:44:38.466 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:44:38.468 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:44:38.482 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:44:38.489 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:44:38.498 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.509 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.520 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.544 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.565 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.576 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.587 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.598 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.604 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.615 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.634 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.643 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.651 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.660 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.670 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.682 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.692 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.703 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.715 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:44:38.939 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-07-27 00:44:39.196 +05:45 [INF] Now listening on: https://localhost:5001
2023-07-27 00:44:39.196 +05:45 [INF] Now listening on: http://localhost:5000
2023-07-27 00:44:39.203 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-07-27 00:44:39.204 +05:45 [INF] Hosting environment: Development
2023-07-27 00:44:39.205 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-07-27 00:44:50.521 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 235
2023-07-27 00:44:50.611 +05:45 [INF] CORS policy execution successful.
2023-07-27 00:44:50.628 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:44:50.680 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 00:44:51.403 +05:45 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2023-07-27 00:44:51.481 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 791.6198ms
2023-07-27 00:44:51.483 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:44:51.488 +05:45 [INF] HTTP POST /Transaction/makeDeposit responded 400 in 862.1667 ms
2023-07-27 00:44:51.498 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 235 - 400 - application/problem+json;+charset=utf-8 982.3771ms
2023-07-27 00:45:45.364 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 240
2023-07-27 00:45:45.368 +05:45 [INF] CORS policy execution successful.
2023-07-27 00:45:45.369 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:45:45.370 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 00:45:45.373 +05:45 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2023-07-27 00:45:45.374 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 3.7985ms
2023-07-27 00:45:45.374 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:45:45.374 +05:45 [INF] HTTP POST /Transaction/makeDeposit responded 400 in 5.0002 ms
2023-07-27 00:45:45.375 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 240 - 400 - application/problem+json;+charset=utf-8 10.9413ms
2023-07-27 00:46:22.236 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 259
2023-07-27 00:46:22.247 +05:45 [INF] CORS policy execution successful.
2023-07-27 00:46:22.249 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:46:22.249 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 00:46:33.753 +05:45 [INF] Executed DbCommand (157ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CompanyCalendarCreationDate], [d0].[CompanyCalendarModificationDate], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CompanyCalendarCreationDate], [d1].[CompanyCalendarModificationDate], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureDate], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NomineeName], [d1].[OpeningDate], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
2023-07-27 00:47:23.534 +05:45 [INF] Executed DbCommand (106ms) [Parameters=[@__id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [b0].[Id], [b0].[Name]
FROM [BankSetups] AS [b]
INNER JOIN [Ledgers] AS [l] ON [b].[LedgerId] = [l].[Id]
INNER JOIN [BankTypes] AS [b0] ON [b].[BankTypeId] = [b0].[Id]
WHERE [b].[Id] = @__id_0
2023-07-27 00:47:29.189 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 66939.3216ms
2023-07-27 00:47:29.191 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:47:29.193 +05:45 [ERR] HTTP POST /Transaction/makeDeposit responded 500 in 66943.8083 ms
System.Exception: Provided Bank doesnot belong to your branch
   at MicroFinance.Services.Transactions.DepositAccountTransactionService.MakeDepositTransactionService(MakeDepositTransactionDto makeDepositTransactionDto, TokenDto decodedToken) in /media/ashish/New Volume/FinTechProject/MicroFinance/Services/Transactions/DepositAccountTransactionService.cs:line 56
   at MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit(MakeDepositTransactionDto makeDepositTransactionDto) in /media/ashish/New Volume/FinTechProject/MicroFinance/Controllers/Transactions/TransactionController.cs:line 37
   at lambda_method161(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2023-07-27 00:47:29.434 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 259 - 401 - application/json 67226.7760ms
2023-07-27 00:47:45.502 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 260
2023-07-27 00:47:45.514 +05:45 [INF] CORS policy execution successful.
2023-07-27 00:47:45.514 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:47:45.515 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 00:47:53.406 +05:45 [INF] Executed DbCommand (73ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CompanyCalendarCreationDate], [d0].[CompanyCalendarModificationDate], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CompanyCalendarCreationDate], [d1].[CompanyCalendarModificationDate], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureDate], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NomineeName], [d1].[OpeningDate], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
2023-07-27 00:47:59.039 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [b0].[Id], [b0].[Name]
FROM [BankSetups] AS [b]
INNER JOIN [Ledgers] AS [l] ON [b].[LedgerId] = [l].[Id]
INNER JOIN [BankTypes] AS [b0] ON [b].[BankTypeId] = [b0].[Id]
WHERE [b].[Id] = @__id_0
2023-07-27 00:48:06.487 +05:45 [INF] Executed DbCommand (48ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-07-27 00:48:06.738 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 21223.2003ms
2023-07-27 00:48:06.738 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:48:06.739 +05:45 [ERR] HTTP POST /Transaction/makeDeposit responded 500 in 21224.4743 ms
MicroFinance.Exceptions.UnAuthorizedExceptionHandler: Not authorized to act on given employee
   at MicroFinance.Services.UserManagement.EmployeeService.GetEmployeeByIdFromUserBranch(Int32 id, TokenDto decodedToken) in /media/ashish/New Volume/FinTechProject/MicroFinance/Services/UserManagement/EmployeeService.cs:line 497
   at MicroFinance.Services.Transactions.DepositAccountTransactionService.MakeDepositTransactionService(MakeDepositTransactionDto makeDepositTransactionDto, TokenDto decodedToken) in /media/ashish/New Volume/FinTechProject/MicroFinance/Services/Transactions/DepositAccountTransactionService.cs:line 60
   at MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit(MakeDepositTransactionDto makeDepositTransactionDto) in /media/ashish/New Volume/FinTechProject/MicroFinance/Controllers/Transactions/TransactionController.cs:line 37
   at lambda_method161(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2023-07-27 00:48:06.851 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 260 - 401 - application/json 21352.7351ms
2023-07-27 00:48:16.083 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 259
2023-07-27 00:48:16.084 +05:45 [INF] CORS policy execution successful.
2023-07-27 00:48:16.084 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:48:16.084 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 00:48:23.815 +05:45 [INF] Executed DbCommand (66ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CompanyCalendarCreationDate], [d0].[CompanyCalendarModificationDate], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CompanyCalendarCreationDate], [d1].[CompanyCalendarModificationDate], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureDate], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NomineeName], [d1].[OpeningDate], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
2023-07-27 00:48:29.392 +05:45 [INF] Executed DbCommand (25ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [b0].[Id], [b0].[Name]
FROM [BankSetups] AS [b]
INNER JOIN [Ledgers] AS [l] ON [b].[LedgerId] = [l].[Id]
INNER JOIN [BankTypes] AS [b0] ON [b].[BankTypeId] = [b0].[Id]
WHERE [b].[Id] = @__id_0
2023-07-27 00:48:36.507 +05:45 [INF] Executed DbCommand (43ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-07-27 00:49:54.559 +05:45 [INF] Executed DbCommand (107ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:49:54.806 +05:45 [INF] Executed DbCommand (115ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:49:54.816 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:49:54.827 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:49:54.882 +05:45 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:49:54.932 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:49:55.522 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:55.884 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:49:55.888 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:49:55.893 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:49:55.917 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:49:55.927 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:49:55.929 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:49:56.352 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 00:49:56.384 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:49:56.549 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:49:56.554 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:49:56.556 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:49:56.559 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:49:56.573 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:49:56.580 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:49:56.589 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.599 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.609 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.625 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.642 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.650 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.659 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.666 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.672 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.678 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.693 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.699 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.705 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.711 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.717 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.732 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.740 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.751 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.761 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:49:56.991 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-07-27 00:49:57.254 +05:45 [INF] Now listening on: https://localhost:5001
2023-07-27 00:49:57.254 +05:45 [INF] Now listening on: http://localhost:5000
2023-07-27 00:49:57.261 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-07-27 00:49:57.262 +05:45 [INF] Hosting environment: Development
2023-07-27 00:49:57.262 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-07-27 00:50:05.472 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 259
2023-07-27 00:50:05.567 +05:45 [INF] CORS policy execution successful.
2023-07-27 00:50:05.583 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:50:05.633 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 00:52:02.575 +05:45 [INF] Executed DbCommand (112ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:52:02.817 +05:45 [INF] Executed DbCommand (103ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:52:02.839 +05:45 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:52:02.841 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:52:02.888 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:52:02.940 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:52:03.544 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:03.895 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:52:03.897 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:52:03.919 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:52:03.921 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:52:03.926 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:52:03.928 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:52:04.376 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 00:52:04.412 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:52:04.597 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:52:04.602 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:52:04.605 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:52:04.606 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:52:04.612 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:52:04.619 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:52:04.629 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.646 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.658 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.680 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.704 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.714 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.723 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.729 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.736 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.743 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.759 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.766 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.772 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.778 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.786 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.798 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.806 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.815 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:04.823 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:52:05.102 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-07-27 00:52:05.379 +05:45 [INF] Now listening on: https://localhost:5001
2023-07-27 00:52:05.379 +05:45 [INF] Now listening on: http://localhost:5000
2023-07-27 00:52:05.386 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-07-27 00:52:05.408 +05:45 [INF] Hosting environment: Development
2023-07-27 00:52:05.408 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-07-27 00:52:14.407 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 259
2023-07-27 00:52:14.491 +05:45 [INF] CORS policy execution successful.
2023-07-27 00:52:14.511 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:52:14.567 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 00:52:25.436 +05:45 [INF] Executed DbCommand (203ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CompanyCalendarCreationDate], [d0].[CompanyCalendarModificationDate], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CompanyCalendarCreationDate], [d1].[CompanyCalendarModificationDate], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureDate], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NomineeName], [d1].[OpeningDate], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
2023-07-27 00:52:36.262 +05:45 [INF] Executed DbCommand (51ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [b0].[Id], [b0].[Name]
FROM [BankSetups] AS [b]
INNER JOIN [Ledgers] AS [l] ON [b].[LedgerId] = [l].[Id]
INNER JOIN [BankTypes] AS [b0] ON [b].[BankTypeId] = [b0].[Id]
WHERE [b].[Id] = @__id_0
2023-07-27 00:52:42.452 +05:45 [INF] Executed DbCommand (44ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-07-27 00:52:53.925 +05:45 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-07-27 00:52:58.597 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 44020.1042ms
2023-07-27 00:52:58.604 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:52:58.615 +05:45 [ERR] HTTP POST /Transaction/makeDeposit responded 500 in 44106.0609 ms
System.NullReferenceException: Object reference not set to an instance of an object.
   at MicroFinance.Services.Transactions.DepositAccountTransactionService.MakeDepositTransactionService(MakeDepositTransactionDto makeDepositTransactionDto, TokenDto decodedToken) in /media/ashish/New Volume/FinTechProject/MicroFinance/Services/Transactions/DepositAccountTransactionService.cs:line 64
   at MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit(MakeDepositTransactionDto makeDepositTransactionDto) in /media/ashish/New Volume/FinTechProject/MicroFinance/Controllers/Transactions/TransactionController.cs:line 37
   at lambda_method161(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2023-07-27 00:52:58.944 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 259 - 401 - application/json 44541.7821ms
2023-07-27 00:54:54.169 +05:45 [INF] Executed DbCommand (109ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:54:54.404 +05:45 [INF] Executed DbCommand (99ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:54:54.426 +05:45 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:54:54.428 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:54:54.472 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:54:54.526 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:54:55.100 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:55.467 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:54:55.469 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:54:55.472 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:54:55.474 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:54:55.479 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:54:55.480 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:54:55.895 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 00:54:55.926 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 00:54:56.095 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:54:56.099 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:54:56.101 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 00:54:56.103 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 00:54:56.108 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 00:54:56.116 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 00:54:56.122 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.130 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.137 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.152 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.165 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.172 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.177 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.182 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.186 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.191 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.202 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.206 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.210 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.215 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.218 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.226 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.233 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.239 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.244 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 00:54:56.444 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-07-27 00:54:56.699 +05:45 [INF] Now listening on: https://localhost:5001
2023-07-27 00:54:56.699 +05:45 [INF] Now listening on: http://localhost:5000
2023-07-27 00:54:56.705 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-07-27 00:54:56.707 +05:45 [INF] Hosting environment: Development
2023-07-27 00:54:56.707 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-07-27 00:55:08.743 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 259
2023-07-27 00:55:08.830 +05:45 [INF] CORS policy execution successful.
2023-07-27 00:55:08.847 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:55:08.895 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 00:55:18.597 +05:45 [INF] Executed DbCommand (124ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CompanyCalendarCreationDate], [d0].[CompanyCalendarModificationDate], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CompanyCalendarCreationDate], [d1].[CompanyCalendarModificationDate], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureDate], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NomineeName], [d1].[OpeningDate], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
2023-07-27 00:55:25.131 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [b0].[Id], [b0].[Name]
FROM [BankSetups] AS [b]
INNER JOIN [Ledgers] AS [l] ON [b].[LedgerId] = [l].[Id]
INNER JOIN [BankTypes] AS [b0] ON [b].[BankTypeId] = [b0].[Id]
WHERE [b].[Id] = @__id_0
2023-07-27 00:55:30.716 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-07-27 00:55:36.122 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-07-27 00:56:17.173 +05:45 [INF] 7/27/2023 12:56:16 AM: Depositing 1000 by admin on Deposit Account Id: 1
2023-07-27 00:56:30.906 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[@p0='One Thousand Only' (Size = 4000), @p1=NULL (Nullable = false) (Size = 4000), @p2='0001-01-01T00:00:00.0000000', @p3=NULL (DbType = DateTime2), @p4=NULL (Nullable = false) (Size = 4000), @p5=NULL (Nullable = false) (Size = 4000), @p6=NULL (Size = 4000), @p7=NULL (Size = 4000), @p8=NULL (Size = 4000), @p9='0001-01-01T00:00:00.0000000', @p10=NULL (DbType = DateTime2), @p11='Deposit Transaction done by user admin on Branch 000' (Size = 4000), @p12='1000' (Precision = 18) (Scale = 4), @p13=NULL (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([AmountInWords], [BranchCode], [CompanyCalendarCreationDate], [CompanyCalendarModificationDate], [CreatedBy], [CreatorId], [ModifiedBy], [ModifierBranchCode], [ModifierId], [RealWorldCreationDate], [RealWorldModificationDate], [Remarks], [TransactionAmount], [VoucherNumber])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2023-07-27 00:56:31.010 +05:45 [ERR] An exception occurred in the database while saving changes for context type 'MicroFinance.DBContext.ApplicationDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'BranchCode', table 'CompanyOperations.dbo.Transactions'; column does not allow nulls. INSERT fails.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)
   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderAsyncCallContext`1 context)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
ClientConnectionId:c142f649-0a0e-45e5-8503-9093c64ca0de
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'BranchCode', table 'CompanyOperations.dbo.Transactions'; column does not allow nulls. INSERT fails.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)
   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderAsyncCallContext`1 context)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
ClientConnectionId:c142f649-0a0e-45e5-8503-9093c64ca0de
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2023-07-27 00:56:31.207 +05:45 [ERR] 7/27/2023 12:56:31 AM: An error occurred while saving the entity changes. See the inner exception for details.
2023-07-27 00:56:31.420 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 82518.2391ms
2023-07-27 00:56:31.424 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 00:56:31.431 +05:45 [ERR] HTTP POST /Transaction/makeDeposit responded 500 in 82586.0972 ms
System.Exception: An error occurred while saving the entity changes. See the inner exception for details.
   at MicroFinance.Repository.Transaction.DepositAccountTransactionRepository.MakeDeposit(MakeDepositWrapper depositWrapper) in /media/ashish/New Volume/FinTechProject/MicroFinance/Repository/Transaction/DepositAccountTransactionRepository.cs:line 146
   at MicroFinance.Services.Transactions.DepositAccountTransactionService.MakeDepositTransactionService(MakeDepositTransactionDto makeDepositTransactionDto, TokenDto decodedToken) in /media/ashish/New Volume/FinTechProject/MicroFinance/Services/Transactions/DepositAccountTransactionService.cs:line 72
   at MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit(MakeDepositTransactionDto makeDepositTransactionDto) in /media/ashish/New Volume/FinTechProject/MicroFinance/Controllers/Transactions/TransactionController.cs:line 37
   at lambda_method161(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2023-07-27 00:56:31.679 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 259 - 401 - application/json 82944.1672ms
2023-07-27 01:17:48.061 +05:45 [INF] Executed DbCommand (122ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:17:48.306 +05:45 [INF] Executed DbCommand (99ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:17:48.331 +05:45 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:17:48.333 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:17:48.379 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:17:48.434 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:17:49.036 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:49.387 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:17:49.389 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:17:49.391 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:17:49.393 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:17:49.398 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:17:49.399 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:17:49.843 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 01:17:49.876 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 01:17:50.054 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:17:50.064 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:17:50.070 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:17:50.072 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:17:50.098 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:17:50.105 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:17:50.113 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.122 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.132 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.152 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.168 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.174 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.181 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.186 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.192 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.197 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.208 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.213 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.217 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.222 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.228 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.235 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.240 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.246 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.252 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:17:50.492 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-07-27 01:17:50.853 +05:45 [INF] Now listening on: https://localhost:5001
2023-07-27 01:17:50.853 +05:45 [INF] Now listening on: http://localhost:5000
2023-07-27 01:17:50.860 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-07-27 01:17:50.862 +05:45 [INF] Hosting environment: Development
2023-07-27 01:17:50.863 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-07-27 01:18:03.176 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 259
2023-07-27 01:18:03.277 +05:45 [INF] CORS policy execution successful.
2023-07-27 01:18:03.299 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 01:18:03.369 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 01:18:14.092 +05:45 [INF] Executed DbCommand (118ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CompanyCalendarCreationDate], [d0].[CompanyCalendarModificationDate], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CompanyCalendarCreationDate], [d1].[CompanyCalendarModificationDate], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureDate], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NomineeName], [d1].[OpeningDate], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
2023-07-27 01:18:21.167 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-07-27 01:18:23.405 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-07-27 01:18:34.756 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [b0].[Id], [b0].[Name]
FROM [BankSetups] AS [b]
INNER JOIN [Ledgers] AS [l] ON [b].[LedgerId] = [l].[Id]
INNER JOIN [BankTypes] AS [b0] ON [b].[BankTypeId] = [b0].[Id]
WHERE [b].[Id] = @__id_0
2023-07-27 01:21:21.249 +05:45 [INF] Executed DbCommand (112ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:21:21.484 +05:45 [INF] Executed DbCommand (99ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:21:21.537 +05:45 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:21:21.575 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:21:21.632 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:21:21.684 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:21:22.309 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:22.659 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:21:22.662 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:21:22.667 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:21:22.670 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:21:22.676 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:21:22.678 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:21:23.073 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 01:21:23.107 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 01:21:23.295 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:21:23.299 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:21:23.301 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:21:23.310 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:21:23.314 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:21:23.323 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:21:23.331 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.339 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.348 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.370 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.389 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.394 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.402 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.407 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.411 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.416 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.431 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.436 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.440 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.445 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.449 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.456 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.463 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.469 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.476 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:21:23.720 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-07-27 01:21:24.020 +05:45 [INF] Now listening on: https://localhost:5001
2023-07-27 01:21:24.020 +05:45 [INF] Now listening on: http://localhost:5000
2023-07-27 01:21:24.027 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-07-27 01:21:24.029 +05:45 [INF] Hosting environment: Development
2023-07-27 01:21:24.029 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-07-27 01:21:30.612 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 259
2023-07-27 01:21:30.705 +05:45 [INF] CORS policy execution successful.
2023-07-27 01:21:30.726 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 01:21:30.788 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 01:21:42.370 +05:45 [INF] Executed DbCommand (103ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CompanyCalendarCreationDate], [d0].[CompanyCalendarModificationDate], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CompanyCalendarCreationDate], [d1].[CompanyCalendarModificationDate], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureDate], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NomineeName], [d1].[OpeningDate], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
2023-07-27 01:21:49.089 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-07-27 01:21:52.027 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-07-27 01:21:59.471 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [b0].[Id], [b0].[Name]
FROM [BankSetups] AS [b]
INNER JOIN [Ledgers] AS [l] ON [b].[LedgerId] = [l].[Id]
INNER JOIN [BankTypes] AS [b0] ON [b].[BankTypeId] = [b0].[Id]
WHERE [b].[Id] = @__id_0
2023-07-27 01:22:19.723 +05:45 [INF] 7/27/2023 1:22:19 AM: Depositing 1000 by admin on Deposit Account Id: 1
2023-07-27 01:22:32.605 +05:45 [INF] Executed DbCommand (33ms) [Parameters=[@p0='One Thousand Only' (Size = 4000), @p1='000' (Nullable = false) (Size = 4000), @p2='0001-01-01T00:00:00.0000000', @p3=NULL (DbType = DateTime2), @p4=NULL (Nullable = false) (Size = 4000), @p5=NULL (Nullable = false) (Size = 4000), @p6=NULL (Size = 4000), @p7=NULL (Size = 4000), @p8=NULL (Size = 4000), @p9='0001-01-01T00:00:00.0000000', @p10=NULL (DbType = DateTime2), @p11='Deposit Transaction on DS-00000001' (Size = 4000), @p12='1000' (Precision = 18) (Scale = 4), @p13=NULL (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([AmountInWords], [BranchCode], [CompanyCalendarCreationDate], [CompanyCalendarModificationDate], [CreatedBy], [CreatorId], [ModifiedBy], [ModifierBranchCode], [ModifierId], [RealWorldCreationDate], [RealWorldModificationDate], [Remarks], [TransactionAmount], [VoucherNumber])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2023-07-27 01:22:32.770 +05:45 [ERR] An exception occurred in the database while saving changes for context type 'MicroFinance.DBContext.ApplicationDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'CreatedBy', table 'CompanyOperations.dbo.Transactions'; column does not allow nulls. INSERT fails.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)
   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderAsyncCallContext`1 context)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
ClientConnectionId:7cf45fce-2c52-4233-81d5-c4d966287fe6
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'CreatedBy', table 'CompanyOperations.dbo.Transactions'; column does not allow nulls. INSERT fails.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)
   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderAsyncCallContext`1 context)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
ClientConnectionId:7cf45fce-2c52-4233-81d5-c4d966287fe6
Error Number:515,State:2,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2023-07-27 01:22:32.996 +05:45 [ERR] 7/27/2023 1:22:32 AM: An error occurred while saving the entity changes. See the inner exception for details.
2023-07-27 01:22:33.251 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 62450.3721ms
2023-07-27 01:22:33.265 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 01:22:33.274 +05:45 [ERR] HTTP POST /Transaction/makeDeposit responded 500 in 62550.3778 ms
System.Exception: An error occurred while saving the entity changes. See the inner exception for details.
   at MicroFinance.Repository.Transaction.DepositAccountTransactionRepository.MakeDeposit(MakeDepositWrapper depositWrapper) in /media/ashish/New Volume/FinTechProject/MicroFinance/Repository/Transaction/DepositAccountTransactionRepository.cs:line 145
   at MicroFinance.Services.Transactions.DepositAccountTransactionService.MakeDepositTransactionService(MakeDepositTransactionDto makeDepositTransactionDto, TokenDto decodedToken) in /media/ashish/New Volume/FinTechProject/MicroFinance/Services/Transactions/DepositAccountTransactionService.cs:line 77
   at MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit(MakeDepositTransactionDto makeDepositTransactionDto) in /media/ashish/New Volume/FinTechProject/MicroFinance/Controllers/Transactions/TransactionController.cs:line 37
   at lambda_method161(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2023-07-27 01:22:33.563 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 259 - 401 - application/json 62958.2430ms
2023-07-27 01:28:46.055 +05:45 [INF] Executed DbCommand (109ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:28:46.297 +05:45 [INF] Executed DbCommand (115ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:28:46.320 +05:45 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:28:46.322 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:28:46.369 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:28:46.430 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:28:47.117 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:47.490 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:28:47.492 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:28:47.494 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:28:47.496 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:28:47.501 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:28:47.503 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:28:47.913 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 01:28:47.944 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 01:28:48.140 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:28:48.144 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:28:48.147 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:28:48.149 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:28:48.154 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:28:48.162 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:28:48.171 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.178 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.185 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.203 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.216 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.222 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.228 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.233 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.237 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.241 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.253 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.257 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.263 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.271 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.291 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.299 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.319 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.328 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.334 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:28:48.541 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-07-27 01:28:48.790 +05:45 [INF] Now listening on: https://localhost:5001
2023-07-27 01:28:48.791 +05:45 [INF] Now listening on: http://localhost:5000
2023-07-27 01:28:48.797 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-07-27 01:28:48.819 +05:45 [INF] Hosting environment: Development
2023-07-27 01:28:48.820 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-07-27 01:29:53.749 +05:45 [INF] Executed DbCommand (104ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:29:54.018 +05:45 [INF] Executed DbCommand (97ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:29:54.047 +05:45 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:29:54.054 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:29:54.106 +05:45 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:29:54.159 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:29:54.780 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.131 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:29:55.133 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:29:55.136 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:29:55.137 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:29:55.142 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:29:55.143 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:29:55.563 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 01:29:55.597 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 01:29:55.790 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:29:55.795 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:29:55.798 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:29:55.800 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:29:55.806 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:29:55.813 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:29:55.822 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.831 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.839 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.857 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.873 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.880 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.888 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.895 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.899 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.904 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.919 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.924 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.928 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.932 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.936 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.941 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.947 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.954 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:55.960 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:29:56.201 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-07-27 01:29:56.465 +05:45 [INF] Now listening on: https://localhost:5001
2023-07-27 01:29:56.466 +05:45 [INF] Now listening on: http://localhost:5000
2023-07-27 01:29:56.472 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-07-27 01:29:56.473 +05:45 [INF] Hosting environment: Development
2023-07-27 01:29:56.474 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-07-27 01:30:37.508 +05:45 [INF] Executed DbCommand (106ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:30:37.772 +05:45 [INF] Executed DbCommand (144ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:30:37.782 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:30:37.784 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:30:37.844 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:30:37.893 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:30:38.490 +05:45 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:38.784 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:30:38.786 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:30:38.788 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:30:38.790 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:30:38.796 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:30:38.797 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:30:39.211 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 01:30:39.242 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 01:30:39.408 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:30:39.413 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:30:39.415 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 01:30:39.417 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 01:30:39.423 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 01:30:39.432 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-07-27 01:30:39.441 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.451 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.470 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.489 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.505 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.513 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.522 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.529 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.536 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.542 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.558 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.564 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.570 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.577 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.583 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.592 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.599 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.606 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.613 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-27 01:30:39.796 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-07-27 01:30:40.049 +05:45 [INF] Now listening on: https://localhost:5001
2023-07-27 01:30:40.050 +05:45 [INF] Now listening on: http://localhost:5000
2023-07-27 01:30:40.056 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-07-27 01:30:40.057 +05:45 [INF] Hosting environment: Development
2023-07-27 01:30:40.057 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-07-27 01:30:49.174 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 259
2023-07-27 01:30:49.267 +05:45 [INF] CORS policy execution successful.
2023-07-27 01:30:49.286 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 01:30:49.347 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 01:30:59.463 +05:45 [INF] Executed DbCommand (203ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CompanyCalendarCreationDate], [d0].[CompanyCalendarModificationDate], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CompanyCalendarCreationDate], [d1].[CompanyCalendarModificationDate], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureDate], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NomineeName], [d1].[OpeningDate], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
2023-07-27 01:31:05.522 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-07-27 01:31:07.907 +05:45 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-07-27 01:31:14.511 +05:45 [INF] Executed DbCommand (55ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [b0].[Id], [b0].[Name]
FROM [BankSetups] AS [b]
INNER JOIN [Ledgers] AS [l] ON [b].[LedgerId] = [l].[Id]
INNER JOIN [BankTypes] AS [b0] ON [b].[BankTypeId] = [b0].[Id]
WHERE [b].[Id] = @__id_0
2023-07-27 01:31:48.888 +05:45 [INF] 7/27/2023 1:31:48 AM: Depositing 1000 by admin on Deposit Account Id: 1
2023-07-27 01:32:00.715 +05:45 [INF] Executed DbCommand (18ms) [Parameters=[@p0='One Thousand Only' (Size = 4000), @p1='000' (Nullable = false) (Size = 4000), @p2='2022-01-10T00:00:00.0000000', @p3=NULL (DbType = DateTime2), @p4='admin' (Nullable = false) (Size = 4000), @p5='8b327bb9-27f3-4eb0-b5ba-1d18166d1b26' (Nullable = false) (Size = 4000), @p6=NULL (Size = 4000), @p7=NULL (Size = 4000), @p8=NULL (Size = 4000), @p9='2023-07-27T01:31:23.5953062+05:45', @p10=NULL (DbType = DateTime2), @p11='Deposit Transaction on DS-00000001' (Size = 4000), @p12='1000' (Precision = 18) (Scale = 4), @p13=NULL (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([AmountInWords], [BranchCode], [CompanyCalendarCreationDate], [CompanyCalendarModificationDate], [CreatedBy], [CreatorId], [ModifiedBy], [ModifierBranchCode], [ModifierId], [RealWorldCreationDate], [RealWorldModificationDate], [Remarks], [TransactionAmount], [VoucherNumber])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2023-07-27 01:33:14.307 +05:45 [INF] Executed DbCommand (18ms) [Parameters=[@p14='3', @p0='One Thousand Only' (Size = 4000), @p1='000' (Nullable = false) (Size = 4000), @p2='2022-01-10T00:00:00.0000000', @p3=NULL (DbType = DateTime2), @p4='admin' (Nullable = false) (Size = 4000), @p5='8b327bb9-27f3-4eb0-b5ba-1d18166d1b26' (Nullable = false) (Size = 4000), @p6=NULL (Size = 4000), @p7=NULL (Size = 4000), @p8=NULL (Size = 4000), @p9='2023-07-27T01:31:23.5953062+05:45', @p10=NULL (DbType = DateTime2), @p11='Deposit Transaction on DS-00000001' (Size = 4000), @p12='1000' (Precision = 18) (Scale = 4), @p13='080/081VCH3000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Transactions] SET [AmountInWords] = @p0, [BranchCode] = @p1, [CompanyCalendarCreationDate] = @p2, [CompanyCalendarModificationDate] = @p3, [CreatedBy] = @p4, [CreatorId] = @p5, [ModifiedBy] = @p6, [ModifierBranchCode] = @p7, [ModifierId] = @p8, [RealWorldCreationDate] = @p9, [RealWorldModificationDate] = @p10, [Remarks] = @p11, [TransactionAmount] = @p12, [VoucherNumber] = @p13
OUTPUT 1
WHERE [Id] = @p14;
2023-07-27 01:34:55.025 +05:45 [INF] Executed DbCommand (71ms) [Parameters=[@__depositWrapper_DepositSchemeSubLedgerId_0='60'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [SubLedgers] AS [s]
INNER JOIN [Ledgers] AS [l] ON [s].[LedgerId] = [l].[Id]
WHERE [s].[Id] = @__depositWrapper_DepositSchemeSubLedgerId_0
2023-07-27 01:35:08.279 +05:45 [INF] Executed DbCommand (21ms) [Parameters=[@p0='1000.0000' (Precision = 18) (Scale = 4), @p1='123456' (Size = 4000), @p2='1' (Nullable = true), @p3='1' (Nullable = true), @p4='1', @p5='Cash Deposit: Ashish' (Size = 4000), @p6='2', @p7='1000 is deposited on DS-00000001' (Size = 4000), @p8='Salar' (Nullable = false) (Size = 4000), @p9='3', @p10='2', @p11=NULL (Size = 4000), @p12=NULL (DbType = Int32), @p14='1', @p13='1000.0000' (Precision = 18) (Scale = 4), @p15='1000.0000' (Precision = 18) (Scale = 4), @p16='75', @p17='Deposit Transaction of 1000 on DS-00000001' (Size = 4000), @p18='3', @p19='1', @p21='18', @p20='1000.0000' (Precision = 18) (Scale = 4), @p23='75', @p22='1000.0000' (Precision = 18) (Scale = 4), @p24='1000.0000' (Precision = 18) (Scale = 4), @p25='Deposit of 1000 on DS-00000001' (Size = 4000), @p26='60', @p27='3', @p28='2', @p30='60', @p29='1000.0000' (Precision = 18) (Scale = 4)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DepositAccountTransactions] ([BalanceAfterTransaction], [BankChequeNumber], [BankDetailId], [CollectedByEmployeeId], [DepositAccountId], [Narration], [PaymentType], [Remarks], [Source], [TransactionId], [TransactionType], [WithDrawalChequeNumber], [WithDrawalType])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12);
UPDATE [DepositAccounts] SET [PrincipalAmount] = @p13
OUTPUT 1
WHERE [Id] = @p14;
INSERT INTO [LedgerTransactions] ([BalanceAfterTransaction], [LedgerId], [Remarks], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p15, @p16, @p17, @p18, @p19);
UPDATE [Ledgers] SET [CurrentBalance] = @p20
OUTPUT 1
WHERE [Id] = @p21;
UPDATE [Ledgers] SET [CurrentBalance] = @p22
OUTPUT 1
WHERE [Id] = @p23;
INSERT INTO [SubLedgerTransactions] ([BalanceAfterTransaction], [Remarks], [SubLedgerId], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p24, @p25, @p26, @p27, @p28);
UPDATE [SubLedgers] SET [CurrentBalance] = @p29
OUTPUT 1
WHERE [Id] = @p30;
2023-07-27 01:35:11.751 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-07-27 01:35:11.948 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 262510.0274ms
2023-07-27 01:35:11.955 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 01:35:12.046 +05:45 [INF] HTTP POST /Transaction/makeDeposit responded 200 in 262701.8809 ms
2023-07-27 01:35:12.129 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 259 - 200 - application/json;+charset=utf-8 262961.7450ms
2023-07-27 01:40:35.547 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 208
2023-07-27 01:40:35.553 +05:45 [INF] CORS policy execution successful.
2023-07-27 01:40:35.555 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 01:40:35.555 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 01:40:51.023 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CompanyCalendarCreationDate], [d0].[CompanyCalendarModificationDate], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CompanyCalendarCreationDate], [d1].[CompanyCalendarModificationDate], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureDate], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NomineeName], [d1].[OpeningDate], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
2023-07-27 01:40:51.110 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-07-27 01:40:51.138 +05:45 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-07-27 01:40:51.141 +05:45 [INF] 7/27/2023 1:40:51 AM: Depositing 1000 by admin on Deposit Account Id: 1
2023-07-27 01:40:51.162 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@p0='One Thousand Only' (Size = 4000), @p1='000' (Nullable = false) (Size = 4000), @p2='2022-01-10T00:00:00.0000000', @p3=NULL (DbType = DateTime2), @p4='admin' (Nullable = false) (Size = 4000), @p5='8b327bb9-27f3-4eb0-b5ba-1d18166d1b26' (Nullable = false) (Size = 4000), @p6=NULL (Size = 4000), @p7=NULL (Size = 4000), @p8=NULL (Size = 4000), @p9='2023-07-27T01:40:51.1408269+05:45', @p10=NULL (DbType = DateTime2), @p11='Deposit Transaction on DS-00000001' (Size = 4000), @p12='1000' (Precision = 18) (Scale = 4), @p13=NULL (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([AmountInWords], [BranchCode], [CompanyCalendarCreationDate], [CompanyCalendarModificationDate], [CreatedBy], [CreatorId], [ModifiedBy], [ModifierBranchCode], [ModifierId], [RealWorldCreationDate], [RealWorldModificationDate], [Remarks], [TransactionAmount], [VoucherNumber])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2023-07-27 01:40:51.192 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@p14='4', @p0='One Thousand Only' (Size = 4000), @p1='000' (Nullable = false) (Size = 4000), @p2='2022-01-10T00:00:00.0000000', @p3=NULL (DbType = DateTime2), @p4='admin' (Nullable = false) (Size = 4000), @p5='8b327bb9-27f3-4eb0-b5ba-1d18166d1b26' (Nullable = false) (Size = 4000), @p6=NULL (Size = 4000), @p7=NULL (Size = 4000), @p8=NULL (Size = 4000), @p9='2023-07-27T01:40:51.1408269+05:45', @p10=NULL (DbType = DateTime2), @p11='Deposit Transaction on DS-00000001' (Size = 4000), @p12='1000' (Precision = 18) (Scale = 4), @p13='080/081VCH4000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Transactions] SET [AmountInWords] = @p0, [BranchCode] = @p1, [CompanyCalendarCreationDate] = @p2, [CompanyCalendarModificationDate] = @p3, [CreatedBy] = @p4, [CreatorId] = @p5, [ModifiedBy] = @p6, [ModifierBranchCode] = @p7, [ModifierId] = @p8, [RealWorldCreationDate] = @p9, [RealWorldModificationDate] = @p10, [Remarks] = @p11, [TransactionAmount] = @p12, [VoucherNumber] = @p13
OUTPUT 1
WHERE [Id] = @p14;
2023-07-27 01:40:51.219 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[@__depositWrapper_DepositSchemeSubLedgerId_0='60'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [SubLedgers] AS [s]
INNER JOIN [Ledgers] AS [l] ON [s].[LedgerId] = [l].[Id]
WHERE [s].[Id] = @__depositWrapper_DepositSchemeSubLedgerId_0
2023-07-27 01:40:51.264 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 1
2023-07-27 01:40:51.300 +05:45 [INF] Executed DbCommand (13ms) [Parameters=[@p0='2000.0000' (Precision = 18) (Scale = 4), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3='1' (Nullable = true), @p4='1', @p5='Cash Deposit: Ashish' (Size = 4000), @p6='1', @p7='1000 is deposited on DS-00000001' (Size = 4000), @p8='Salary' (Nullable = false) (Size = 4000), @p9='4', @p10='2', @p11=NULL (Size = 4000), @p12=NULL (DbType = Int32), @p14='1', @p13='2000.0000' (Precision = 18) (Scale = 4), @p15='1000.0000' (Precision = 18) (Scale = 4), @p16='1', @p17='Deposit Transaction of 1000 on DS-00000001' (Size = 4000), @p18='4', @p19='1', @p21='1', @p20='1000.0000' (Precision = 18) (Scale = 4), @p23='18', @p22='2000.0000' (Precision = 18) (Scale = 4), @p24='2000.0000' (Precision = 18) (Scale = 4), @p25='Deposit of 1000 on DS-00000001' (Size = 4000), @p26='60', @p27='4', @p28='2', @p30='60', @p29='2000.0000' (Precision = 18) (Scale = 4)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DepositAccountTransactions] ([BalanceAfterTransaction], [BankChequeNumber], [BankDetailId], [CollectedByEmployeeId], [DepositAccountId], [Narration], [PaymentType], [Remarks], [Source], [TransactionId], [TransactionType], [WithDrawalChequeNumber], [WithDrawalType])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12);
UPDATE [DepositAccounts] SET [PrincipalAmount] = @p13
OUTPUT 1
WHERE [Id] = @p14;
INSERT INTO [LedgerTransactions] ([BalanceAfterTransaction], [LedgerId], [Remarks], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p15, @p16, @p17, @p18, @p19);
UPDATE [Ledgers] SET [CurrentBalance] = @p20
OUTPUT 1
WHERE [Id] = @p21;
UPDATE [Ledgers] SET [CurrentBalance] = @p22
OUTPUT 1
WHERE [Id] = @p23;
INSERT INTO [SubLedgerTransactions] ([BalanceAfterTransaction], [Remarks], [SubLedgerId], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p24, @p25, @p26, @p27, @p28);
UPDATE [SubLedgers] SET [CurrentBalance] = @p29
OUTPUT 1
WHERE [Id] = @p30;
2023-07-27 01:40:51.309 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-07-27 01:40:51.310 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 15754.0512ms
2023-07-27 01:40:51.311 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 01:40:51.312 +05:45 [INF] HTTP POST /Transaction/makeDeposit responded 200 in 15756.8183 ms
2023-07-27 01:40:51.313 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 208 - 200 - application/json;+charset=utf-8 15766.5135ms
2023-07-27 08:13:05.560 +05:45 [ERR] 7/27/2023 8:13:05 AM: Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 0 - No such file or directory)
 ---> System.ComponentModel.Win32Exception (2): No such file or directory
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniError(TdsParserStateObject stateObj, UInt32 error)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ReadSniSyncOverAsync()
   at Microsoft.Data.SqlClient.TdsParserStateObject.TryReadNetworkPacket()
   at Microsoft.Data.SqlClient.TdsParser.ConsumePreLoginHandshake(SqlConnectionEncryptOption encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean& marsCapable, Boolean& fedAuthRequired, Boolean tlsFirst)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 94
ClientConnectionId:543b5c66-0ba6-418a-950c-5f1bc02d3419
Error Number:2,State:0,Class:20
2023-07-27 08:13:05.823 +05:45 [ERR] 7/27/2023 8:13:05 AM: Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 0 - No such file or directory)
 ---> System.ComponentModel.Win32Exception (2): No such file or directory
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 94
ClientConnectionId:543b5c66-0ba6-418a-950c-5f1bc02d3419
Error Number:2,State:0,Class:20
2023-07-27 08:13:05.888 +05:45 [ERR] 7/27/2023 8:13:05 AM: Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 0 - No such file or directory)
 ---> System.ComponentModel.Win32Exception (2): No such file or directory
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 94
ClientConnectionId:543b5c66-0ba6-418a-950c-5f1bc02d3419
Error Number:2,State:0,Class:20
2023-07-27 08:13:05.950 +05:45 [ERR] 7/27/2023 8:13:05 AM: Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 0 - No such file or directory)
 ---> System.ComponentModel.Win32Exception (2): No such file or directory
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.InternalOpenAsync(CancellationToken cancellationToken)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass20_0.<<ExistsAsync>b__0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.ExistsAsync(CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Program.<Main>$(String[] args) in /media/ashish/New Volume/FinTechProject/MicroFinance/Program.cs:line 94
ClientConnectionId:543b5c66-0ba6-418a-950c-5f1bc02d3419
Error Number:2,State:0,Class:20
2023-07-27 08:13:06.163 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-07-27 08:13:06.976 +05:45 [INF] Now listening on: https://localhost:5001
2023-07-27 08:13:06.976 +05:45 [INF] Now listening on: http://localhost:5000
2023-07-27 08:13:06.977 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-07-27 08:13:06.978 +05:45 [INF] Hosting environment: Development
2023-07-27 08:13:06.978 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-07-27 08:13:13.968 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-07-27 08:13:14.354 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 392.7642ms
2023-07-27 08:13:14.638 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-07-27 08:13:15.262 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 623.9134ms
2023-07-27 08:25:58.358 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit multipart/form-data;+boundary=----WebKitFormBoundaryH5Vyu5rrA4wUkREI 1006
2023-07-27 08:26:00.300 +05:45 [INF] CORS policy execution successful.
2023-07-27 08:26:00.373 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 08:26:00.439 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 08:26:04.932 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 4480.1214ms
2023-07-27 08:26:04.943 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 08:26:04.952 +05:45 [ERR] HTTP POST /Transaction/makeDeposit responded 500 in 4581.0110 ms
System.ArgumentNullException: IDX10000: The parameter 'token' cannot be a 'null' or an empty object.  (Parameter 'token')
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ReadJwtToken(String token)
   at MicroFinance.Token.TokenService.DecodeJWT(String token) in /media/ashish/New Volume/FinTechProject/MicroFinance/Token/TokenService.cs:line 52
   at MicroFinance.Controllers.Transactions.TransactionController.GetDecodedToken() in /media/ashish/New Volume/FinTechProject/MicroFinance/Controllers/Transactions/TransactionController.cs:line 29
   at MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit(MakeDepositTransactionDto makeDepositTransactionDto) in /media/ashish/New Volume/FinTechProject/MicroFinance/Controllers/Transactions/TransactionController.cs:line 36
   at lambda_method30(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2023-07-27 08:26:05.075 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit multipart/form-data;+boundary=----WebKitFormBoundaryH5Vyu5rrA4wUkREI 1006 - 401 - application/json 6717.5271ms
2023-07-27 08:26:32.936 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73
2023-07-27 08:26:32.952 +05:45 [INF] CORS policy execution successful.
2023-07-27 08:26:33.383 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-07-27 08:26:33.389 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-07-27 08:26:38.846 +05:45 [INF] Executed DbCommand (351ms) [Parameters=[@__userName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-07-27 08:26:39.422 +05:45 [INF] Executed DbCommand (25ms) [Parameters=[@__userName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-07-27 08:26:39.933 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 08:26:39.978 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 08:26:40.205 +05:45 [INF] Executed DbCommand (26ms) [Parameters=[@__branchCode_0='000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-07-27 08:26:40.297 +05:45 [INF] 7/27/2023 8:26:40 AM User Logged In > admin
2023-07-27 08:26:40.348 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-07-27 08:26:40.754 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.UserManagement.TokenResponseDto'.
2023-07-27 08:26:40.775 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 7385.1074ms
2023-07-27 08:26:40.777 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-07-27 08:26:40.779 +05:45 [INF] HTTP POST /FinanceCompany/login responded 200 in 7395.8901 ms
2023-07-27 08:26:40.807 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73 - 200 - application/json;+charset=utf-8 7870.5151ms
2023-07-27 08:26:59.113 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit multipart/form-data;+boundary=----WebKitFormBoundarymkMQO4k4rl0pa1tm 1006
2023-07-27 08:26:59.147 +05:45 [INF] CORS policy execution successful.
2023-07-27 08:26:59.151 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 08:26:59.153 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 08:27:01.357 +05:45 [INF] Executed DbCommand (36ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CompanyCalendarCreationDate], [d0].[CompanyCalendarModificationDate], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CompanyCalendarCreationDate], [d1].[CompanyCalendarModificationDate], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureDate], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NomineeName], [d1].[OpeningDate], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
2023-07-27 08:27:02.317 +05:45 [INF] Executed DbCommand (30ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-07-27 08:27:02.356 +05:45 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-07-27 08:27:02.442 +05:45 [INF] 7/27/2023 8:27:02 AM: Depositing 10000 by admin on Deposit Account Id: 1
2023-07-27 08:27:03.420 +05:45 [INF] Executed DbCommand (33ms) [Parameters=[@p0='Ten Thousand Only' (Size = 4000), @p1='000' (Nullable = false) (Size = 4000), @p2='2022-01-10T00:00:00.0000000', @p3=NULL (DbType = DateTime2), @p4='admin' (Nullable = false) (Size = 4000), @p5='8b327bb9-27f3-4eb0-b5ba-1d18166d1b26' (Nullable = false) (Size = 4000), @p6=NULL (Size = 4000), @p7=NULL (Size = 4000), @p8=NULL (Size = 4000), @p9='2023-07-27T08:27:02.4267053+05:45', @p10=NULL (DbType = DateTime2), @p11='Deposit Transaction on DS-00000001' (Size = 4000), @p12='10000' (Precision = 18) (Scale = 4), @p13=NULL (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([AmountInWords], [BranchCode], [CompanyCalendarCreationDate], [CompanyCalendarModificationDate], [CreatedBy], [CreatorId], [ModifiedBy], [ModifierBranchCode], [ModifierId], [RealWorldCreationDate], [RealWorldModificationDate], [Remarks], [TransactionAmount], [VoucherNumber])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2023-07-27 08:27:03.680 +05:45 [INF] Executed DbCommand (20ms) [Parameters=[@p14='5', @p0='Ten Thousand Only' (Size = 4000), @p1='000' (Nullable = false) (Size = 4000), @p2='2022-01-10T00:00:00.0000000', @p3=NULL (DbType = DateTime2), @p4='admin' (Nullable = false) (Size = 4000), @p5='8b327bb9-27f3-4eb0-b5ba-1d18166d1b26' (Nullable = false) (Size = 4000), @p6=NULL (Size = 4000), @p7=NULL (Size = 4000), @p8=NULL (Size = 4000), @p9='2023-07-27T08:27:02.4267053+05:45', @p10=NULL (DbType = DateTime2), @p11='Deposit Transaction on DS-00000001' (Size = 4000), @p12='10000' (Precision = 18) (Scale = 4), @p13='080/081VCH5000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Transactions] SET [AmountInWords] = @p0, [BranchCode] = @p1, [CompanyCalendarCreationDate] = @p2, [CompanyCalendarModificationDate] = @p3, [CreatedBy] = @p4, [CreatorId] = @p5, [ModifiedBy] = @p6, [ModifierBranchCode] = @p7, [ModifierId] = @p8, [RealWorldCreationDate] = @p9, [RealWorldModificationDate] = @p10, [Remarks] = @p11, [TransactionAmount] = @p12, [VoucherNumber] = @p13
OUTPUT 1
WHERE [Id] = @p14;
2023-07-27 08:27:03.881 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@__depositWrapper_DepositSchemeSubLedgerId_0='60'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [SubLedgers] AS [s]
INNER JOIN [Ledgers] AS [l] ON [s].[LedgerId] = [l].[Id]
WHERE [s].[Id] = @__depositWrapper_DepositSchemeSubLedgerId_0
2023-07-27 08:27:04.098 +05:45 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 1
2023-07-27 08:27:04.362 +05:45 [INF] Executed DbCommand (52ms) [Parameters=[@p0='12000.0000' (Precision = 18) (Scale = 4), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3='1' (Nullable = true), @p4='1', @p5='Cash Deposit: Ashish' (Size = 4000), @p6='1', @p7='10000 is deposited on DS-00000001' (Size = 4000), @p8='Salary Amount' (Nullable = false) (Size = 4000), @p9='5', @p10='2', @p11=NULL (Size = 4000), @p12=NULL (DbType = Int32), @p14='1', @p13='12000.0000' (Precision = 18) (Scale = 4), @p15='11000.0000' (Precision = 18) (Scale = 4), @p16='1', @p17='Deposit Transaction of 10000 on DS-00000001' (Size = 4000), @p18='5', @p19='1', @p21='1', @p20='11000.0000' (Precision = 18) (Scale = 4), @p23='18', @p22='12000.0000' (Precision = 18) (Scale = 4), @p24='12000.0000' (Precision = 18) (Scale = 4), @p25='Deposit of 10000 on DS-00000001' (Size = 4000), @p26='60', @p27='5', @p28='2', @p30='60', @p29='12000.0000' (Precision = 18) (Scale = 4)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DepositAccountTransactions] ([BalanceAfterTransaction], [BankChequeNumber], [BankDetailId], [CollectedByEmployeeId], [DepositAccountId], [Narration], [PaymentType], [Remarks], [Source], [TransactionId], [TransactionType], [WithDrawalChequeNumber], [WithDrawalType])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12);
UPDATE [DepositAccounts] SET [PrincipalAmount] = @p13
OUTPUT 1
WHERE [Id] = @p14;
INSERT INTO [LedgerTransactions] ([BalanceAfterTransaction], [LedgerId], [Remarks], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p15, @p16, @p17, @p18, @p19);
UPDATE [Ledgers] SET [CurrentBalance] = @p20
OUTPUT 1
WHERE [Id] = @p21;
UPDATE [Ledgers] SET [CurrentBalance] = @p22
OUTPUT 1
WHERE [Id] = @p23;
INSERT INTO [SubLedgerTransactions] ([BalanceAfterTransaction], [Remarks], [SubLedgerId], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p24, @p25, @p26, @p27, @p28);
UPDATE [SubLedgers] SET [CurrentBalance] = @p29
OUTPUT 1
WHERE [Id] = @p30;
2023-07-27 08:27:04.449 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-07-27 08:27:04.452 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 5297.9409ms
2023-07-27 08:27:04.453 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 08:27:04.453 +05:45 [INF] HTTP POST /Transaction/makeDeposit responded 200 in 5302.2555 ms
2023-07-27 08:27:04.454 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit multipart/form-data;+boundary=----WebKitFormBoundarymkMQO4k4rl0pa1tm 1006 - 200 - application/json;+charset=utf-8 5361.7694ms
2023-07-27 08:38:54.444 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit multipart/form-data;+boundary=----WebKitFormBoundaryG8uWB8vFKArOBeu6 1006
2023-07-27 08:38:54.444 +05:45 [INF] CORS policy execution successful.
2023-07-27 08:38:54.445 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 08:38:54.445 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 08:38:54.491 +05:45 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2023-07-27 08:38:54.512 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 66.2926ms
2023-07-27 08:38:54.512 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 08:38:54.513 +05:45 [INF] HTTP POST /Transaction/makeDeposit responded 400 in 68.0683 ms
2023-07-27 08:38:54.514 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit multipart/form-data;+boundary=----WebKitFormBoundaryG8uWB8vFKArOBeu6 1006 - 400 - application/problem+json;+charset=utf-8 69.9083ms
2023-07-27 08:39:12.447 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit multipart/form-data;+boundary=----WebKitFormBoundarycmcU7g6oD4DVMAEn 1013
2023-07-27 08:39:12.448 +05:45 [INF] CORS policy execution successful.
2023-07-27 08:39:12.448 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 08:39:12.449 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-07-27 08:39:15.076 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[Status], [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id], [d0].[BranchCode], [d0].[Calculation], [d0].[CompanyCalendarCreationDate], [d0].[CompanyCalendarModificationDate], [d0].[CreatedBy], [d0].[CreatorId], [d0].[DepositSubledgerId], [d0].[InterestRate], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy], [d0].[ModifierBranchCode], [d0].[ModifierId], [d0].[PostingScheme], [d0].[RealWorldCreationDate], [d0].[RealWorldModificationDate], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id], [d1].[AccountNumber], [d1].[AccountType], [d1].[BranchCode], [d1].[ClientId], [d1].[CompanyCalendarCreationDate], [d1].[CompanyCalendarModificationDate], [d1].[CreatedBy], [d1].[CreatorId], [d1].[DepositSchemeId], [d1].[Description], [d1].[ExpectedDailyDepositAmount], [d1].[ExpectedTotalDepositAmount], [d1].[ExpectedTotalDepositDay], [d1].[ExpectedTotalInterestAmount], [d1].[ExpectedTotalReturnAmount], [d1].[InterestAmount], [d1].[InterestPostingAccountNumberId], [d1].[InterestRate], [d1].[IsActive], [d1].[IsSMSServiceActive], [d1].[MatureDate], [d1].[MatureInterestPostingAccountNumberId], [d1].[ModifiedBy], [d1].[ModifierBranchCode], [d1].[ModifierId], [d1].[NomineeName], [d1].[OpeningDate], [d1].[Period], [d1].[PeriodType], [d1].[PrincipalAmount], [d1].[RealWorldCreationDate], [d1].[RealWorldModificationDate], [d1].[ReferredByEmployeeId], [d1].[Relation], [d1].[Status]
FROM [DepositAccounts] AS [d]
INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
2023-07-27 08:39:15.147 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-07-27 08:39:15.174 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-07-27 08:39:15.264 +05:45 [INF] Executed DbCommand (19ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [b0].[Id], [b0].[Name]
FROM [BankSetups] AS [b]
INNER JOIN [Ledgers] AS [l] ON [b].[LedgerId] = [l].[Id]
INNER JOIN [BankTypes] AS [b0] ON [b].[BankTypeId] = [b0].[Id]
WHERE [b].[Id] = @__id_0
2023-07-27 08:39:15.344 +05:45 [INF] 7/27/2023 8:39:15 AM: Depositing 10000 by admin on Deposit Account Id: 1
2023-07-27 08:39:15.376 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@p0='Ten Thousand Only' (Size = 4000), @p1='000' (Nullable = false) (Size = 4000), @p2='2022-01-10T00:00:00.0000000', @p3=NULL (DbType = DateTime2), @p4='admin' (Nullable = false) (Size = 4000), @p5='8b327bb9-27f3-4eb0-b5ba-1d18166d1b26' (Nullable = false) (Size = 4000), @p6=NULL (Size = 4000), @p7=NULL (Size = 4000), @p8=NULL (Size = 4000), @p9='2023-07-27T08:39:15.3433935+05:45', @p10=NULL (DbType = DateTime2), @p11='Deposit Transaction on DS-00000001' (Size = 4000), @p12='10000' (Precision = 18) (Scale = 4), @p13=NULL (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([AmountInWords], [BranchCode], [CompanyCalendarCreationDate], [CompanyCalendarModificationDate], [CreatedBy], [CreatorId], [ModifiedBy], [ModifierBranchCode], [ModifierId], [RealWorldCreationDate], [RealWorldModificationDate], [Remarks], [TransactionAmount], [VoucherNumber])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2023-07-27 08:39:15.409 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@p14='6', @p0='Ten Thousand Only' (Size = 4000), @p1='000' (Nullable = false) (Size = 4000), @p2='2022-01-10T00:00:00.0000000', @p3=NULL (DbType = DateTime2), @p4='admin' (Nullable = false) (Size = 4000), @p5='8b327bb9-27f3-4eb0-b5ba-1d18166d1b26' (Nullable = false) (Size = 4000), @p6=NULL (Size = 4000), @p7=NULL (Size = 4000), @p8=NULL (Size = 4000), @p9='2023-07-27T08:39:15.3433935+05:45', @p10=NULL (DbType = DateTime2), @p11='Deposit Transaction on DS-00000001' (Size = 4000), @p12='10000' (Precision = 18) (Scale = 4), @p13='080/081VCH6000' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Transactions] SET [AmountInWords] = @p0, [BranchCode] = @p1, [CompanyCalendarCreationDate] = @p2, [CompanyCalendarModificationDate] = @p3, [CreatedBy] = @p4, [CreatorId] = @p5, [ModifiedBy] = @p6, [ModifierBranchCode] = @p7, [ModifierId] = @p8, [RealWorldCreationDate] = @p9, [RealWorldModificationDate] = @p10, [Remarks] = @p11, [TransactionAmount] = @p12, [VoucherNumber] = @p13
OUTPUT 1
WHERE [Id] = @p14;
2023-07-27 08:39:15.457 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__depositWrapper_DepositSchemeSubLedgerId_0='60'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [SubLedgers] AS [s]
INNER JOIN [Ledgers] AS [l] ON [s].[LedgerId] = [l].[Id]
WHERE [s].[Id] = @__depositWrapper_DepositSchemeSubLedgerId_0
2023-07-27 08:39:15.499 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@p0='22000.0000' (Precision = 18) (Scale = 4), @p1='123456' (Size = 4000), @p2='1' (Nullable = true), @p3='1' (Nullable = true), @p4='1', @p5='Cash Deposit: Ashish' (Size = 4000), @p6='2', @p7='10000 is deposited on DS-00000001' (Size = 4000), @p8='Salary Amount' (Nullable = false) (Size = 4000), @p9='6', @p10='2', @p11=NULL (Size = 4000), @p12=NULL (DbType = Int32), @p14='1', @p13='22000.0000' (Precision = 18) (Scale = 4), @p15='11000.0000' (Precision = 18) (Scale = 4), @p16='75', @p17='Deposit Transaction of 10000 on DS-00000001' (Size = 4000), @p18='6', @p19='1', @p21='18', @p20='22000.0000' (Precision = 18) (Scale = 4), @p23='75', @p22='11000.0000' (Precision = 18) (Scale = 4), @p24='22000.0000' (Precision = 18) (Scale = 4), @p25='Deposit of 10000 on DS-00000001' (Size = 4000), @p26='60', @p27='6', @p28='2', @p30='60', @p29='22000.0000' (Precision = 18) (Scale = 4)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DepositAccountTransactions] ([BalanceAfterTransaction], [BankChequeNumber], [BankDetailId], [CollectedByEmployeeId], [DepositAccountId], [Narration], [PaymentType], [Remarks], [Source], [TransactionId], [TransactionType], [WithDrawalChequeNumber], [WithDrawalType])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12);
UPDATE [DepositAccounts] SET [PrincipalAmount] = @p13
OUTPUT 1
WHERE [Id] = @p14;
INSERT INTO [LedgerTransactions] ([BalanceAfterTransaction], [LedgerId], [Remarks], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p15, @p16, @p17, @p18, @p19);
UPDATE [Ledgers] SET [CurrentBalance] = @p20
OUTPUT 1
WHERE [Id] = @p21;
UPDATE [Ledgers] SET [CurrentBalance] = @p22
OUTPUT 1
WHERE [Id] = @p23;
INSERT INTO [SubLedgerTransactions] ([BalanceAfterTransaction], [Remarks], [SubLedgerId], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p24, @p25, @p26, @p27, @p28);
UPDATE [SubLedgers] SET [CurrentBalance] = @p29
OUTPUT 1
WHERE [Id] = @p30;
2023-07-27 08:39:15.513 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-07-27 08:39:15.514 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 3064.548ms
2023-07-27 08:39:15.514 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-07-27 08:39:15.514 +05:45 [INF] HTTP POST /Transaction/makeDeposit responded 200 in 3066.2307 ms
2023-07-27 08:39:15.515 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit multipart/form-data;+boundary=----WebKitFormBoundarycmcU7g6oD4DVMAEn 1013 - 200 - application/json;+charset=utf-8 3068.3603ms
2023-07-27 20:20:19.999 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 20:20:20.156 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 20:20:20.525 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 20:20:36.201 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-07-27 20:20:36.361 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-07-27 20:20:37.281 +05:45 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 20:20:37.318 +05:45 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 20:20:37.328 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-27 20:20:37.330 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-07-27 20:20:37.353 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-07-27 20:20:37.379 +05:45 [INF] Applying migration '20230727143520_Transaction1.3'.
2023-07-27 20:20:37.544 +05:45 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var0 sysname;
SELECT @var0 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Transactions]') AND [c].[name] = N'CompanyCalendarModificationDate');
IF @var0 IS NOT NULL EXEC(N'ALTER TABLE [Transactions] DROP CONSTRAINT [' + @var0 + '];');
ALTER TABLE [Transactions] ALTER COLUMN [CompanyCalendarModificationDate] nvarchar(max) NULL;
2023-07-27 20:20:37.581 +05:45 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var1 sysname;
SELECT @var1 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Transactions]') AND [c].[name] = N'CompanyCalendarCreationDate');
IF @var1 IS NOT NULL EXEC(N'ALTER TABLE [Transactions] DROP CONSTRAINT [' + @var1 + '];');
ALTER TABLE [Transactions] ALTER COLUMN [CompanyCalendarCreationDate] nvarchar(max) NOT NULL;
2023-07-27 20:20:37.608 +05:45 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var2 sysname;
SELECT @var2 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[JointAccounts]') AND [c].[name] = N'CompanyCalendarStartDate');
IF @var2 IS NOT NULL EXEC(N'ALTER TABLE [JointAccounts] DROP CONSTRAINT [' + @var2 + '];');
ALTER TABLE [JointAccounts] ALTER COLUMN [CompanyCalendarStartDate] nvarchar(max) NOT NULL;
2023-07-27 20:20:37.640 +05:45 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var3 sysname;
SELECT @var3 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[JointAccounts]') AND [c].[name] = N'CompanyCalendarEndDate');
IF @var3 IS NOT NULL EXEC(N'ALTER TABLE [JointAccounts] DROP CONSTRAINT [' + @var3 + '];');
ALTER TABLE [JointAccounts] ALTER COLUMN [CompanyCalendarEndDate] nvarchar(max) NULL;
2023-07-27 20:20:37.667 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var4 sysname;
SELECT @var4 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositSchemes]') AND [c].[name] = N'CompanyCalendarModificationDate');
IF @var4 IS NOT NULL EXEC(N'ALTER TABLE [DepositSchemes] DROP CONSTRAINT [' + @var4 + '];');
ALTER TABLE [DepositSchemes] ALTER COLUMN [CompanyCalendarModificationDate] nvarchar(max) NULL;
2023-07-27 20:20:37.689 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var5 sysname;
SELECT @var5 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositSchemes]') AND [c].[name] = N'CompanyCalendarCreationDate');
IF @var5 IS NOT NULL EXEC(N'ALTER TABLE [DepositSchemes] DROP CONSTRAINT [' + @var5 + '];');
ALTER TABLE [DepositSchemes] ALTER COLUMN [CompanyCalendarCreationDate] nvarchar(max) NOT NULL;
2023-07-27 20:20:37.714 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var6 sysname;
SELECT @var6 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositAccounts]') AND [c].[name] = N'OpeningDate');
IF @var6 IS NOT NULL EXEC(N'ALTER TABLE [DepositAccounts] DROP CONSTRAINT [' + @var6 + '];');
ALTER TABLE [DepositAccounts] ALTER COLUMN [OpeningDate] nvarchar(max) NOT NULL;
2023-07-27 20:20:37.737 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var7 sysname;
SELECT @var7 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositAccounts]') AND [c].[name] = N'MatureDate');
IF @var7 IS NOT NULL EXEC(N'ALTER TABLE [DepositAccounts] DROP CONSTRAINT [' + @var7 + '];');
ALTER TABLE [DepositAccounts] ALTER COLUMN [MatureDate] nvarchar(max) NOT NULL;
2023-07-27 20:20:37.761 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var8 sysname;
SELECT @var8 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositAccounts]') AND [c].[name] = N'CompanyCalendarModificationDate');
IF @var8 IS NOT NULL EXEC(N'ALTER TABLE [DepositAccounts] DROP CONSTRAINT [' + @var8 + '];');
ALTER TABLE [DepositAccounts] ALTER COLUMN [CompanyCalendarModificationDate] nvarchar(max) NULL;
2023-07-27 20:20:37.787 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var9 sysname;
SELECT @var9 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositAccounts]') AND [c].[name] = N'CompanyCalendarCreationDate');
IF @var9 IS NOT NULL EXEC(N'ALTER TABLE [DepositAccounts] DROP CONSTRAINT [' + @var9 + '];');
ALTER TABLE [DepositAccounts] ALTER COLUMN [CompanyCalendarCreationDate] nvarchar(max) NOT NULL;
2023-07-27 20:20:37.791 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230727143520_Transaction1.3', N'7.0.5');
