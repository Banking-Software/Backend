2023-08-07 17:56:58.021 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-07 17:56:58.136 +05:45 [WRN] The foreign key property 'ShareAccount.ClientId1' was created in shadow state because a conflicting property with the simple name 'ClientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-08-07 17:56:58.205 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 17:56:58.205 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 17:56:58.561 +05:45 [WRN] The foreign key property 'ShareAccount.ClientId1' was created in shadow state because a conflicting property with the simple name 'ClientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-08-07 17:56:58.576 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 17:56:58.576 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 17:57:36.354 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-07 17:57:36.444 +05:45 [WRN] The foreign key property 'ShareAccount.ClientId1' was created in shadow state because a conflicting property with the simple name 'ClientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-08-07 17:57:36.530 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 17:57:36.531 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 17:57:37.454 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 17:57:37.492 +05:45 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 17:57:37.498 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 17:57:37.500 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 17:57:37.521 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 17:57:37.545 +05:45 [INF] Applying migration '20230807121158_Share Transaction1.0'.
2023-08-07 17:57:37.698 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [DepositAccountTransactions] DROP CONSTRAINT [FK_DepositAccountTransactions_BankSetups_BankDetailId];
2023-08-07 17:57:37.703 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [ShareAccount] DROP CONSTRAINT [FK_ShareAccount_Clients_ClientId];
2023-08-07 17:57:37.706 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP INDEX [IX_DepositAccountTransactions_BankDetailId] ON [DepositAccountTransactions];
2023-08-07 17:57:37.710 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [ShareAccount] DROP CONSTRAINT [PK_ShareAccount];
2023-08-07 17:57:37.727 +05:45 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var0 sysname;
SELECT @var0 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositAccountTransactions]') AND [c].[name] = N'BankChequeNumber');
IF @var0 IS NOT NULL EXEC(N'ALTER TABLE [DepositAccountTransactions] DROP CONSTRAINT [' + @var0 + '];');
ALTER TABLE [DepositAccountTransactions] DROP COLUMN [BankChequeNumber];
2023-08-07 17:57:37.747 +05:45 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var1 sysname;
SELECT @var1 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositAccountTransactions]') AND [c].[name] = N'BankDetailId');
IF @var1 IS NOT NULL EXEC(N'ALTER TABLE [DepositAccountTransactions] DROP CONSTRAINT [' + @var1 + '];');
ALTER TABLE [DepositAccountTransactions] DROP COLUMN [BankDetailId];
2023-08-07 17:57:37.772 +05:45 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var2 sysname;
SELECT @var2 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[DepositAccountTransactions]') AND [c].[name] = N'PaymentType');
IF @var2 IS NOT NULL EXEC(N'ALTER TABLE [DepositAccountTransactions] DROP CONSTRAINT [' + @var2 + '];');
ALTER TABLE [DepositAccountTransactions] DROP COLUMN [PaymentType];
2023-08-07 17:57:38.079 +05:45 [INF] Executed DbCommand (307ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[ShareAccount]', N'ShareAccounts';
2023-08-07 17:57:38.081 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
EXEC sp_rename N'[ShareAccounts].[IX_ShareAccount_ClientId]', N'IX_ShareAccounts_ClientId', N'INDEX';
2023-08-07 17:57:38.083 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [Transactions] ADD [BankChequeNumber] nvarchar(max) NULL;
2023-08-07 17:57:38.084 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [Transactions] ADD [BankDetailId] int NULL;
2023-08-07 17:57:38.085 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [Transactions] ADD [PaymentType] int NULL;
2023-08-07 17:57:38.087 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [ShareAccounts] ADD [ClientId1] int NULL;
2023-08-07 17:57:38.090 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [ShareAccounts] ADD CONSTRAINT [PK_ShareAccounts] PRIMARY KEY ([Id]);
2023-08-07 17:57:38.092 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ShareKittas] (
    [Id] int NOT NULL IDENTITY,
    [PriceOfOneKitta] int NOT NULL,
    [CurrentKitta] decimal(18,2) NOT NULL,
    [IsActive] bit NOT NULL,
    CONSTRAINT [PK_ShareKittas] PRIMARY KEY ([Id])
);
2023-08-07 17:57:38.097 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ShareTransactions] (
    [Id] int NOT NULL IDENTITY,
    [ShareTransactionType] int NOT NULL,
    [TransactionType] int NOT NULL,
    [ShareCertificateNumber] nvarchar(max) NULL,
    [Narration] nvarchar(max) NULL,
    [Remarks] nvarchar(max) NULL,
    [TransactionId] int NOT NULL,
    [ShareAccountId] int NOT NULL,
    [TransferToDepositAccountId] int NULL,
    [PaymentDepositAccountId] int NULL,
    [BalanceAfterTransaction] decimal(18,4) NOT NULL,
    CONSTRAINT [PK_ShareTransactions] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_ShareTransactions_DepositAccounts_PaymentDepositAccountId] FOREIGN KEY ([PaymentDepositAccountId]) REFERENCES [DepositAccounts] ([Id]),
    CONSTRAINT [FK_ShareTransactions_DepositAccounts_TransferToDepositAccountId] FOREIGN KEY ([TransferToDepositAccountId]) REFERENCES [DepositAccounts] ([Id]),
    CONSTRAINT [FK_ShareTransactions_ShareAccounts_ShareAccountId] FOREIGN KEY ([ShareAccountId]) REFERENCES [ShareAccounts] ([Id]),
    CONSTRAINT [FK_ShareTransactions_Transactions_TransactionId] FOREIGN KEY ([TransactionId]) REFERENCES [Transactions] ([Id])
);
2023-08-07 17:57:38.106 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_Transactions_BankDetailId] ON [Transactions] ([BankDetailId]);
2023-08-07 17:57:38.108 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_ShareAccounts_ClientId1] ON [ShareAccounts] ([ClientId1]) WHERE [ClientId1] IS NOT NULL;
2023-08-07 17:57:38.110 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ShareTransactions_PaymentDepositAccountId] ON [ShareTransactions] ([PaymentDepositAccountId]);
2023-08-07 17:57:38.112 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ShareTransactions_ShareAccountId] ON [ShareTransactions] ([ShareAccountId]);
2023-08-07 17:57:38.113 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_ShareTransactions_TransactionId] ON [ShareTransactions] ([TransactionId]);
2023-08-07 17:57:38.115 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ShareTransactions_TransferToDepositAccountId] ON [ShareTransactions] ([TransferToDepositAccountId]);
2023-08-07 17:57:38.118 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [ShareAccounts] ADD CONSTRAINT [FK_ShareAccounts_Clients_ClientId] FOREIGN KEY ([ClientId]) REFERENCES [Clients] ([Id]);
2023-08-07 17:57:38.120 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [ShareAccounts] ADD CONSTRAINT [FK_ShareAccounts_Clients_ClientId1] FOREIGN KEY ([ClientId1]) REFERENCES [Clients] ([Id]);
2023-08-07 17:57:38.125 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [Transactions] ADD CONSTRAINT [FK_Transactions_BankSetups_BankDetailId] FOREIGN KEY ([BankDetailId]) REFERENCES [BankSetups] ([Id]);
2023-08-07 17:57:38.127 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230807121158_Share Transaction1.0', N'7.0.5');
2023-08-07 18:02:31.389 +05:45 [INF] Executed DbCommand (63ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 18:02:31.518 +05:45 [INF] Executed DbCommand (57ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 18:02:31.533 +05:45 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 18:02:31.534 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 18:02:31.563 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 18:02:31.600 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 18:02:31.985 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.296 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 18:02:32.299 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 18:02:32.301 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 18:02:32.302 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 18:02:32.312 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 18:02:32.315 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 18:02:32.595 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-07 18:02:32.611 +05:45 [WRN] The foreign key property 'ShareAccount.ClientId1' was created in shadow state because a conflicting property with the simple name 'ClientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-08-07 18:02:32.625 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 18:02:32.626 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 18:02:32.769 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 18:02:32.771 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 18:02:32.772 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 18:02:32.774 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 18:02:32.777 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 18:02:32.782 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 18:02:32.789 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.797 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.805 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.819 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.831 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.836 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.843 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.849 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.854 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.860 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.870 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.875 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.879 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.884 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.889 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.897 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.903 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.908 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:32.916 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:02:33.076 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-07 18:02:33.107 +05:45 [INF] Creating key {6a9b483c-c445-4848-9912-249d30a2d961} with creation date 2023-08-07 12:17:33Z, activation date 2023-08-08 18:40:23Z, and expiration date 2023-11-05 12:17:33Z.
2023-08-07 18:02:33.111 +05:45 [WRN] No XML encryptor configured. Key {6a9b483c-c445-4848-9912-249d30a2d961} may be persisted to storage in unencrypted form.
2023-08-07 18:02:33.113 +05:45 [INF] Writing data to file '/home/ashish/.aspnet/DataProtection-Keys/key-6a9b483c-c445-4848-9912-249d30a2d961.xml'.
2023-08-07 18:02:33.264 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-07 18:02:33.264 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-07 18:02:33.268 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-07 18:02:33.270 +05:45 [INF] Hosting environment: Development
2023-08-07 18:02:33.270 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-07 18:02:43.559 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-07 18:02:43.609 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 401 0 - 52.8029ms
2023-08-07 18:02:50.550 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-07 18:02:50.766 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 215.4849ms
2023-08-07 18:02:50.845 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui-bundle.js - -
2023-08-07 18:02:51.024 +05:45 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-08-07 18:02:51.036 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui-bundle.js - - - 200 1092889 application/javascript 191.8463ms
2023-08-07 18:02:51.235 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-07 18:02:51.631 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 396.0835ms
2023-08-07 18:03:33.538 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73
2023-08-07 18:03:33.542 +05:45 [INF] CORS policy execution successful.
2023-08-07 18:03:33.775 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-07 18:03:33.806 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-08-07 18:03:34.456 +05:45 [INF] Executed DbCommand (61ms) [Parameters=[@__userName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-07 18:03:34.695 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__userName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-07 18:03:34.741 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[@__branchCode_0='001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-07 18:03:34.806 +05:45 [WRN] Invalid password for user.
2023-08-07 18:03:34.808 +05:45 [WRN] User failed to provide the correct password.
2023-08-07 18:03:34.826 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-08-07 18:03:35.020 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@p22='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p23='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Double), @p5='?' (Size = 256), @p6='?' (DbType = Boolean), @p7='?' (DbType = Int32), @p8='?' (DbType = Boolean), @p9='?' (DbType = Double), @p10='?' (DbType = Boolean), @p11='?' (DbType = DateTimeOffset), @p12='?' (Size = 4000), @p13='?' (DbType = DateTime2), @p14='?' (Size = 256), @p15='?' (Size = 256), @p16='?' (Size = 4000), @p17='?' (Size = 4000), @p18='?' (DbType = Boolean), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [CreatedBy] = @p2, [CreatedOn] = @p3, [DepositLimit] = @p4, [Email] = @p5, [EmailConfirmed] = @p6, [EmployeeId] = @p7, [IsActive] = @p8, [LoanLimit] = @p9, [LockoutEnabled] = @p10, [LockoutEnd] = @p11, [ModifiedBy] = @p12, [ModifiedOn] = @p13, [NormalizedEmail] = @p14, [NormalizedUserName] = @p15, [PasswordHash] = @p16, [PhoneNumber] = @p17, [PhoneNumberConfirmed] = @p18, [SecurityStamp] = @p19, [TwoFactorEnabled] = @p20, [UserName] = @p21
OUTPUT 1
WHERE [Id] = @p22 AND [ConcurrencyStamp] = @p23;
2023-08-07 18:03:35.050 +05:45 [ERR] 8/7/2023 6:03:35 PM Invalid Login Failed > admin
2023-08-07 18:03:35.258 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 1445.5413ms
2023-08-07 18:03:35.260 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-07 18:03:35.349 +05:45 [INF] HTTP POST /FinanceCompany/login responded 401 in 1800.9449 ms
2023-08-07 18:03:35.363 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73 - 401 - application/json 1825.5181ms
2023-08-07 18:03:42.781 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 74
2023-08-07 18:03:42.785 +05:45 [INF] CORS policy execution successful.
2023-08-07 18:03:42.786 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-07 18:03:42.786 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-08-07 18:03:42.811 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__userName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-07 18:03:42.888 +05:45 [INF] Executed DbCommand (28ms) [Parameters=[@__userName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-07 18:03:42.964 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-07 18:03:42.998 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-08-07 18:03:43.055 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[@p22='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p23='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Double), @p5='?' (Size = 256), @p6='?' (DbType = Boolean), @p7='?' (DbType = Int32), @p8='?' (DbType = Boolean), @p9='?' (DbType = Double), @p10='?' (DbType = Boolean), @p11='?' (DbType = DateTimeOffset), @p12='?' (Size = 4000), @p13='?' (DbType = DateTime2), @p14='?' (Size = 256), @p15='?' (Size = 256), @p16='?' (Size = 4000), @p17='?' (Size = 4000), @p18='?' (DbType = Boolean), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [CreatedBy] = @p2, [CreatedOn] = @p3, [DepositLimit] = @p4, [Email] = @p5, [EmailConfirmed] = @p6, [EmployeeId] = @p7, [IsActive] = @p8, [LoanLimit] = @p9, [LockoutEnabled] = @p10, [LockoutEnd] = @p11, [ModifiedBy] = @p12, [ModifiedOn] = @p13, [NormalizedEmail] = @p14, [NormalizedUserName] = @p15, [PasswordHash] = @p16, [PhoneNumber] = @p17, [PhoneNumberConfirmed] = @p18, [SecurityStamp] = @p19, [TwoFactorEnabled] = @p20, [UserName] = @p21
OUTPUT 1
WHERE [Id] = @p22 AND [ConcurrencyStamp] = @p23;
2023-08-07 18:03:43.064 +05:45 [INF] 8/7/2023 6:03:43 PM User Logged In > admin
2023-08-07 18:03:43.108 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-08-07 18:03:43.277 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.UserManagement.TokenResponseDto'.
2023-08-07 18:03:43.286 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 499.3852ms
2023-08-07 18:03:43.286 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-07 18:03:43.286 +05:45 [INF] HTTP POST /FinanceCompany/login responded 200 in 500.7287 ms
2023-08-07 18:03:43.287 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 74 - 200 - application/json;+charset=utf-8 506.2659ms
2023-08-07 18:34:24.681 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 213
2023-08-07 18:34:24.682 +05:45 [INF] CORS policy execution successful.
2023-08-07 18:34:24.683 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-08-07 18:34:24.694 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 18:35:18.074 +05:45 [INF] Executed DbCommand (33ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-08-07 18:35:21.412 +05:45 [INF] Executed DbCommand (36ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccountNumber], [t].[AccountType], [t].[BranchCode], [t].[ClientId], [t].[CompanyCalendarCreationDate], [t].[CompanyCalendarModificationDate], [t].[CreatedBy], [t].[CreatorId], [t].[DepositSchemeId], [t].[Description], [t].[ExpectedDailyDepositAmount], [t].[ExpectedTotalDepositAmount], [t].[ExpectedTotalDepositDay], [t].[ExpectedTotalInterestAmount], [t].[ExpectedTotalReturnAmount], [t].[InterestAmount], [t].[InterestPostingAccountNumberId], [t].[InterestRate], [t].[IsActive], [t].[IsSMSServiceActive], [t].[MatureDate], [t].[MatureInterestPostingAccountNumberId], [t].[ModifiedBy], [t].[ModifierBranchCode], [t].[ModifierId], [t].[NomineeName], [t].[OpeningDate], [t].[Period], [t].[PeriodType], [t].[PrincipalAmount], [t].[RealWorldCreationDate], [t].[RealWorldModificationDate], [t].[ReferredByEmployeeId], [t].[Relation], [t].[SignatureFileData], [t].[SignatureFileName], [t].[SignatureFileType], [t].[Status], [t].[Id0], [t].[BranchCode0], [t].[ClientAccountPurposeNepali], [t].[ClientCastCode], [t].[ClientCitizenShipIssueDate], [t].[ClientCitizenShipIssueDistrict], [t].[ClientCitizenshipFileData], [t].[ClientCitizenshipFileName], [t].[ClientCitizenshipFileType], [t].[ClientCitizenshipNumber], [t].[ClientDateOfBirth], [t].[ClientEducationStatus], [t].[ClientEmail], [t].[ClientFatherInLaw], [t].[ClientFatherName], [t].[ClientFatherNameNepali], [t].[ClientFirstName], [t].[ClientGenderCode], [t].[ClientGrandFatherName], [t].[ClientGrandFatherNameNepali], [t].[ClientGroupId], [t].[ClientId0], [t].[ClientIfMemberOfOtherParty], [t].[ClientIncomeSource], [t].[ClientLastName], [t].[ClientMartialStatusCode], [t].[ClientMiddleName], [t].[ClientMobileNumber1], [t].[ClientMobileNumber2], [t].[ClientMotherInLaw], [t].[ClientMotherName], [t].[ClientMotherNameNepali], [t].[ClientNameOfDaughters], [t].[ClientNameOfSons], [t].[ClientNationality], [t].[ClientNationalityIdStatus], [t].[ClientNepaliName], [t].[ClientOccupation], [t].[ClientOtherInfo], [t].[ClientOtherInfo2], [t].[ClientPanNumber], [t].[ClientPhotoFileData], [t].[ClientPhotoFileName], [t].[ClientPhotoFileType], [t].[ClientShareTypeInfoId], [t].[ClientSignatureFileData], [t].[ClientSignatureFileName], [t].[ClientSignatureFileType], [t].[ClientSpouseName], [t].[ClientSpouseOccupation], [t].[ClientTelephoneNumber1], [t].[ClientTelephoneNumber2], [t].[ClientTypeId], [t].[ClientUnitId], [t].[ClientVotingId], [t].[ClientWebsite], [t].[CreatedBy0], [t].[CreatedOn], [t].[CreatorId0], [t].[IsActive0], [t].[IsKYMUpdated], [t].[IsModified], [t].[IsShareAllowed], [t].[KYMTypeId], [t].[ModificationCount], [t].[ModifiedBy0], [t].[ModifiedOn], [t].[ModifierId0], [t].[NomineeAddress], [t].[NomineeCitizenshipNumber], [t].[NomineeContactNumber], [t].[NomineeIntroducedBy], [t].[NomineeName0], [t].[NomineeNepaliName], [t].[NomineeNepaliRelation], [t].[NomineePhotoFileData], [t].[NomineePhotoFileName], [t].[NomineePhotoFileType], [t].[NomineeRelation], [t].[PermanentDistrictCode], [t].[PermanentStateCode], [t].[PermanentToleVillage], [t].[PermanentToleVillageNepali], [t].[PermanentVdcMunicipality], [t].[PermanentVdcMunicipalityNepali], [t].[PermanentWardNumber], [t].[PermanentWardNumberNepali], [t].[RegistrationDate], [t].[TemporaryDistrictCode], [t].[TemporaryStateCode], [t].[TemporaryToleVillage], [t].[TemporaryToleVillageNepali], [t].[TemporaryVdcMunicipality], [t].[TemporaryVdcMunicipalityNepali], [t].[TemporaryWardNumber], [t].[TemporaryWardNumberNepali], [t].[Id1], [t].[BranchCode1], [t].[Calculation], [t].[CompanyCalendarCreationDate0], [t].[CompanyCalendarModificationDate0], [t].[CreatedBy1], [t].[CreatorId1], [t].[DepositSubledgerId], [t].[InterestRate0], [t].[InterestRateOnMinimumBalance], [t].[InterestSubLedgerId], [t].[IsActive1], [t].[MaximumInterestRate], [t].[MinimumBalance], [t].[MinimumInterestRate], [t].[ModifiedBy1], [t].[ModifierBranchCode0], [t].[ModifierId1], [t].[PostingScheme], [t].[RealWorldCreationDate0], [t].[RealWorldModificationDate0], [t].[SchemeName], [t].[SchemeNameNepali], [t].[SchemeTypeId], [t].[Symbol], [t].[TaxSubledgerId], [t].[Id2], [t].[AccountNumber0], [t].[AccountType0], [t].[BranchCode2], [t].[ClientId1], [t].[CompanyCalendarCreationDate1], [t].[CompanyCalendarModificationDate1], [t].[CreatedBy2], [t].[CreatorId2], [t].[DepositSchemeId0], [t].[Description0], [t].[ExpectedDailyDepositAmount0], [t].[ExpectedTotalDepositAmount0], [t].[ExpectedTotalDepositDay0], [t].[ExpectedTotalInterestAmount0], [t].[ExpectedTotalReturnAmount0], [t].[InterestAmount0], [t].[InterestPostingAccountNumberId0], [t].[InterestRate1], [t].[IsActive2], [t].[IsSMSServiceActive0], [t].[MatureDate0], [t].[MatureInterestPostingAccountNumberId0], [t].[ModifiedBy2], [t].[ModifierBranchCode1], [t].[ModifierId2], [t].[NomineeName1], [t].[OpeningDate0], [t].[Period0], [t].[PeriodType0], [t].[PrincipalAmount0], [t].[RealWorldCreationDate1], [t].[RealWorldModificationDate1], [t].[ReferredByEmployeeId0], [t].[Relation0], [t].[SignatureFileData0], [t].[SignatureFileName0], [t].[SignatureFileType0], [t].[Status0], [t0].[Id], [t0].[CompanyCalendarEndDate], [t0].[CompanyCalendarStartDate], [t0].[DepositAccountId], [t0].[JointClientId], [t0].[RealWorldEndDate], [t0].[RealWorldStartDate], [t0].[Id0], [t0].[BranchCode], [t0].[ClientAccountPurposeNepali], [t0].[ClientCastCode], [t0].[ClientCitizenShipIssueDate], [t0].[ClientCitizenShipIssueDistrict], [t0].[ClientCitizenshipFileData], [t0].[ClientCitizenshipFileName], [t0].[ClientCitizenshipFileType], [t0].[ClientCitizenshipNumber], [t0].[ClientDateOfBirth], [t0].[ClientEducationStatus], [t0].[ClientEmail], [t0].[ClientFatherInLaw], [t0].[ClientFatherName], [t0].[ClientFatherNameNepali], [t0].[ClientFirstName], [t0].[ClientGenderCode], [t0].[ClientGrandFatherName], [t0].[ClientGrandFatherNameNepali], [t0].[ClientGroupId], [t0].[ClientId], [t0].[ClientIfMemberOfOtherParty], [t0].[ClientIncomeSource], [t0].[ClientLastName], [t0].[ClientMartialStatusCode], [t0].[ClientMiddleName], [t0].[ClientMobileNumber1], [t0].[ClientMobileNumber2], [t0].[ClientMotherInLaw], [t0].[ClientMotherName], [t0].[ClientMotherNameNepali], [t0].[ClientNameOfDaughters], [t0].[ClientNameOfSons], [t0].[ClientNationality], [t0].[ClientNationalityIdStatus], [t0].[ClientNepaliName], [t0].[ClientOccupation], [t0].[ClientOtherInfo], [t0].[ClientOtherInfo2], [t0].[ClientPanNumber], [t0].[ClientPhotoFileData], [t0].[ClientPhotoFileName], [t0].[ClientPhotoFileType], [t0].[ClientShareTypeInfoId], [t0].[ClientSignatureFileData], [t0].[ClientSignatureFileName], [t0].[ClientSignatureFileType], [t0].[ClientSpouseName], [t0].[ClientSpouseOccupation], [t0].[ClientTelephoneNumber1], [t0].[ClientTelephoneNumber2], [t0].[ClientTypeId], [t0].[ClientUnitId], [t0].[ClientVotingId], [t0].[ClientWebsite], [t0].[CreatedBy], [t0].[CreatedOn], [t0].[CreatorId], [t0].[IsActive], [t0].[IsKYMUpdated], [t0].[IsModified], [t0].[IsShareAllowed], [t0].[KYMTypeId], [t0].[ModificationCount], [t0].[ModifiedBy], [t0].[ModifiedOn], [t0].[ModifierId], [t0].[NomineeAddress], [t0].[NomineeCitizenshipNumber], [t0].[NomineeContactNumber], [t0].[NomineeIntroducedBy], [t0].[NomineeName], [t0].[NomineeNepaliName], [t0].[NomineeNepaliRelation], [t0].[NomineePhotoFileData], [t0].[NomineePhotoFileName], [t0].[NomineePhotoFileType], [t0].[NomineeRelation], [t0].[PermanentDistrictCode], [t0].[PermanentStateCode], [t0].[PermanentToleVillage], [t0].[PermanentToleVillageNepali], [t0].[PermanentVdcMunicipality], [t0].[PermanentVdcMunicipalityNepali], [t0].[PermanentWardNumber], [t0].[PermanentWardNumberNepali], [t0].[RegistrationDate], [t0].[TemporaryDistrictCode], [t0].[TemporaryStateCode], [t0].[TemporaryToleVillage], [t0].[TemporaryToleVillageNepali], [t0].[TemporaryVdcMunicipality], [t0].[TemporaryVdcMunicipalityNepali], [t0].[TemporaryWardNumber], [t0].[TemporaryWardNumberNepali]
FROM (
    SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id] AS [Id0], [c].[BranchCode] AS [BranchCode0], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId] AS [ClientId0], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy] AS [CreatedBy0], [c].[CreatedOn], [c].[CreatorId] AS [CreatorId0], [c].[IsActive] AS [IsActive0], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy] AS [ModifiedBy0], [c].[ModifiedOn], [c].[ModifierId] AS [ModifierId0], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName] AS [NomineeName0], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id] AS [Id1], [d0].[BranchCode] AS [BranchCode1], [d0].[Calculation], [d0].[CompanyCalendarCreationDate] AS [CompanyCalendarCreationDate0], [d0].[CompanyCalendarModificationDate] AS [CompanyCalendarModificationDate0], [d0].[CreatedBy] AS [CreatedBy1], [d0].[CreatorId] AS [CreatorId1], [d0].[DepositSubledgerId], [d0].[InterestRate] AS [InterestRate0], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive] AS [IsActive1], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy] AS [ModifiedBy1], [d0].[ModifierBranchCode] AS [ModifierBranchCode0], [d0].[ModifierId] AS [ModifierId1], [d0].[PostingScheme], [d0].[RealWorldCreationDate] AS [RealWorldCreationDate0], [d0].[RealWorldModificationDate] AS [RealWorldModificationDate0], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id] AS [Id2], [d1].[AccountNumber] AS [AccountNumber0], [d1].[AccountType] AS [AccountType0], [d1].[BranchCode] AS [BranchCode2], [d1].[ClientId] AS [ClientId1], [d1].[CompanyCalendarCreationDate] AS [CompanyCalendarCreationDate1], [d1].[CompanyCalendarModificationDate] AS [CompanyCalendarModificationDate1], [d1].[CreatedBy] AS [CreatedBy2], [d1].[CreatorId] AS [CreatorId2], [d1].[DepositSchemeId] AS [DepositSchemeId0], [d1].[Description] AS [Description0], [d1].[ExpectedDailyDepositAmount] AS [ExpectedDailyDepositAmount0], [d1].[ExpectedTotalDepositAmount] AS [ExpectedTotalDepositAmount0], [d1].[ExpectedTotalDepositDay] AS [ExpectedTotalDepositDay0], [d1].[ExpectedTotalInterestAmount] AS [ExpectedTotalInterestAmount0], [d1].[ExpectedTotalReturnAmount] AS [ExpectedTotalReturnAmount0], [d1].[InterestAmount] AS [InterestAmount0], [d1].[InterestPostingAccountNumberId] AS [InterestPostingAccountNumberId0], [d1].[InterestRate] AS [InterestRate1], [d1].[IsActive] AS [IsActive2], [d1].[IsSMSServiceActive] AS [IsSMSServiceActive0], [d1].[MatureDate] AS [MatureDate0], [d1].[MatureInterestPostingAccountNumberId] AS [MatureInterestPostingAccountNumberId0], [d1].[ModifiedBy] AS [ModifiedBy2], [d1].[ModifierBranchCode] AS [ModifierBranchCode1], [d1].[ModifierId] AS [ModifierId2], [d1].[NomineeName] AS [NomineeName1], [d1].[OpeningDate] AS [OpeningDate0], [d1].[Period] AS [Period0], [d1].[PeriodType] AS [PeriodType0], [d1].[PrincipalAmount] AS [PrincipalAmount0], [d1].[RealWorldCreationDate] AS [RealWorldCreationDate1], [d1].[RealWorldModificationDate] AS [RealWorldModificationDate1], [d1].[ReferredByEmployeeId] AS [ReferredByEmployeeId0], [d1].[Relation] AS [Relation0], [d1].[SignatureFileData] AS [SignatureFileData0], [d1].[SignatureFileName] AS [SignatureFileName0], [d1].[SignatureFileType] AS [SignatureFileType0], [d1].[Status] AS [Status0]
    FROM [DepositAccounts] AS [d]
    INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
    INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
    LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
    WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [j].[Id], [j].[CompanyCalendarEndDate], [j].[CompanyCalendarStartDate], [j].[DepositAccountId], [j].[JointClientId], [j].[RealWorldEndDate], [j].[RealWorldStartDate], [c0].[Id] AS [Id0], [c0].[BranchCode], [c0].[ClientAccountPurposeNepali], [c0].[ClientCastCode], [c0].[ClientCitizenShipIssueDate], [c0].[ClientCitizenShipIssueDistrict], [c0].[ClientCitizenshipFileData], [c0].[ClientCitizenshipFileName], [c0].[ClientCitizenshipFileType], [c0].[ClientCitizenshipNumber], [c0].[ClientDateOfBirth], [c0].[ClientEducationStatus], [c0].[ClientEmail], [c0].[ClientFatherInLaw], [c0].[ClientFatherName], [c0].[ClientFatherNameNepali], [c0].[ClientFirstName], [c0].[ClientGenderCode], [c0].[ClientGrandFatherName], [c0].[ClientGrandFatherNameNepali], [c0].[ClientGroupId], [c0].[ClientId], [c0].[ClientIfMemberOfOtherParty], [c0].[ClientIncomeSource], [c0].[ClientLastName], [c0].[ClientMartialStatusCode], [c0].[ClientMiddleName], [c0].[ClientMobileNumber1], [c0].[ClientMobileNumber2], [c0].[ClientMotherInLaw], [c0].[ClientMotherName], [c0].[ClientMotherNameNepali], [c0].[ClientNameOfDaughters], [c0].[ClientNameOfSons], [c0].[ClientNationality], [c0].[ClientNationalityIdStatus], [c0].[ClientNepaliName], [c0].[ClientOccupation], [c0].[ClientOtherInfo], [c0].[ClientOtherInfo2], [c0].[ClientPanNumber], [c0].[ClientPhotoFileData], [c0].[ClientPhotoFileName], [c0].[ClientPhotoFileType], [c0].[ClientShareTypeInfoId], [c0].[ClientSignatureFileData], [c0].[ClientSignatureFileName], [c0].[ClientSignatureFileType], [c0].[ClientSpouseName], [c0].[ClientSpouseOccupation], [c0].[ClientTelephoneNumber1], [c0].[ClientTelephoneNumber2], [c0].[ClientTypeId], [c0].[ClientUnitId], [c0].[ClientVotingId], [c0].[ClientWebsite], [c0].[CreatedBy], [c0].[CreatedOn], [c0].[CreatorId], [c0].[IsActive], [c0].[IsKYMUpdated], [c0].[IsModified], [c0].[IsShareAllowed], [c0].[KYMTypeId], [c0].[ModificationCount], [c0].[ModifiedBy], [c0].[ModifiedOn], [c0].[ModifierId], [c0].[NomineeAddress], [c0].[NomineeCitizenshipNumber], [c0].[NomineeContactNumber], [c0].[NomineeIntroducedBy], [c0].[NomineeName], [c0].[NomineeNepaliName], [c0].[NomineeNepaliRelation], [c0].[NomineePhotoFileData], [c0].[NomineePhotoFileName], [c0].[NomineePhotoFileType], [c0].[NomineeRelation], [c0].[PermanentDistrictCode], [c0].[PermanentStateCode], [c0].[PermanentToleVillage], [c0].[PermanentToleVillageNepali], [c0].[PermanentVdcMunicipality], [c0].[PermanentVdcMunicipalityNepali], [c0].[PermanentWardNumber], [c0].[PermanentWardNumberNepali], [c0].[RegistrationDate], [c0].[TemporaryDistrictCode], [c0].[TemporaryStateCode], [c0].[TemporaryToleVillage], [c0].[TemporaryToleVillageNepali], [c0].[TemporaryVdcMunicipality], [c0].[TemporaryVdcMunicipalityNepali], [c0].[TemporaryWardNumber], [c0].[TemporaryWardNumberNepali]
    FROM [JointAccounts] AS [j]
    INNER JOIN [Clients] AS [c0] ON [j].[JointClientId] = [c0].[Id]
    WHERE ([j].[RealWorldEndDate] IS NULL) AND ([j].[CompanyCalendarEndDate] IS NULL)
) AS [t0] ON [t].[Id] = [t0].[DepositAccountId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t].[Id2], [t0].[Id]
2023-08-07 18:35:31.505 +05:45 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-07 18:36:59.823 +05:45 [INF] 8/7/2023 6:36:59 PM: Depositing 1000 by admin on Deposit Account Id: 1
2023-08-07 18:37:35.787 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__p_0='56'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode]
FROM [SubLedgers] AS [s]
WHERE [s].[Id] = @__p_0
2023-08-07 18:38:12.031 +05:45 [INF] Checking the Lock Condition...
2023-08-07 18:38:54.541 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@p0='Ten Thousand' (Size = 4000), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3='001' (Nullable = false) (Size = 4000), @p4='2022/1/1' (Nullable = false) (Size = 4000), @p5=NULL (Size = 4000), @p6='admin' (Nullable = false) (Size = 4000), @p7='b927006e-986f-4896-8313-457c8af5d369' (Nullable = false) (Size = 4000), @p8=NULL (Size = 4000), @p9=NULL (Size = 4000), @p10=NULL (Size = 4000), @p11='1' (Nullable = true), @p12='2023-08-07T18:36:42.2034840+05:45', @p13=NULL (DbType = DateTime2), @p14='DepositTransaction' (Size = 4000), @p15='1000' (Precision = 18) (Scale = 4), @p16=NULL (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([AmountInWords], [BankChequeNumber], [BankDetailId], [BranchCode], [CompanyCalendarCreationDate], [CompanyCalendarModificationDate], [CreatedBy], [CreatorId], [ModifiedBy], [ModifierBranchCode], [ModifierId], [PaymentType], [RealWorldCreationDate], [RealWorldModificationDate], [Remarks], [TransactionAmount], [VoucherNumber])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2023-08-07 18:39:22.030 +05:45 [INF] Executed DbCommand (37ms) [Parameters=[@p17='20', @p0='Ten Thousand' (Size = 4000), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3='001' (Nullable = false) (Size = 4000), @p4='2022/1/1' (Nullable = false) (Size = 4000), @p5=NULL (Size = 4000), @p6='admin' (Nullable = false) (Size = 4000), @p7='b927006e-986f-4896-8313-457c8af5d369' (Nullable = false) (Size = 4000), @p8=NULL (Size = 4000), @p9=NULL (Size = 4000), @p10=NULL (Size = 4000), @p11='1' (Nullable = true), @p12='2023-08-07T18:36:42.2034840+05:45', @p13=NULL (DbType = DateTime2), @p14='DepositTransaction' (Size = 4000), @p15='1000' (Precision = 18) (Scale = 4), @p16='080/081VCH20001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Transactions] SET [AmountInWords] = @p0, [BankChequeNumber] = @p1, [BankDetailId] = @p2, [BranchCode] = @p3, [CompanyCalendarCreationDate] = @p4, [CompanyCalendarModificationDate] = @p5, [CreatedBy] = @p6, [CreatorId] = @p7, [ModifiedBy] = @p8, [ModifierBranchCode] = @p9, [ModifierId] = @p10, [PaymentType] = @p11, [RealWorldCreationDate] = @p12, [RealWorldModificationDate] = @p13, [Remarks] = @p14, [TransactionAmount] = @p15, [VoucherNumber] = @p16
OUTPUT 1
WHERE [Id] = @p17;
2023-08-07 18:39:28.837 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status]
FROM [DepositAccounts] AS [d]
WHERE [d].[Id] = @__p_0
2023-08-07 18:39:29.075 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[@__depositAccountTransactionWrapper_DepositSchemeSubLedgerId_0='56'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [SubLedgers] AS [s]
INNER JOIN [Ledgers] AS [l] ON [s].[LedgerId] = [l].[Id]
WHERE [s].[Id] = @__depositAccountTransactionWrapper_DepositSchemeSubLedgerId_0
2023-08-07 18:40:10.928 +05:45 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 1
2023-08-07 18:40:13.940 +05:45 [ERR] 8/7/2023 6:40:13 PM: Negative Balance: Your payment method leads to negative balance in ledger 
2023-08-07 18:40:14.042 +05:45 [INF] Releasing the locks...
2023-08-07 18:40:14.217 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 349523.0289ms
2023-08-07 18:40:14.218 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-08-07 18:40:14.293 +05:45 [INF] HTTP POST /Transaction/makeDeposit responded 401 in 349611.1327 ms
2023-08-07 18:40:14.293 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 213 - 401 - application/json 349612.7025ms
2023-08-07 18:40:26.903 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 213
2023-08-07 18:40:26.904 +05:45 [INF] CORS policy execution successful.
2023-08-07 18:40:26.904 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-08-07 18:40:26.904 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 18:52:33.970 +05:45 [INF] Executed DbCommand (61ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 18:52:34.096 +05:45 [INF] Executed DbCommand (57ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 18:52:34.112 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 18:52:34.113 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 18:52:34.139 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 18:52:34.169 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 18:52:34.505 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:34.737 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 18:52:34.739 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 18:52:34.740 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 18:52:34.742 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 18:52:34.747 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 18:52:34.748 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 18:52:35.003 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-07 18:52:35.015 +05:45 [WRN] The foreign key property 'ShareAccount.ClientId1' was created in shadow state because a conflicting property with the simple name 'ClientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-08-07 18:52:35.034 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 18:52:35.034 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 18:52:35.209 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 18:52:35.214 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 18:52:35.236 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 18:52:35.238 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 18:52:35.243 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 18:52:35.248 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 18:52:35.253 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.259 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.265 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.277 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.285 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.289 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.295 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.307 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.313 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.318 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.329 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.332 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.335 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.338 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.341 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.345 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.350 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.354 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.358 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 18:52:35.476 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-07 18:52:35.624 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-07 18:52:35.624 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-07 18:52:35.628 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-07 18:52:35.629 +05:45 [INF] Hosting environment: Development
2023-08-07 18:52:35.629 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-07 18:53:41.597 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 213
2023-08-07 18:53:41.719 +05:45 [INF] CORS policy execution successful.
2023-08-07 18:53:41.731 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-08-07 18:53:41.764 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 18:53:56.707 +05:45 [INF] Executed DbCommand (46ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-08-07 18:53:59.292 +05:45 [INF] Executed DbCommand (44ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccountNumber], [t].[AccountType], [t].[BranchCode], [t].[ClientId], [t].[CompanyCalendarCreationDate], [t].[CompanyCalendarModificationDate], [t].[CreatedBy], [t].[CreatorId], [t].[DepositSchemeId], [t].[Description], [t].[ExpectedDailyDepositAmount], [t].[ExpectedTotalDepositAmount], [t].[ExpectedTotalDepositDay], [t].[ExpectedTotalInterestAmount], [t].[ExpectedTotalReturnAmount], [t].[InterestAmount], [t].[InterestPostingAccountNumberId], [t].[InterestRate], [t].[IsActive], [t].[IsSMSServiceActive], [t].[MatureDate], [t].[MatureInterestPostingAccountNumberId], [t].[ModifiedBy], [t].[ModifierBranchCode], [t].[ModifierId], [t].[NomineeName], [t].[OpeningDate], [t].[Period], [t].[PeriodType], [t].[PrincipalAmount], [t].[RealWorldCreationDate], [t].[RealWorldModificationDate], [t].[ReferredByEmployeeId], [t].[Relation], [t].[SignatureFileData], [t].[SignatureFileName], [t].[SignatureFileType], [t].[Status], [t].[Id0], [t].[BranchCode0], [t].[ClientAccountPurposeNepali], [t].[ClientCastCode], [t].[ClientCitizenShipIssueDate], [t].[ClientCitizenShipIssueDistrict], [t].[ClientCitizenshipFileData], [t].[ClientCitizenshipFileName], [t].[ClientCitizenshipFileType], [t].[ClientCitizenshipNumber], [t].[ClientDateOfBirth], [t].[ClientEducationStatus], [t].[ClientEmail], [t].[ClientFatherInLaw], [t].[ClientFatherName], [t].[ClientFatherNameNepali], [t].[ClientFirstName], [t].[ClientGenderCode], [t].[ClientGrandFatherName], [t].[ClientGrandFatherNameNepali], [t].[ClientGroupId], [t].[ClientId0], [t].[ClientIfMemberOfOtherParty], [t].[ClientIncomeSource], [t].[ClientLastName], [t].[ClientMartialStatusCode], [t].[ClientMiddleName], [t].[ClientMobileNumber1], [t].[ClientMobileNumber2], [t].[ClientMotherInLaw], [t].[ClientMotherName], [t].[ClientMotherNameNepali], [t].[ClientNameOfDaughters], [t].[ClientNameOfSons], [t].[ClientNationality], [t].[ClientNationalityIdStatus], [t].[ClientNepaliName], [t].[ClientOccupation], [t].[ClientOtherInfo], [t].[ClientOtherInfo2], [t].[ClientPanNumber], [t].[ClientPhotoFileData], [t].[ClientPhotoFileName], [t].[ClientPhotoFileType], [t].[ClientShareTypeInfoId], [t].[ClientSignatureFileData], [t].[ClientSignatureFileName], [t].[ClientSignatureFileType], [t].[ClientSpouseName], [t].[ClientSpouseOccupation], [t].[ClientTelephoneNumber1], [t].[ClientTelephoneNumber2], [t].[ClientTypeId], [t].[ClientUnitId], [t].[ClientVotingId], [t].[ClientWebsite], [t].[CreatedBy0], [t].[CreatedOn], [t].[CreatorId0], [t].[IsActive0], [t].[IsKYMUpdated], [t].[IsModified], [t].[IsShareAllowed], [t].[KYMTypeId], [t].[ModificationCount], [t].[ModifiedBy0], [t].[ModifiedOn], [t].[ModifierId0], [t].[NomineeAddress], [t].[NomineeCitizenshipNumber], [t].[NomineeContactNumber], [t].[NomineeIntroducedBy], [t].[NomineeName0], [t].[NomineeNepaliName], [t].[NomineeNepaliRelation], [t].[NomineePhotoFileData], [t].[NomineePhotoFileName], [t].[NomineePhotoFileType], [t].[NomineeRelation], [t].[PermanentDistrictCode], [t].[PermanentStateCode], [t].[PermanentToleVillage], [t].[PermanentToleVillageNepali], [t].[PermanentVdcMunicipality], [t].[PermanentVdcMunicipalityNepali], [t].[PermanentWardNumber], [t].[PermanentWardNumberNepali], [t].[RegistrationDate], [t].[TemporaryDistrictCode], [t].[TemporaryStateCode], [t].[TemporaryToleVillage], [t].[TemporaryToleVillageNepali], [t].[TemporaryVdcMunicipality], [t].[TemporaryVdcMunicipalityNepali], [t].[TemporaryWardNumber], [t].[TemporaryWardNumberNepali], [t].[Id1], [t].[BranchCode1], [t].[Calculation], [t].[CompanyCalendarCreationDate0], [t].[CompanyCalendarModificationDate0], [t].[CreatedBy1], [t].[CreatorId1], [t].[DepositSubledgerId], [t].[InterestRate0], [t].[InterestRateOnMinimumBalance], [t].[InterestSubLedgerId], [t].[IsActive1], [t].[MaximumInterestRate], [t].[MinimumBalance], [t].[MinimumInterestRate], [t].[ModifiedBy1], [t].[ModifierBranchCode0], [t].[ModifierId1], [t].[PostingScheme], [t].[RealWorldCreationDate0], [t].[RealWorldModificationDate0], [t].[SchemeName], [t].[SchemeNameNepali], [t].[SchemeTypeId], [t].[Symbol], [t].[TaxSubledgerId], [t].[Id2], [t].[AccountNumber0], [t].[AccountType0], [t].[BranchCode2], [t].[ClientId1], [t].[CompanyCalendarCreationDate1], [t].[CompanyCalendarModificationDate1], [t].[CreatedBy2], [t].[CreatorId2], [t].[DepositSchemeId0], [t].[Description0], [t].[ExpectedDailyDepositAmount0], [t].[ExpectedTotalDepositAmount0], [t].[ExpectedTotalDepositDay0], [t].[ExpectedTotalInterestAmount0], [t].[ExpectedTotalReturnAmount0], [t].[InterestAmount0], [t].[InterestPostingAccountNumberId0], [t].[InterestRate1], [t].[IsActive2], [t].[IsSMSServiceActive0], [t].[MatureDate0], [t].[MatureInterestPostingAccountNumberId0], [t].[ModifiedBy2], [t].[ModifierBranchCode1], [t].[ModifierId2], [t].[NomineeName1], [t].[OpeningDate0], [t].[Period0], [t].[PeriodType0], [t].[PrincipalAmount0], [t].[RealWorldCreationDate1], [t].[RealWorldModificationDate1], [t].[ReferredByEmployeeId0], [t].[Relation0], [t].[SignatureFileData0], [t].[SignatureFileName0], [t].[SignatureFileType0], [t].[Status0], [t0].[Id], [t0].[CompanyCalendarEndDate], [t0].[CompanyCalendarStartDate], [t0].[DepositAccountId], [t0].[JointClientId], [t0].[RealWorldEndDate], [t0].[RealWorldStartDate], [t0].[Id0], [t0].[BranchCode], [t0].[ClientAccountPurposeNepali], [t0].[ClientCastCode], [t0].[ClientCitizenShipIssueDate], [t0].[ClientCitizenShipIssueDistrict], [t0].[ClientCitizenshipFileData], [t0].[ClientCitizenshipFileName], [t0].[ClientCitizenshipFileType], [t0].[ClientCitizenshipNumber], [t0].[ClientDateOfBirth], [t0].[ClientEducationStatus], [t0].[ClientEmail], [t0].[ClientFatherInLaw], [t0].[ClientFatherName], [t0].[ClientFatherNameNepali], [t0].[ClientFirstName], [t0].[ClientGenderCode], [t0].[ClientGrandFatherName], [t0].[ClientGrandFatherNameNepali], [t0].[ClientGroupId], [t0].[ClientId], [t0].[ClientIfMemberOfOtherParty], [t0].[ClientIncomeSource], [t0].[ClientLastName], [t0].[ClientMartialStatusCode], [t0].[ClientMiddleName], [t0].[ClientMobileNumber1], [t0].[ClientMobileNumber2], [t0].[ClientMotherInLaw], [t0].[ClientMotherName], [t0].[ClientMotherNameNepali], [t0].[ClientNameOfDaughters], [t0].[ClientNameOfSons], [t0].[ClientNationality], [t0].[ClientNationalityIdStatus], [t0].[ClientNepaliName], [t0].[ClientOccupation], [t0].[ClientOtherInfo], [t0].[ClientOtherInfo2], [t0].[ClientPanNumber], [t0].[ClientPhotoFileData], [t0].[ClientPhotoFileName], [t0].[ClientPhotoFileType], [t0].[ClientShareTypeInfoId], [t0].[ClientSignatureFileData], [t0].[ClientSignatureFileName], [t0].[ClientSignatureFileType], [t0].[ClientSpouseName], [t0].[ClientSpouseOccupation], [t0].[ClientTelephoneNumber1], [t0].[ClientTelephoneNumber2], [t0].[ClientTypeId], [t0].[ClientUnitId], [t0].[ClientVotingId], [t0].[ClientWebsite], [t0].[CreatedBy], [t0].[CreatedOn], [t0].[CreatorId], [t0].[IsActive], [t0].[IsKYMUpdated], [t0].[IsModified], [t0].[IsShareAllowed], [t0].[KYMTypeId], [t0].[ModificationCount], [t0].[ModifiedBy], [t0].[ModifiedOn], [t0].[ModifierId], [t0].[NomineeAddress], [t0].[NomineeCitizenshipNumber], [t0].[NomineeContactNumber], [t0].[NomineeIntroducedBy], [t0].[NomineeName], [t0].[NomineeNepaliName], [t0].[NomineeNepaliRelation], [t0].[NomineePhotoFileData], [t0].[NomineePhotoFileName], [t0].[NomineePhotoFileType], [t0].[NomineeRelation], [t0].[PermanentDistrictCode], [t0].[PermanentStateCode], [t0].[PermanentToleVillage], [t0].[PermanentToleVillageNepali], [t0].[PermanentVdcMunicipality], [t0].[PermanentVdcMunicipalityNepali], [t0].[PermanentWardNumber], [t0].[PermanentWardNumberNepali], [t0].[RegistrationDate], [t0].[TemporaryDistrictCode], [t0].[TemporaryStateCode], [t0].[TemporaryToleVillage], [t0].[TemporaryToleVillageNepali], [t0].[TemporaryVdcMunicipality], [t0].[TemporaryVdcMunicipalityNepali], [t0].[TemporaryWardNumber], [t0].[TemporaryWardNumberNepali]
FROM (
    SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id] AS [Id0], [c].[BranchCode] AS [BranchCode0], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId] AS [ClientId0], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy] AS [CreatedBy0], [c].[CreatedOn], [c].[CreatorId] AS [CreatorId0], [c].[IsActive] AS [IsActive0], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy] AS [ModifiedBy0], [c].[ModifiedOn], [c].[ModifierId] AS [ModifierId0], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName] AS [NomineeName0], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id] AS [Id1], [d0].[BranchCode] AS [BranchCode1], [d0].[Calculation], [d0].[CompanyCalendarCreationDate] AS [CompanyCalendarCreationDate0], [d0].[CompanyCalendarModificationDate] AS [CompanyCalendarModificationDate0], [d0].[CreatedBy] AS [CreatedBy1], [d0].[CreatorId] AS [CreatorId1], [d0].[DepositSubledgerId], [d0].[InterestRate] AS [InterestRate0], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive] AS [IsActive1], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy] AS [ModifiedBy1], [d0].[ModifierBranchCode] AS [ModifierBranchCode0], [d0].[ModifierId] AS [ModifierId1], [d0].[PostingScheme], [d0].[RealWorldCreationDate] AS [RealWorldCreationDate0], [d0].[RealWorldModificationDate] AS [RealWorldModificationDate0], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id] AS [Id2], [d1].[AccountNumber] AS [AccountNumber0], [d1].[AccountType] AS [AccountType0], [d1].[BranchCode] AS [BranchCode2], [d1].[ClientId] AS [ClientId1], [d1].[CompanyCalendarCreationDate] AS [CompanyCalendarCreationDate1], [d1].[CompanyCalendarModificationDate] AS [CompanyCalendarModificationDate1], [d1].[CreatedBy] AS [CreatedBy2], [d1].[CreatorId] AS [CreatorId2], [d1].[DepositSchemeId] AS [DepositSchemeId0], [d1].[Description] AS [Description0], [d1].[ExpectedDailyDepositAmount] AS [ExpectedDailyDepositAmount0], [d1].[ExpectedTotalDepositAmount] AS [ExpectedTotalDepositAmount0], [d1].[ExpectedTotalDepositDay] AS [ExpectedTotalDepositDay0], [d1].[ExpectedTotalInterestAmount] AS [ExpectedTotalInterestAmount0], [d1].[ExpectedTotalReturnAmount] AS [ExpectedTotalReturnAmount0], [d1].[InterestAmount] AS [InterestAmount0], [d1].[InterestPostingAccountNumberId] AS [InterestPostingAccountNumberId0], [d1].[InterestRate] AS [InterestRate1], [d1].[IsActive] AS [IsActive2], [d1].[IsSMSServiceActive] AS [IsSMSServiceActive0], [d1].[MatureDate] AS [MatureDate0], [d1].[MatureInterestPostingAccountNumberId] AS [MatureInterestPostingAccountNumberId0], [d1].[ModifiedBy] AS [ModifiedBy2], [d1].[ModifierBranchCode] AS [ModifierBranchCode1], [d1].[ModifierId] AS [ModifierId2], [d1].[NomineeName] AS [NomineeName1], [d1].[OpeningDate] AS [OpeningDate0], [d1].[Period] AS [Period0], [d1].[PeriodType] AS [PeriodType0], [d1].[PrincipalAmount] AS [PrincipalAmount0], [d1].[RealWorldCreationDate] AS [RealWorldCreationDate1], [d1].[RealWorldModificationDate] AS [RealWorldModificationDate1], [d1].[ReferredByEmployeeId] AS [ReferredByEmployeeId0], [d1].[Relation] AS [Relation0], [d1].[SignatureFileData] AS [SignatureFileData0], [d1].[SignatureFileName] AS [SignatureFileName0], [d1].[SignatureFileType] AS [SignatureFileType0], [d1].[Status] AS [Status0]
    FROM [DepositAccounts] AS [d]
    INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
    INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
    LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
    WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [j].[Id], [j].[CompanyCalendarEndDate], [j].[CompanyCalendarStartDate], [j].[DepositAccountId], [j].[JointClientId], [j].[RealWorldEndDate], [j].[RealWorldStartDate], [c0].[Id] AS [Id0], [c0].[BranchCode], [c0].[ClientAccountPurposeNepali], [c0].[ClientCastCode], [c0].[ClientCitizenShipIssueDate], [c0].[ClientCitizenShipIssueDistrict], [c0].[ClientCitizenshipFileData], [c0].[ClientCitizenshipFileName], [c0].[ClientCitizenshipFileType], [c0].[ClientCitizenshipNumber], [c0].[ClientDateOfBirth], [c0].[ClientEducationStatus], [c0].[ClientEmail], [c0].[ClientFatherInLaw], [c0].[ClientFatherName], [c0].[ClientFatherNameNepali], [c0].[ClientFirstName], [c0].[ClientGenderCode], [c0].[ClientGrandFatherName], [c0].[ClientGrandFatherNameNepali], [c0].[ClientGroupId], [c0].[ClientId], [c0].[ClientIfMemberOfOtherParty], [c0].[ClientIncomeSource], [c0].[ClientLastName], [c0].[ClientMartialStatusCode], [c0].[ClientMiddleName], [c0].[ClientMobileNumber1], [c0].[ClientMobileNumber2], [c0].[ClientMotherInLaw], [c0].[ClientMotherName], [c0].[ClientMotherNameNepali], [c0].[ClientNameOfDaughters], [c0].[ClientNameOfSons], [c0].[ClientNationality], [c0].[ClientNationalityIdStatus], [c0].[ClientNepaliName], [c0].[ClientOccupation], [c0].[ClientOtherInfo], [c0].[ClientOtherInfo2], [c0].[ClientPanNumber], [c0].[ClientPhotoFileData], [c0].[ClientPhotoFileName], [c0].[ClientPhotoFileType], [c0].[ClientShareTypeInfoId], [c0].[ClientSignatureFileData], [c0].[ClientSignatureFileName], [c0].[ClientSignatureFileType], [c0].[ClientSpouseName], [c0].[ClientSpouseOccupation], [c0].[ClientTelephoneNumber1], [c0].[ClientTelephoneNumber2], [c0].[ClientTypeId], [c0].[ClientUnitId], [c0].[ClientVotingId], [c0].[ClientWebsite], [c0].[CreatedBy], [c0].[CreatedOn], [c0].[CreatorId], [c0].[IsActive], [c0].[IsKYMUpdated], [c0].[IsModified], [c0].[IsShareAllowed], [c0].[KYMTypeId], [c0].[ModificationCount], [c0].[ModifiedBy], [c0].[ModifiedOn], [c0].[ModifierId], [c0].[NomineeAddress], [c0].[NomineeCitizenshipNumber], [c0].[NomineeContactNumber], [c0].[NomineeIntroducedBy], [c0].[NomineeName], [c0].[NomineeNepaliName], [c0].[NomineeNepaliRelation], [c0].[NomineePhotoFileData], [c0].[NomineePhotoFileName], [c0].[NomineePhotoFileType], [c0].[NomineeRelation], [c0].[PermanentDistrictCode], [c0].[PermanentStateCode], [c0].[PermanentToleVillage], [c0].[PermanentToleVillageNepali], [c0].[PermanentVdcMunicipality], [c0].[PermanentVdcMunicipalityNepali], [c0].[PermanentWardNumber], [c0].[PermanentWardNumberNepali], [c0].[RegistrationDate], [c0].[TemporaryDistrictCode], [c0].[TemporaryStateCode], [c0].[TemporaryToleVillage], [c0].[TemporaryToleVillageNepali], [c0].[TemporaryVdcMunicipality], [c0].[TemporaryVdcMunicipalityNepali], [c0].[TemporaryWardNumber], [c0].[TemporaryWardNumberNepali]
    FROM [JointAccounts] AS [j]
    INNER JOIN [Clients] AS [c0] ON [j].[JointClientId] = [c0].[Id]
    WHERE ([j].[RealWorldEndDate] IS NULL) AND ([j].[CompanyCalendarEndDate] IS NULL)
) AS [t0] ON [t].[Id] = [t0].[DepositAccountId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t].[Id2], [t0].[Id]
2023-08-07 18:54:00.790 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-07 18:54:22.771 +05:45 [INF] 8/7/2023 6:54:22 PM: Depositing 1000 by admin on Deposit Account Id: 1
2023-08-07 18:54:30.166 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='56'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode]
FROM [SubLedgers] AS [s]
WHERE [s].[Id] = @__p_0
2023-08-07 18:54:36.252 +05:45 [INF] Checking the Lock Condition...
2023-08-07 18:55:13.837 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[@p0='Ten Thousand' (Size = 4000), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3='001' (Nullable = false) (Size = 4000), @p4='2022/1/1' (Nullable = false) (Size = 4000), @p5=NULL (Size = 4000), @p6='admin' (Nullable = false) (Size = 4000), @p7='b927006e-986f-4896-8313-457c8af5d369' (Nullable = false) (Size = 4000), @p8=NULL (Size = 4000), @p9=NULL (Size = 4000), @p10=NULL (Size = 4000), @p11='1' (Nullable = true), @p12='2023-08-07T18:54:12.2412868+05:45', @p13=NULL (DbType = DateTime2), @p14='DepositTransaction' (Size = 4000), @p15='1000' (Precision = 18) (Scale = 4), @p16=NULL (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([AmountInWords], [BankChequeNumber], [BankDetailId], [BranchCode], [CompanyCalendarCreationDate], [CompanyCalendarModificationDate], [CreatedBy], [CreatorId], [ModifiedBy], [ModifierBranchCode], [ModifierId], [PaymentType], [RealWorldCreationDate], [RealWorldModificationDate], [Remarks], [TransactionAmount], [VoucherNumber])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2023-08-07 18:55:13.931 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@p17='21', @p0='Ten Thousand' (Size = 4000), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3='001' (Nullable = false) (Size = 4000), @p4='2022/1/1' (Nullable = false) (Size = 4000), @p5=NULL (Size = 4000), @p6='admin' (Nullable = false) (Size = 4000), @p7='b927006e-986f-4896-8313-457c8af5d369' (Nullable = false) (Size = 4000), @p8=NULL (Size = 4000), @p9=NULL (Size = 4000), @p10=NULL (Size = 4000), @p11='1' (Nullable = true), @p12='2023-08-07T18:54:12.2412868+05:45', @p13=NULL (DbType = DateTime2), @p14='DepositTransaction' (Size = 4000), @p15='1000' (Precision = 18) (Scale = 4), @p16='080/081VCH21001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Transactions] SET [AmountInWords] = @p0, [BankChequeNumber] = @p1, [BankDetailId] = @p2, [BranchCode] = @p3, [CompanyCalendarCreationDate] = @p4, [CompanyCalendarModificationDate] = @p5, [CreatedBy] = @p6, [CreatorId] = @p7, [ModifiedBy] = @p8, [ModifierBranchCode] = @p9, [ModifierId] = @p10, [PaymentType] = @p11, [RealWorldCreationDate] = @p12, [RealWorldModificationDate] = @p13, [Remarks] = @p14, [TransactionAmount] = @p15, [VoucherNumber] = @p16
OUTPUT 1
WHERE [Id] = @p17;
2023-08-07 18:55:24.677 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status]
FROM [DepositAccounts] AS [d]
WHERE [d].[Id] = @__p_0
2023-08-07 18:57:20.079 +05:45 [INF] Executed DbCommand (114ms) [Parameters=[@__depositAccountTransactionWrapper_DepositSchemeSubLedgerId_0='56'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [SubLedgers] AS [s]
INNER JOIN [Ledgers] AS [l] ON [s].[LedgerId] = [l].[Id]
WHERE [s].[Id] = @__depositAccountTransactionWrapper_DepositSchemeSubLedgerId_0
2023-08-07 18:58:57.784 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 1
2023-08-07 18:59:24.297 +05:45 [INF] Executed DbCommand (25ms) [Parameters=[@p0='1000.0000' (Precision = 18) (Scale = 4), @p1='1' (Nullable = true), @p2='1', @p3='Cash Deposit: Ashish Adhikari' (Size = 4000), @p4='Transaction done as DepositTransaction' (Size = 4000), @p5='Salary' (Nullable = false) (Size = 4000), @p6='21', @p7='2', @p8=NULL (Size = 4000), @p9=NULL (DbType = Int32), @p11='1', @p10='1000.0000' (Precision = 18) (Scale = 4), @p12='1000.0000' (Precision = 18) (Scale = 4), @p13='1', @p14='Transaction done as DepositTransaction' (Size = 4000), @p15='21', @p16='1', @p18='1', @p17='1000.0000' (Precision = 18) (Scale = 4), @p20='18', @p19='1000.0000' (Precision = 18) (Scale = 4), @p21='1000.0000' (Precision = 18) (Scale = 4), @p22='Transaction done as DepositTransaction' (Size = 4000), @p23='56', @p24='21', @p25='2', @p27='56', @p26='1000.0000' (Precision = 18) (Scale = 4)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DepositAccountTransactions] ([BalanceAfterTransaction], [CollectedByEmployeeId], [DepositAccountId], [Narration], [Remarks], [Source], [TransactionId], [TransactionType], [WithDrawalChequeNumber], [WithDrawalType])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
UPDATE [DepositAccounts] SET [PrincipalAmount] = @p10
OUTPUT 1
WHERE [Id] = @p11;
INSERT INTO [LedgerTransactions] ([BalanceAfterTransaction], [LedgerId], [Remarks], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p12, @p13, @p14, @p15, @p16);
UPDATE [Ledgers] SET [CurrentBalance] = @p17
OUTPUT 1
WHERE [Id] = @p18;
UPDATE [Ledgers] SET [CurrentBalance] = @p19
OUTPUT 1
WHERE [Id] = @p20;
INSERT INTO [SubLedgerTransactions] ([BalanceAfterTransaction], [Remarks], [SubLedgerId], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p21, @p22, @p23, @p24, @p25);
UPDATE [SubLedgers] SET [CurrentBalance] = @p26
OUTPUT 1
WHERE [Id] = @p27;
2023-08-07 18:59:36.815 +05:45 [INF] Transaction Completed
2023-08-07 18:59:38.051 +05:45 [INF] After Processing is: 62
2023-08-07 18:59:42.850 +05:45 [INF] Releasing the locks...
2023-08-07 18:59:53.514 +05:45 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-08-07 18:59:53.529 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 371757.9998ms
2023-08-07 18:59:53.531 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-08-07 18:59:53.537 +05:45 [INF] HTTP POST /Transaction/makeDeposit responded 200 in 371811.4640 ms
2023-08-07 18:59:53.559 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 213 - 200 - text/plain;+charset=utf-8 371966.2004ms
2023-08-07 19:39:53.741 +05:45 [INF] Executed DbCommand (62ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 19:39:53.879 +05:45 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 19:39:53.893 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 19:39:53.895 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 19:39:53.928 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 19:39:53.957 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 19:39:54.304 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:54.569 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 19:39:54.570 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 19:39:54.571 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 19:39:54.573 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 19:39:54.576 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 19:39:54.577 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 19:39:54.843 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-07 19:39:54.857 +05:45 [WRN] The foreign key property 'ShareAccount.ClientId1' was created in shadow state because a conflicting property with the simple name 'ClientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-08-07 19:39:54.872 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 19:39:54.873 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 19:39:55.005 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 19:39:55.246 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 19:39:55.253 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 19:39:55.258 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 19:39:55.266 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 19:39:55.278 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 19:39:55.286 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.292 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.298 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.321 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.334 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.338 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.342 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.345 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.347 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.351 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.361 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.365 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.368 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.371 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.374 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.378 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.382 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.385 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.389 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 19:39:55.533 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-07 19:39:55.682 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-07 19:39:55.682 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-07 19:39:55.686 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-07 19:39:55.707 +05:45 [INF] Hosting environment: Development
2023-08-07 19:39:55.707 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-07 19:40:43.480 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 267
2023-08-07 19:40:43.549 +05:45 [INF] CORS policy execution successful.
2023-08-07 19:40:43.560 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-08-07 19:40:43.590 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 19:40:44.006 +05:45 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2023-08-07 19:40:44.058 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 461.88ms
2023-08-07 19:40:44.059 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-08-07 19:40:44.063 +05:45 [INF] HTTP POST /Transaction/makeDeposit responded 400 in 506.4516 ms
2023-08-07 19:40:44.071 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 267 - 400 - application/problem+json;+charset=utf-8 593.8315ms
2023-08-07 19:40:52.763 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 267
2023-08-07 19:40:52.766 +05:45 [INF] CORS policy execution successful.
2023-08-07 19:40:52.767 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-08-07 19:40:52.767 +05:45 [INF] Route matched with {action = "MakeDeposit", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeDeposit(MicroFinance.Dtos.Transactions.MakeDepositTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 19:41:14.070 +05:45 [INF] Executed DbCommand (147ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-08-07 19:41:14.553 +05:45 [INF] Executed DbCommand (27ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccountNumber], [t].[AccountType], [t].[BranchCode], [t].[ClientId], [t].[CompanyCalendarCreationDate], [t].[CompanyCalendarModificationDate], [t].[CreatedBy], [t].[CreatorId], [t].[DepositSchemeId], [t].[Description], [t].[ExpectedDailyDepositAmount], [t].[ExpectedTotalDepositAmount], [t].[ExpectedTotalDepositDay], [t].[ExpectedTotalInterestAmount], [t].[ExpectedTotalReturnAmount], [t].[InterestAmount], [t].[InterestPostingAccountNumberId], [t].[InterestRate], [t].[IsActive], [t].[IsSMSServiceActive], [t].[MatureDate], [t].[MatureInterestPostingAccountNumberId], [t].[ModifiedBy], [t].[ModifierBranchCode], [t].[ModifierId], [t].[NomineeName], [t].[OpeningDate], [t].[Period], [t].[PeriodType], [t].[PrincipalAmount], [t].[RealWorldCreationDate], [t].[RealWorldModificationDate], [t].[ReferredByEmployeeId], [t].[Relation], [t].[SignatureFileData], [t].[SignatureFileName], [t].[SignatureFileType], [t].[Status], [t].[Id0], [t].[BranchCode0], [t].[ClientAccountPurposeNepali], [t].[ClientCastCode], [t].[ClientCitizenShipIssueDate], [t].[ClientCitizenShipIssueDistrict], [t].[ClientCitizenshipFileData], [t].[ClientCitizenshipFileName], [t].[ClientCitizenshipFileType], [t].[ClientCitizenshipNumber], [t].[ClientDateOfBirth], [t].[ClientEducationStatus], [t].[ClientEmail], [t].[ClientFatherInLaw], [t].[ClientFatherName], [t].[ClientFatherNameNepali], [t].[ClientFirstName], [t].[ClientGenderCode], [t].[ClientGrandFatherName], [t].[ClientGrandFatherNameNepali], [t].[ClientGroupId], [t].[ClientId0], [t].[ClientIfMemberOfOtherParty], [t].[ClientIncomeSource], [t].[ClientLastName], [t].[ClientMartialStatusCode], [t].[ClientMiddleName], [t].[ClientMobileNumber1], [t].[ClientMobileNumber2], [t].[ClientMotherInLaw], [t].[ClientMotherName], [t].[ClientMotherNameNepali], [t].[ClientNameOfDaughters], [t].[ClientNameOfSons], [t].[ClientNationality], [t].[ClientNationalityIdStatus], [t].[ClientNepaliName], [t].[ClientOccupation], [t].[ClientOtherInfo], [t].[ClientOtherInfo2], [t].[ClientPanNumber], [t].[ClientPhotoFileData], [t].[ClientPhotoFileName], [t].[ClientPhotoFileType], [t].[ClientShareTypeInfoId], [t].[ClientSignatureFileData], [t].[ClientSignatureFileName], [t].[ClientSignatureFileType], [t].[ClientSpouseName], [t].[ClientSpouseOccupation], [t].[ClientTelephoneNumber1], [t].[ClientTelephoneNumber2], [t].[ClientTypeId], [t].[ClientUnitId], [t].[ClientVotingId], [t].[ClientWebsite], [t].[CreatedBy0], [t].[CreatedOn], [t].[CreatorId0], [t].[IsActive0], [t].[IsKYMUpdated], [t].[IsModified], [t].[IsShareAllowed], [t].[KYMTypeId], [t].[ModificationCount], [t].[ModifiedBy0], [t].[ModifiedOn], [t].[ModifierId0], [t].[NomineeAddress], [t].[NomineeCitizenshipNumber], [t].[NomineeContactNumber], [t].[NomineeIntroducedBy], [t].[NomineeName0], [t].[NomineeNepaliName], [t].[NomineeNepaliRelation], [t].[NomineePhotoFileData], [t].[NomineePhotoFileName], [t].[NomineePhotoFileType], [t].[NomineeRelation], [t].[PermanentDistrictCode], [t].[PermanentStateCode], [t].[PermanentToleVillage], [t].[PermanentToleVillageNepali], [t].[PermanentVdcMunicipality], [t].[PermanentVdcMunicipalityNepali], [t].[PermanentWardNumber], [t].[PermanentWardNumberNepali], [t].[RegistrationDate], [t].[TemporaryDistrictCode], [t].[TemporaryStateCode], [t].[TemporaryToleVillage], [t].[TemporaryToleVillageNepali], [t].[TemporaryVdcMunicipality], [t].[TemporaryVdcMunicipalityNepali], [t].[TemporaryWardNumber], [t].[TemporaryWardNumberNepali], [t].[Id1], [t].[BranchCode1], [t].[Calculation], [t].[CompanyCalendarCreationDate0], [t].[CompanyCalendarModificationDate0], [t].[CreatedBy1], [t].[CreatorId1], [t].[DepositSubledgerId], [t].[InterestRate0], [t].[InterestRateOnMinimumBalance], [t].[InterestSubLedgerId], [t].[IsActive1], [t].[MaximumInterestRate], [t].[MinimumBalance], [t].[MinimumInterestRate], [t].[ModifiedBy1], [t].[ModifierBranchCode0], [t].[ModifierId1], [t].[PostingScheme], [t].[RealWorldCreationDate0], [t].[RealWorldModificationDate0], [t].[SchemeName], [t].[SchemeNameNepali], [t].[SchemeTypeId], [t].[Symbol], [t].[TaxSubledgerId], [t].[Id2], [t].[AccountNumber0], [t].[AccountType0], [t].[BranchCode2], [t].[ClientId1], [t].[CompanyCalendarCreationDate1], [t].[CompanyCalendarModificationDate1], [t].[CreatedBy2], [t].[CreatorId2], [t].[DepositSchemeId0], [t].[Description0], [t].[ExpectedDailyDepositAmount0], [t].[ExpectedTotalDepositAmount0], [t].[ExpectedTotalDepositDay0], [t].[ExpectedTotalInterestAmount0], [t].[ExpectedTotalReturnAmount0], [t].[InterestAmount0], [t].[InterestPostingAccountNumberId0], [t].[InterestRate1], [t].[IsActive2], [t].[IsSMSServiceActive0], [t].[MatureDate0], [t].[MatureInterestPostingAccountNumberId0], [t].[ModifiedBy2], [t].[ModifierBranchCode1], [t].[ModifierId2], [t].[NomineeName1], [t].[OpeningDate0], [t].[Period0], [t].[PeriodType0], [t].[PrincipalAmount0], [t].[RealWorldCreationDate1], [t].[RealWorldModificationDate1], [t].[ReferredByEmployeeId0], [t].[Relation0], [t].[SignatureFileData0], [t].[SignatureFileName0], [t].[SignatureFileType0], [t].[Status0], [t0].[Id], [t0].[CompanyCalendarEndDate], [t0].[CompanyCalendarStartDate], [t0].[DepositAccountId], [t0].[JointClientId], [t0].[RealWorldEndDate], [t0].[RealWorldStartDate], [t0].[Id0], [t0].[BranchCode], [t0].[ClientAccountPurposeNepali], [t0].[ClientCastCode], [t0].[ClientCitizenShipIssueDate], [t0].[ClientCitizenShipIssueDistrict], [t0].[ClientCitizenshipFileData], [t0].[ClientCitizenshipFileName], [t0].[ClientCitizenshipFileType], [t0].[ClientCitizenshipNumber], [t0].[ClientDateOfBirth], [t0].[ClientEducationStatus], [t0].[ClientEmail], [t0].[ClientFatherInLaw], [t0].[ClientFatherName], [t0].[ClientFatherNameNepali], [t0].[ClientFirstName], [t0].[ClientGenderCode], [t0].[ClientGrandFatherName], [t0].[ClientGrandFatherNameNepali], [t0].[ClientGroupId], [t0].[ClientId], [t0].[ClientIfMemberOfOtherParty], [t0].[ClientIncomeSource], [t0].[ClientLastName], [t0].[ClientMartialStatusCode], [t0].[ClientMiddleName], [t0].[ClientMobileNumber1], [t0].[ClientMobileNumber2], [t0].[ClientMotherInLaw], [t0].[ClientMotherName], [t0].[ClientMotherNameNepali], [t0].[ClientNameOfDaughters], [t0].[ClientNameOfSons], [t0].[ClientNationality], [t0].[ClientNationalityIdStatus], [t0].[ClientNepaliName], [t0].[ClientOccupation], [t0].[ClientOtherInfo], [t0].[ClientOtherInfo2], [t0].[ClientPanNumber], [t0].[ClientPhotoFileData], [t0].[ClientPhotoFileName], [t0].[ClientPhotoFileType], [t0].[ClientShareTypeInfoId], [t0].[ClientSignatureFileData], [t0].[ClientSignatureFileName], [t0].[ClientSignatureFileType], [t0].[ClientSpouseName], [t0].[ClientSpouseOccupation], [t0].[ClientTelephoneNumber1], [t0].[ClientTelephoneNumber2], [t0].[ClientTypeId], [t0].[ClientUnitId], [t0].[ClientVotingId], [t0].[ClientWebsite], [t0].[CreatedBy], [t0].[CreatedOn], [t0].[CreatorId], [t0].[IsActive], [t0].[IsKYMUpdated], [t0].[IsModified], [t0].[IsShareAllowed], [t0].[KYMTypeId], [t0].[ModificationCount], [t0].[ModifiedBy], [t0].[ModifiedOn], [t0].[ModifierId], [t0].[NomineeAddress], [t0].[NomineeCitizenshipNumber], [t0].[NomineeContactNumber], [t0].[NomineeIntroducedBy], [t0].[NomineeName], [t0].[NomineeNepaliName], [t0].[NomineeNepaliRelation], [t0].[NomineePhotoFileData], [t0].[NomineePhotoFileName], [t0].[NomineePhotoFileType], [t0].[NomineeRelation], [t0].[PermanentDistrictCode], [t0].[PermanentStateCode], [t0].[PermanentToleVillage], [t0].[PermanentToleVillageNepali], [t0].[PermanentVdcMunicipality], [t0].[PermanentVdcMunicipalityNepali], [t0].[PermanentWardNumber], [t0].[PermanentWardNumberNepali], [t0].[RegistrationDate], [t0].[TemporaryDistrictCode], [t0].[TemporaryStateCode], [t0].[TemporaryToleVillage], [t0].[TemporaryToleVillageNepali], [t0].[TemporaryVdcMunicipality], [t0].[TemporaryVdcMunicipalityNepali], [t0].[TemporaryWardNumber], [t0].[TemporaryWardNumberNepali]
FROM (
    SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id] AS [Id0], [c].[BranchCode] AS [BranchCode0], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId] AS [ClientId0], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy] AS [CreatedBy0], [c].[CreatedOn], [c].[CreatorId] AS [CreatorId0], [c].[IsActive] AS [IsActive0], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy] AS [ModifiedBy0], [c].[ModifiedOn], [c].[ModifierId] AS [ModifierId0], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName] AS [NomineeName0], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id] AS [Id1], [d0].[BranchCode] AS [BranchCode1], [d0].[Calculation], [d0].[CompanyCalendarCreationDate] AS [CompanyCalendarCreationDate0], [d0].[CompanyCalendarModificationDate] AS [CompanyCalendarModificationDate0], [d0].[CreatedBy] AS [CreatedBy1], [d0].[CreatorId] AS [CreatorId1], [d0].[DepositSubledgerId], [d0].[InterestRate] AS [InterestRate0], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive] AS [IsActive1], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy] AS [ModifiedBy1], [d0].[ModifierBranchCode] AS [ModifierBranchCode0], [d0].[ModifierId] AS [ModifierId1], [d0].[PostingScheme], [d0].[RealWorldCreationDate] AS [RealWorldCreationDate0], [d0].[RealWorldModificationDate] AS [RealWorldModificationDate0], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id] AS [Id2], [d1].[AccountNumber] AS [AccountNumber0], [d1].[AccountType] AS [AccountType0], [d1].[BranchCode] AS [BranchCode2], [d1].[ClientId] AS [ClientId1], [d1].[CompanyCalendarCreationDate] AS [CompanyCalendarCreationDate1], [d1].[CompanyCalendarModificationDate] AS [CompanyCalendarModificationDate1], [d1].[CreatedBy] AS [CreatedBy2], [d1].[CreatorId] AS [CreatorId2], [d1].[DepositSchemeId] AS [DepositSchemeId0], [d1].[Description] AS [Description0], [d1].[ExpectedDailyDepositAmount] AS [ExpectedDailyDepositAmount0], [d1].[ExpectedTotalDepositAmount] AS [ExpectedTotalDepositAmount0], [d1].[ExpectedTotalDepositDay] AS [ExpectedTotalDepositDay0], [d1].[ExpectedTotalInterestAmount] AS [ExpectedTotalInterestAmount0], [d1].[ExpectedTotalReturnAmount] AS [ExpectedTotalReturnAmount0], [d1].[InterestAmount] AS [InterestAmount0], [d1].[InterestPostingAccountNumberId] AS [InterestPostingAccountNumberId0], [d1].[InterestRate] AS [InterestRate1], [d1].[IsActive] AS [IsActive2], [d1].[IsSMSServiceActive] AS [IsSMSServiceActive0], [d1].[MatureDate] AS [MatureDate0], [d1].[MatureInterestPostingAccountNumberId] AS [MatureInterestPostingAccountNumberId0], [d1].[ModifiedBy] AS [ModifiedBy2], [d1].[ModifierBranchCode] AS [ModifierBranchCode1], [d1].[ModifierId] AS [ModifierId2], [d1].[NomineeName] AS [NomineeName1], [d1].[OpeningDate] AS [OpeningDate0], [d1].[Period] AS [Period0], [d1].[PeriodType] AS [PeriodType0], [d1].[PrincipalAmount] AS [PrincipalAmount0], [d1].[RealWorldCreationDate] AS [RealWorldCreationDate1], [d1].[RealWorldModificationDate] AS [RealWorldModificationDate1], [d1].[ReferredByEmployeeId] AS [ReferredByEmployeeId0], [d1].[Relation] AS [Relation0], [d1].[SignatureFileData] AS [SignatureFileData0], [d1].[SignatureFileName] AS [SignatureFileName0], [d1].[SignatureFileType] AS [SignatureFileType0], [d1].[Status] AS [Status0]
    FROM [DepositAccounts] AS [d]
    INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
    INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
    LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
    WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [j].[Id], [j].[CompanyCalendarEndDate], [j].[CompanyCalendarStartDate], [j].[DepositAccountId], [j].[JointClientId], [j].[RealWorldEndDate], [j].[RealWorldStartDate], [c0].[Id] AS [Id0], [c0].[BranchCode], [c0].[ClientAccountPurposeNepali], [c0].[ClientCastCode], [c0].[ClientCitizenShipIssueDate], [c0].[ClientCitizenShipIssueDistrict], [c0].[ClientCitizenshipFileData], [c0].[ClientCitizenshipFileName], [c0].[ClientCitizenshipFileType], [c0].[ClientCitizenshipNumber], [c0].[ClientDateOfBirth], [c0].[ClientEducationStatus], [c0].[ClientEmail], [c0].[ClientFatherInLaw], [c0].[ClientFatherName], [c0].[ClientFatherNameNepali], [c0].[ClientFirstName], [c0].[ClientGenderCode], [c0].[ClientGrandFatherName], [c0].[ClientGrandFatherNameNepali], [c0].[ClientGroupId], [c0].[ClientId], [c0].[ClientIfMemberOfOtherParty], [c0].[ClientIncomeSource], [c0].[ClientLastName], [c0].[ClientMartialStatusCode], [c0].[ClientMiddleName], [c0].[ClientMobileNumber1], [c0].[ClientMobileNumber2], [c0].[ClientMotherInLaw], [c0].[ClientMotherName], [c0].[ClientMotherNameNepali], [c0].[ClientNameOfDaughters], [c0].[ClientNameOfSons], [c0].[ClientNationality], [c0].[ClientNationalityIdStatus], [c0].[ClientNepaliName], [c0].[ClientOccupation], [c0].[ClientOtherInfo], [c0].[ClientOtherInfo2], [c0].[ClientPanNumber], [c0].[ClientPhotoFileData], [c0].[ClientPhotoFileName], [c0].[ClientPhotoFileType], [c0].[ClientShareTypeInfoId], [c0].[ClientSignatureFileData], [c0].[ClientSignatureFileName], [c0].[ClientSignatureFileType], [c0].[ClientSpouseName], [c0].[ClientSpouseOccupation], [c0].[ClientTelephoneNumber1], [c0].[ClientTelephoneNumber2], [c0].[ClientTypeId], [c0].[ClientUnitId], [c0].[ClientVotingId], [c0].[ClientWebsite], [c0].[CreatedBy], [c0].[CreatedOn], [c0].[CreatorId], [c0].[IsActive], [c0].[IsKYMUpdated], [c0].[IsModified], [c0].[IsShareAllowed], [c0].[KYMTypeId], [c0].[ModificationCount], [c0].[ModifiedBy], [c0].[ModifiedOn], [c0].[ModifierId], [c0].[NomineeAddress], [c0].[NomineeCitizenshipNumber], [c0].[NomineeContactNumber], [c0].[NomineeIntroducedBy], [c0].[NomineeName], [c0].[NomineeNepaliName], [c0].[NomineeNepaliRelation], [c0].[NomineePhotoFileData], [c0].[NomineePhotoFileName], [c0].[NomineePhotoFileType], [c0].[NomineeRelation], [c0].[PermanentDistrictCode], [c0].[PermanentStateCode], [c0].[PermanentToleVillage], [c0].[PermanentToleVillageNepali], [c0].[PermanentVdcMunicipality], [c0].[PermanentVdcMunicipalityNepali], [c0].[PermanentWardNumber], [c0].[PermanentWardNumberNepali], [c0].[RegistrationDate], [c0].[TemporaryDistrictCode], [c0].[TemporaryStateCode], [c0].[TemporaryToleVillage], [c0].[TemporaryToleVillageNepali], [c0].[TemporaryVdcMunicipality], [c0].[TemporaryVdcMunicipalityNepali], [c0].[TemporaryWardNumber], [c0].[TemporaryWardNumberNepali]
    FROM [JointAccounts] AS [j]
    INNER JOIN [Clients] AS [c0] ON [j].[JointClientId] = [c0].[Id]
    WHERE ([j].[RealWorldEndDate] IS NULL) AND ([j].[CompanyCalendarEndDate] IS NULL)
) AS [t0] ON [t].[Id] = [t0].[DepositAccountId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t].[Id2], [t0].[Id]
2023-08-07 19:41:14.634 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-07 19:41:14.684 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='56'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [SubLedgers] AS [s]
INNER JOIN [Ledgers] AS [l] ON [s].[LedgerId] = [l].[Id]
WHERE [s].[Id] = @__id_0
2023-08-07 19:41:14.708 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [b0].[Id], [b0].[Name]
FROM [BankSetups] AS [b]
INNER JOIN [Ledgers] AS [l] ON [b].[LedgerId] = [l].[Id]
INNER JOIN [BankTypes] AS [b0] ON [b].[BankTypeId] = [b0].[Id]
WHERE [b].[Id] = @__id_0
2023-08-07 20:12:57.546 +05:45 [INF] 8/7/2023 8:12:57 PM: Locking required accounts for the Deposit transaction...
2023-08-07 20:13:04.615 +05:45 [INF] Executed DbCommand (14ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance]
FROM [BankSetups] AS [b]
WHERE [b].[Id] = @__p_0
2023-08-07 20:13:04.972 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[@p0='Ten Thousand' (Size = 4000), @p1='12345678' (Size = 4000), @p2='1' (Nullable = true), @p3='001' (Nullable = false) (Size = 4000), @p4='2022/1/1' (Nullable = false) (Size = 4000), @p5=NULL (Size = 4000), @p6='admin' (Nullable = false) (Size = 4000), @p7='b927006e-986f-4896-8313-457c8af5d369' (Nullable = false) (Size = 4000), @p8=NULL (Size = 4000), @p9=NULL (Size = 4000), @p10=NULL (Size = 4000), @p11='2' (Nullable = true), @p12='2023-08-07T19:41:14.7150461+05:45', @p13=NULL (DbType = DateTime2), @p14='DepositTransaction' (Size = 4000), @p15='1000' (Precision = 18) (Scale = 4), @p16=NULL (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([AmountInWords], [BankChequeNumber], [BankDetailId], [BranchCode], [CompanyCalendarCreationDate], [CompanyCalendarModificationDate], [CreatedBy], [CreatorId], [ModifiedBy], [ModifierBranchCode], [ModifierId], [PaymentType], [RealWorldCreationDate], [RealWorldModificationDate], [Remarks], [TransactionAmount], [VoucherNumber])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2023-08-07 20:13:05.099 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@p17='22', @p0='Ten Thousand' (Size = 4000), @p1='12345678' (Size = 4000), @p2='1' (Nullable = true), @p3='001' (Nullable = false) (Size = 4000), @p4='2022/1/1' (Nullable = false) (Size = 4000), @p5=NULL (Size = 4000), @p6='admin' (Nullable = false) (Size = 4000), @p7='b927006e-986f-4896-8313-457c8af5d369' (Nullable = false) (Size = 4000), @p8=NULL (Size = 4000), @p9=NULL (Size = 4000), @p10=NULL (Size = 4000), @p11='2' (Nullable = true), @p12='2023-08-07T19:41:14.7150461+05:45', @p13=NULL (DbType = DateTime2), @p14='DepositTransaction' (Size = 4000), @p15='1000' (Precision = 18) (Scale = 4), @p16='080/081VCH22001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Transactions] SET [AmountInWords] = @p0, [BankChequeNumber] = @p1, [BankDetailId] = @p2, [BranchCode] = @p3, [CompanyCalendarCreationDate] = @p4, [CompanyCalendarModificationDate] = @p5, [CreatedBy] = @p6, [CreatorId] = @p7, [ModifiedBy] = @p8, [ModifierBranchCode] = @p9, [ModifierId] = @p10, [PaymentType] = @p11, [RealWorldCreationDate] = @p12, [RealWorldModificationDate] = @p13, [Remarks] = @p14, [TransactionAmount] = @p15, [VoucherNumber] = @p16
OUTPUT 1
WHERE [Id] = @p17;
2023-08-07 20:13:05.137 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status]
FROM [DepositAccounts] AS [d]
WHERE [d].[Id] = @__p_0
2023-08-07 20:13:05.353 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__depositAccountTransactionWrapper_DepositSchemeSubLedgerId_0='56'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [SubLedgers] AS [s]
INNER JOIN [Ledgers] AS [l] ON [s].[LedgerId] = [l].[Id]
WHERE [s].[Id] = @__depositAccountTransactionWrapper_DepositSchemeSubLedgerId_0
2023-08-07 20:13:05.463 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__baseTransaction_BankDetail_LedgerId_0='75'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[Id] = @__baseTransaction_BankDetail_LedgerId_0
2023-08-07 20:13:05.555 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@p0='2000.0000' (Precision = 18) (Scale = 4), @p1='1' (Nullable = true), @p2='1', @p3='Cash Deposit: Ashish Adhikari' (Size = 4000), @p4='Transaction done as DepositTransaction' (Size = 4000), @p5='Salary' (Nullable = false) (Size = 4000), @p6='22', @p7='2', @p8=NULL (Size = 4000), @p9=NULL (DbType = Int32), @p11='1', @p10='2000.0000' (Precision = 18) (Scale = 4), @p12='1000.0000' (Precision = 18) (Scale = 4), @p13='75', @p14='Transaction done as DepositTransaction' (Size = 4000), @p15='22', @p16='1', @p18='18', @p17='2000.0000' (Precision = 18) (Scale = 4), @p20='75', @p19='1000.0000' (Precision = 18) (Scale = 4), @p21='2000.0000' (Precision = 18) (Scale = 4), @p22='Transaction done as DepositTransaction' (Size = 4000), @p23='56', @p24='22', @p25='2', @p27='56', @p26='2000.0000' (Precision = 18) (Scale = 4)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DepositAccountTransactions] ([BalanceAfterTransaction], [CollectedByEmployeeId], [DepositAccountId], [Narration], [Remarks], [Source], [TransactionId], [TransactionType], [WithDrawalChequeNumber], [WithDrawalType])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
UPDATE [DepositAccounts] SET [PrincipalAmount] = @p10
OUTPUT 1
WHERE [Id] = @p11;
INSERT INTO [LedgerTransactions] ([BalanceAfterTransaction], [LedgerId], [Remarks], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p12, @p13, @p14, @p15, @p16);
UPDATE [Ledgers] SET [CurrentBalance] = @p17
OUTPUT 1
WHERE [Id] = @p18;
UPDATE [Ledgers] SET [CurrentBalance] = @p19
OUTPUT 1
WHERE [Id] = @p20;
INSERT INTO [SubLedgerTransactions] ([BalanceAfterTransaction], [Remarks], [SubLedgerId], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p21, @p22, @p23, @p24, @p25);
UPDATE [SubLedgers] SET [CurrentBalance] = @p26
OUTPUT 1
WHERE [Id] = @p27;
2023-08-07 20:13:05.611 +05:45 [INF] 8/7/2023 8:13:05 PM: Releasing the locks...
2023-08-07 20:13:05.625 +05:45 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-08-07 20:13:05.628 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance) in 1932860.4362ms
2023-08-07 20:13:05.629 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeDeposit (MicroFinance)'
2023-08-07 20:13:05.633 +05:45 [INF] HTTP POST /Transaction/makeDeposit responded 200 in 1932866.3688 ms
2023-08-07 20:13:05.651 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeDeposit application/json 267 - 200 - text/plain;+charset=utf-8 1932887.5785ms
2023-08-07 20:15:48.172 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeWithDrawal application/json 327
2023-08-07 20:15:48.178 +05:45 [INF] CORS policy execution successful.
2023-08-07 20:15:48.179 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeWithDrawal (MicroFinance)'
2023-08-07 20:15:48.183 +05:45 [INF] Route matched with {action = "MakeWithDrawal", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeWithDrawal(MicroFinance.Dtos.Transactions.MakeWithDrawalTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 20:15:48.272 +05:45 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2023-08-07 20:15:48.276 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeWithDrawal (MicroFinance) in 93.3041ms
2023-08-07 20:15:48.277 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeWithDrawal (MicroFinance)'
2023-08-07 20:15:48.277 +05:45 [INF] HTTP POST /Transaction/makeWithDrawal responded 400 in 98.8947 ms
2023-08-07 20:15:48.277 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeWithDrawal application/json 327 - 400 - application/problem+json;+charset=utf-8 111.2604ms
2023-08-07 20:15:59.073 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/makeWithDrawal application/json 328
2023-08-07 20:15:59.074 +05:45 [INF] CORS policy execution successful.
2023-08-07 20:15:59.074 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeWithDrawal (MicroFinance)'
2023-08-07 20:15:59.074 +05:45 [INF] Route matched with {action = "MakeWithDrawal", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeWithDrawal(MicroFinance.Dtos.Transactions.MakeWithDrawalTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 20:16:01.650 +05:45 [INF] Executed DbCommand (25ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [Employees] AS [e]
WHERE [e].[Id] = @__p_0
2023-08-07 20:16:01.799 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccountNumber], [t].[AccountType], [t].[BranchCode], [t].[ClientId], [t].[CompanyCalendarCreationDate], [t].[CompanyCalendarModificationDate], [t].[CreatedBy], [t].[CreatorId], [t].[DepositSchemeId], [t].[Description], [t].[ExpectedDailyDepositAmount], [t].[ExpectedTotalDepositAmount], [t].[ExpectedTotalDepositDay], [t].[ExpectedTotalInterestAmount], [t].[ExpectedTotalReturnAmount], [t].[InterestAmount], [t].[InterestPostingAccountNumberId], [t].[InterestRate], [t].[IsActive], [t].[IsSMSServiceActive], [t].[MatureDate], [t].[MatureInterestPostingAccountNumberId], [t].[ModifiedBy], [t].[ModifierBranchCode], [t].[ModifierId], [t].[NomineeName], [t].[OpeningDate], [t].[Period], [t].[PeriodType], [t].[PrincipalAmount], [t].[RealWorldCreationDate], [t].[RealWorldModificationDate], [t].[ReferredByEmployeeId], [t].[Relation], [t].[SignatureFileData], [t].[SignatureFileName], [t].[SignatureFileType], [t].[Status], [t].[Id0], [t].[BranchCode0], [t].[ClientAccountPurposeNepali], [t].[ClientCastCode], [t].[ClientCitizenShipIssueDate], [t].[ClientCitizenShipIssueDistrict], [t].[ClientCitizenshipFileData], [t].[ClientCitizenshipFileName], [t].[ClientCitizenshipFileType], [t].[ClientCitizenshipNumber], [t].[ClientDateOfBirth], [t].[ClientEducationStatus], [t].[ClientEmail], [t].[ClientFatherInLaw], [t].[ClientFatherName], [t].[ClientFatherNameNepali], [t].[ClientFirstName], [t].[ClientGenderCode], [t].[ClientGrandFatherName], [t].[ClientGrandFatherNameNepali], [t].[ClientGroupId], [t].[ClientId0], [t].[ClientIfMemberOfOtherParty], [t].[ClientIncomeSource], [t].[ClientLastName], [t].[ClientMartialStatusCode], [t].[ClientMiddleName], [t].[ClientMobileNumber1], [t].[ClientMobileNumber2], [t].[ClientMotherInLaw], [t].[ClientMotherName], [t].[ClientMotherNameNepali], [t].[ClientNameOfDaughters], [t].[ClientNameOfSons], [t].[ClientNationality], [t].[ClientNationalityIdStatus], [t].[ClientNepaliName], [t].[ClientOccupation], [t].[ClientOtherInfo], [t].[ClientOtherInfo2], [t].[ClientPanNumber], [t].[ClientPhotoFileData], [t].[ClientPhotoFileName], [t].[ClientPhotoFileType], [t].[ClientShareTypeInfoId], [t].[ClientSignatureFileData], [t].[ClientSignatureFileName], [t].[ClientSignatureFileType], [t].[ClientSpouseName], [t].[ClientSpouseOccupation], [t].[ClientTelephoneNumber1], [t].[ClientTelephoneNumber2], [t].[ClientTypeId], [t].[ClientUnitId], [t].[ClientVotingId], [t].[ClientWebsite], [t].[CreatedBy0], [t].[CreatedOn], [t].[CreatorId0], [t].[IsActive0], [t].[IsKYMUpdated], [t].[IsModified], [t].[IsShareAllowed], [t].[KYMTypeId], [t].[ModificationCount], [t].[ModifiedBy0], [t].[ModifiedOn], [t].[ModifierId0], [t].[NomineeAddress], [t].[NomineeCitizenshipNumber], [t].[NomineeContactNumber], [t].[NomineeIntroducedBy], [t].[NomineeName0], [t].[NomineeNepaliName], [t].[NomineeNepaliRelation], [t].[NomineePhotoFileData], [t].[NomineePhotoFileName], [t].[NomineePhotoFileType], [t].[NomineeRelation], [t].[PermanentDistrictCode], [t].[PermanentStateCode], [t].[PermanentToleVillage], [t].[PermanentToleVillageNepali], [t].[PermanentVdcMunicipality], [t].[PermanentVdcMunicipalityNepali], [t].[PermanentWardNumber], [t].[PermanentWardNumberNepali], [t].[RegistrationDate], [t].[TemporaryDistrictCode], [t].[TemporaryStateCode], [t].[TemporaryToleVillage], [t].[TemporaryToleVillageNepali], [t].[TemporaryVdcMunicipality], [t].[TemporaryVdcMunicipalityNepali], [t].[TemporaryWardNumber], [t].[TemporaryWardNumberNepali], [t].[Id1], [t].[BranchCode1], [t].[Calculation], [t].[CompanyCalendarCreationDate0], [t].[CompanyCalendarModificationDate0], [t].[CreatedBy1], [t].[CreatorId1], [t].[DepositSubledgerId], [t].[InterestRate0], [t].[InterestRateOnMinimumBalance], [t].[InterestSubLedgerId], [t].[IsActive1], [t].[MaximumInterestRate], [t].[MinimumBalance], [t].[MinimumInterestRate], [t].[ModifiedBy1], [t].[ModifierBranchCode0], [t].[ModifierId1], [t].[PostingScheme], [t].[RealWorldCreationDate0], [t].[RealWorldModificationDate0], [t].[SchemeName], [t].[SchemeNameNepali], [t].[SchemeTypeId], [t].[Symbol], [t].[TaxSubledgerId], [t].[Id2], [t].[AccountNumber0], [t].[AccountType0], [t].[BranchCode2], [t].[ClientId1], [t].[CompanyCalendarCreationDate1], [t].[CompanyCalendarModificationDate1], [t].[CreatedBy2], [t].[CreatorId2], [t].[DepositSchemeId0], [t].[Description0], [t].[ExpectedDailyDepositAmount0], [t].[ExpectedTotalDepositAmount0], [t].[ExpectedTotalDepositDay0], [t].[ExpectedTotalInterestAmount0], [t].[ExpectedTotalReturnAmount0], [t].[InterestAmount0], [t].[InterestPostingAccountNumberId0], [t].[InterestRate1], [t].[IsActive2], [t].[IsSMSServiceActive0], [t].[MatureDate0], [t].[MatureInterestPostingAccountNumberId0], [t].[ModifiedBy2], [t].[ModifierBranchCode1], [t].[ModifierId2], [t].[NomineeName1], [t].[OpeningDate0], [t].[Period0], [t].[PeriodType0], [t].[PrincipalAmount0], [t].[RealWorldCreationDate1], [t].[RealWorldModificationDate1], [t].[ReferredByEmployeeId0], [t].[Relation0], [t].[SignatureFileData0], [t].[SignatureFileName0], [t].[SignatureFileType0], [t].[Status0], [t0].[Id], [t0].[CompanyCalendarEndDate], [t0].[CompanyCalendarStartDate], [t0].[DepositAccountId], [t0].[JointClientId], [t0].[RealWorldEndDate], [t0].[RealWorldStartDate], [t0].[Id0], [t0].[BranchCode], [t0].[ClientAccountPurposeNepali], [t0].[ClientCastCode], [t0].[ClientCitizenShipIssueDate], [t0].[ClientCitizenShipIssueDistrict], [t0].[ClientCitizenshipFileData], [t0].[ClientCitizenshipFileName], [t0].[ClientCitizenshipFileType], [t0].[ClientCitizenshipNumber], [t0].[ClientDateOfBirth], [t0].[ClientEducationStatus], [t0].[ClientEmail], [t0].[ClientFatherInLaw], [t0].[ClientFatherName], [t0].[ClientFatherNameNepali], [t0].[ClientFirstName], [t0].[ClientGenderCode], [t0].[ClientGrandFatherName], [t0].[ClientGrandFatherNameNepali], [t0].[ClientGroupId], [t0].[ClientId], [t0].[ClientIfMemberOfOtherParty], [t0].[ClientIncomeSource], [t0].[ClientLastName], [t0].[ClientMartialStatusCode], [t0].[ClientMiddleName], [t0].[ClientMobileNumber1], [t0].[ClientMobileNumber2], [t0].[ClientMotherInLaw], [t0].[ClientMotherName], [t0].[ClientMotherNameNepali], [t0].[ClientNameOfDaughters], [t0].[ClientNameOfSons], [t0].[ClientNationality], [t0].[ClientNationalityIdStatus], [t0].[ClientNepaliName], [t0].[ClientOccupation], [t0].[ClientOtherInfo], [t0].[ClientOtherInfo2], [t0].[ClientPanNumber], [t0].[ClientPhotoFileData], [t0].[ClientPhotoFileName], [t0].[ClientPhotoFileType], [t0].[ClientShareTypeInfoId], [t0].[ClientSignatureFileData], [t0].[ClientSignatureFileName], [t0].[ClientSignatureFileType], [t0].[ClientSpouseName], [t0].[ClientSpouseOccupation], [t0].[ClientTelephoneNumber1], [t0].[ClientTelephoneNumber2], [t0].[ClientTypeId], [t0].[ClientUnitId], [t0].[ClientVotingId], [t0].[ClientWebsite], [t0].[CreatedBy], [t0].[CreatedOn], [t0].[CreatorId], [t0].[IsActive], [t0].[IsKYMUpdated], [t0].[IsModified], [t0].[IsShareAllowed], [t0].[KYMTypeId], [t0].[ModificationCount], [t0].[ModifiedBy], [t0].[ModifiedOn], [t0].[ModifierId], [t0].[NomineeAddress], [t0].[NomineeCitizenshipNumber], [t0].[NomineeContactNumber], [t0].[NomineeIntroducedBy], [t0].[NomineeName], [t0].[NomineeNepaliName], [t0].[NomineeNepaliRelation], [t0].[NomineePhotoFileData], [t0].[NomineePhotoFileName], [t0].[NomineePhotoFileType], [t0].[NomineeRelation], [t0].[PermanentDistrictCode], [t0].[PermanentStateCode], [t0].[PermanentToleVillage], [t0].[PermanentToleVillageNepali], [t0].[PermanentVdcMunicipality], [t0].[PermanentVdcMunicipalityNepali], [t0].[PermanentWardNumber], [t0].[PermanentWardNumberNepali], [t0].[RegistrationDate], [t0].[TemporaryDistrictCode], [t0].[TemporaryStateCode], [t0].[TemporaryToleVillage], [t0].[TemporaryToleVillageNepali], [t0].[TemporaryVdcMunicipality], [t0].[TemporaryVdcMunicipalityNepali], [t0].[TemporaryWardNumber], [t0].[TemporaryWardNumberNepali]
FROM (
    SELECT TOP(2) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status], [c].[Id] AS [Id0], [c].[BranchCode] AS [BranchCode0], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId] AS [ClientId0], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy] AS [CreatedBy0], [c].[CreatedOn], [c].[CreatorId] AS [CreatorId0], [c].[IsActive] AS [IsActive0], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy] AS [ModifiedBy0], [c].[ModifiedOn], [c].[ModifierId] AS [ModifierId0], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName] AS [NomineeName0], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [d0].[Id] AS [Id1], [d0].[BranchCode] AS [BranchCode1], [d0].[Calculation], [d0].[CompanyCalendarCreationDate] AS [CompanyCalendarCreationDate0], [d0].[CompanyCalendarModificationDate] AS [CompanyCalendarModificationDate0], [d0].[CreatedBy] AS [CreatedBy1], [d0].[CreatorId] AS [CreatorId1], [d0].[DepositSubledgerId], [d0].[InterestRate] AS [InterestRate0], [d0].[InterestRateOnMinimumBalance], [d0].[InterestSubLedgerId], [d0].[IsActive] AS [IsActive1], [d0].[MaximumInterestRate], [d0].[MinimumBalance], [d0].[MinimumInterestRate], [d0].[ModifiedBy] AS [ModifiedBy1], [d0].[ModifierBranchCode] AS [ModifierBranchCode0], [d0].[ModifierId] AS [ModifierId1], [d0].[PostingScheme], [d0].[RealWorldCreationDate] AS [RealWorldCreationDate0], [d0].[RealWorldModificationDate] AS [RealWorldModificationDate0], [d0].[SchemeName], [d0].[SchemeNameNepali], [d0].[SchemeTypeId], [d0].[Symbol], [d0].[TaxSubledgerId], [d1].[Id] AS [Id2], [d1].[AccountNumber] AS [AccountNumber0], [d1].[AccountType] AS [AccountType0], [d1].[BranchCode] AS [BranchCode2], [d1].[ClientId] AS [ClientId1], [d1].[CompanyCalendarCreationDate] AS [CompanyCalendarCreationDate1], [d1].[CompanyCalendarModificationDate] AS [CompanyCalendarModificationDate1], [d1].[CreatedBy] AS [CreatedBy2], [d1].[CreatorId] AS [CreatorId2], [d1].[DepositSchemeId] AS [DepositSchemeId0], [d1].[Description] AS [Description0], [d1].[ExpectedDailyDepositAmount] AS [ExpectedDailyDepositAmount0], [d1].[ExpectedTotalDepositAmount] AS [ExpectedTotalDepositAmount0], [d1].[ExpectedTotalDepositDay] AS [ExpectedTotalDepositDay0], [d1].[ExpectedTotalInterestAmount] AS [ExpectedTotalInterestAmount0], [d1].[ExpectedTotalReturnAmount] AS [ExpectedTotalReturnAmount0], [d1].[InterestAmount] AS [InterestAmount0], [d1].[InterestPostingAccountNumberId] AS [InterestPostingAccountNumberId0], [d1].[InterestRate] AS [InterestRate1], [d1].[IsActive] AS [IsActive2], [d1].[IsSMSServiceActive] AS [IsSMSServiceActive0], [d1].[MatureDate] AS [MatureDate0], [d1].[MatureInterestPostingAccountNumberId] AS [MatureInterestPostingAccountNumberId0], [d1].[ModifiedBy] AS [ModifiedBy2], [d1].[ModifierBranchCode] AS [ModifierBranchCode1], [d1].[ModifierId] AS [ModifierId2], [d1].[NomineeName] AS [NomineeName1], [d1].[OpeningDate] AS [OpeningDate0], [d1].[Period] AS [Period0], [d1].[PeriodType] AS [PeriodType0], [d1].[PrincipalAmount] AS [PrincipalAmount0], [d1].[RealWorldCreationDate] AS [RealWorldCreationDate1], [d1].[RealWorldModificationDate] AS [RealWorldModificationDate1], [d1].[ReferredByEmployeeId] AS [ReferredByEmployeeId0], [d1].[Relation] AS [Relation0], [d1].[SignatureFileData] AS [SignatureFileData0], [d1].[SignatureFileName] AS [SignatureFileName0], [d1].[SignatureFileType] AS [SignatureFileType0], [d1].[Status] AS [Status0]
    FROM [DepositAccounts] AS [d]
    INNER JOIN [Clients] AS [c] ON [d].[ClientId] = [c].[Id]
    INNER JOIN [DepositSchemes] AS [d0] ON [d].[DepositSchemeId] = [d0].[Id]
    LEFT JOIN [DepositAccounts] AS [d1] ON [d].[InterestPostingAccountNumberId] = [d1].[Id]
    WHERE [d].[Status] <> 3 AND [d].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [j].[Id], [j].[CompanyCalendarEndDate], [j].[CompanyCalendarStartDate], [j].[DepositAccountId], [j].[JointClientId], [j].[RealWorldEndDate], [j].[RealWorldStartDate], [c0].[Id] AS [Id0], [c0].[BranchCode], [c0].[ClientAccountPurposeNepali], [c0].[ClientCastCode], [c0].[ClientCitizenShipIssueDate], [c0].[ClientCitizenShipIssueDistrict], [c0].[ClientCitizenshipFileData], [c0].[ClientCitizenshipFileName], [c0].[ClientCitizenshipFileType], [c0].[ClientCitizenshipNumber], [c0].[ClientDateOfBirth], [c0].[ClientEducationStatus], [c0].[ClientEmail], [c0].[ClientFatherInLaw], [c0].[ClientFatherName], [c0].[ClientFatherNameNepali], [c0].[ClientFirstName], [c0].[ClientGenderCode], [c0].[ClientGrandFatherName], [c0].[ClientGrandFatherNameNepali], [c0].[ClientGroupId], [c0].[ClientId], [c0].[ClientIfMemberOfOtherParty], [c0].[ClientIncomeSource], [c0].[ClientLastName], [c0].[ClientMartialStatusCode], [c0].[ClientMiddleName], [c0].[ClientMobileNumber1], [c0].[ClientMobileNumber2], [c0].[ClientMotherInLaw], [c0].[ClientMotherName], [c0].[ClientMotherNameNepali], [c0].[ClientNameOfDaughters], [c0].[ClientNameOfSons], [c0].[ClientNationality], [c0].[ClientNationalityIdStatus], [c0].[ClientNepaliName], [c0].[ClientOccupation], [c0].[ClientOtherInfo], [c0].[ClientOtherInfo2], [c0].[ClientPanNumber], [c0].[ClientPhotoFileData], [c0].[ClientPhotoFileName], [c0].[ClientPhotoFileType], [c0].[ClientShareTypeInfoId], [c0].[ClientSignatureFileData], [c0].[ClientSignatureFileName], [c0].[ClientSignatureFileType], [c0].[ClientSpouseName], [c0].[ClientSpouseOccupation], [c0].[ClientTelephoneNumber1], [c0].[ClientTelephoneNumber2], [c0].[ClientTypeId], [c0].[ClientUnitId], [c0].[ClientVotingId], [c0].[ClientWebsite], [c0].[CreatedBy], [c0].[CreatedOn], [c0].[CreatorId], [c0].[IsActive], [c0].[IsKYMUpdated], [c0].[IsModified], [c0].[IsShareAllowed], [c0].[KYMTypeId], [c0].[ModificationCount], [c0].[ModifiedBy], [c0].[ModifiedOn], [c0].[ModifierId], [c0].[NomineeAddress], [c0].[NomineeCitizenshipNumber], [c0].[NomineeContactNumber], [c0].[NomineeIntroducedBy], [c0].[NomineeName], [c0].[NomineeNepaliName], [c0].[NomineeNepaliRelation], [c0].[NomineePhotoFileData], [c0].[NomineePhotoFileName], [c0].[NomineePhotoFileType], [c0].[NomineeRelation], [c0].[PermanentDistrictCode], [c0].[PermanentStateCode], [c0].[PermanentToleVillage], [c0].[PermanentToleVillageNepali], [c0].[PermanentVdcMunicipality], [c0].[PermanentVdcMunicipalityNepali], [c0].[PermanentWardNumber], [c0].[PermanentWardNumberNepali], [c0].[RegistrationDate], [c0].[TemporaryDistrictCode], [c0].[TemporaryStateCode], [c0].[TemporaryToleVillage], [c0].[TemporaryToleVillageNepali], [c0].[TemporaryVdcMunicipality], [c0].[TemporaryVdcMunicipalityNepali], [c0].[TemporaryWardNumber], [c0].[TemporaryWardNumberNepali]
    FROM [JointAccounts] AS [j]
    INNER JOIN [Clients] AS [c0] ON [j].[JointClientId] = [c0].[Id]
    WHERE ([j].[RealWorldEndDate] IS NULL) AND ([j].[CompanyCalendarEndDate] IS NULL)
) AS [t0] ON [t].[Id] = [t0].[DepositAccountId]
ORDER BY [t].[Id], [t].[Id0], [t].[Id1], [t].[Id2], [t0].[Id]
2023-08-07 20:16:01.881 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-07 20:16:01.907 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='56'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [SubLedgers] AS [s]
INNER JOIN [Ledgers] AS [l] ON [s].[LedgerId] = [l].[Id]
WHERE [s].[Id] = @__id_0
2023-08-07 20:16:01.971 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [b0].[Id], [b0].[Name]
FROM [BankSetups] AS [b]
INNER JOIN [Ledgers] AS [l] ON [b].[LedgerId] = [l].[Id]
INNER JOIN [BankTypes] AS [b0] ON [b].[BankTypeId] = [b0].[Id]
WHERE [b].[Id] = @__id_0
2023-08-07 20:16:02.041 +05:45 [INF] 8/7/2023 8:16:02 PM: Locking required accounts for the Deposit transaction...
2023-08-07 20:16:02.065 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance]
FROM [BankSetups] AS [b]
WHERE [b].[Id] = @__p_0
2023-08-07 20:16:02.113 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@p0='Ten Thousand' (Size = 4000), @p1='12345678' (Size = 4000), @p2='1' (Nullable = true), @p3='001' (Nullable = false) (Size = 4000), @p4='2022/1/1' (Nullable = false) (Size = 4000), @p5=NULL (Size = 4000), @p6='admin' (Nullable = false) (Size = 4000), @p7='b927006e-986f-4896-8313-457c8af5d369' (Nullable = false) (Size = 4000), @p8=NULL (Size = 4000), @p9=NULL (Size = 4000), @p10=NULL (Size = 4000), @p11='2' (Nullable = true), @p12='2023-08-07T20:16:02.0353967+05:45', @p13=NULL (DbType = DateTime2), @p14='WithdrawalTransaction' (Size = 4000), @p15='1000' (Precision = 18) (Scale = 4), @p16=NULL (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([AmountInWords], [BankChequeNumber], [BankDetailId], [BranchCode], [CompanyCalendarCreationDate], [CompanyCalendarModificationDate], [CreatedBy], [CreatorId], [ModifiedBy], [ModifierBranchCode], [ModifierId], [PaymentType], [RealWorldCreationDate], [RealWorldModificationDate], [Remarks], [TransactionAmount], [VoucherNumber])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2023-08-07 20:16:02.118 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[@p17='23', @p0='Ten Thousand' (Size = 4000), @p1='12345678' (Size = 4000), @p2='1' (Nullable = true), @p3='001' (Nullable = false) (Size = 4000), @p4='2022/1/1' (Nullable = false) (Size = 4000), @p5=NULL (Size = 4000), @p6='admin' (Nullable = false) (Size = 4000), @p7='b927006e-986f-4896-8313-457c8af5d369' (Nullable = false) (Size = 4000), @p8=NULL (Size = 4000), @p9=NULL (Size = 4000), @p10=NULL (Size = 4000), @p11='2' (Nullable = true), @p12='2023-08-07T20:16:02.0353967+05:45', @p13=NULL (DbType = DateTime2), @p14='WithdrawalTransaction' (Size = 4000), @p15='1000' (Precision = 18) (Scale = 4), @p16='080/081VCH23001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Transactions] SET [AmountInWords] = @p0, [BankChequeNumber] = @p1, [BankDetailId] = @p2, [BranchCode] = @p3, [CompanyCalendarCreationDate] = @p4, [CompanyCalendarModificationDate] = @p5, [CreatedBy] = @p6, [CreatorId] = @p7, [ModifiedBy] = @p8, [ModifierBranchCode] = @p9, [ModifierId] = @p10, [PaymentType] = @p11, [RealWorldCreationDate] = @p12, [RealWorldModificationDate] = @p13, [Remarks] = @p14, [TransactionAmount] = @p15, [VoucherNumber] = @p16
OUTPUT 1
WHERE [Id] = @p17;
2023-08-07 20:16:02.163 +05:45 [INF] Executed DbCommand (43ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[AccountNumber], [d].[AccountType], [d].[BranchCode], [d].[ClientId], [d].[CompanyCalendarCreationDate], [d].[CompanyCalendarModificationDate], [d].[CreatedBy], [d].[CreatorId], [d].[DepositSchemeId], [d].[Description], [d].[ExpectedDailyDepositAmount], [d].[ExpectedTotalDepositAmount], [d].[ExpectedTotalDepositDay], [d].[ExpectedTotalInterestAmount], [d].[ExpectedTotalReturnAmount], [d].[InterestAmount], [d].[InterestPostingAccountNumberId], [d].[InterestRate], [d].[IsActive], [d].[IsSMSServiceActive], [d].[MatureDate], [d].[MatureInterestPostingAccountNumberId], [d].[ModifiedBy], [d].[ModifierBranchCode], [d].[ModifierId], [d].[NomineeName], [d].[OpeningDate], [d].[Period], [d].[PeriodType], [d].[PrincipalAmount], [d].[RealWorldCreationDate], [d].[RealWorldModificationDate], [d].[ReferredByEmployeeId], [d].[Relation], [d].[SignatureFileData], [d].[SignatureFileName], [d].[SignatureFileType], [d].[Status]
FROM [DepositAccounts] AS [d]
WHERE [d].[Id] = @__p_0
2023-08-07 20:16:02.169 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__depositAccountTransactionWrapper_DepositSchemeSubLedgerId_0='56'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [s].[Id], [s].[CurrentBalance], [s].[Description], [s].[LedgerId], [s].[Name], [s].[SubLedgerCode], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [SubLedgers] AS [s]
INNER JOIN [Ledgers] AS [l] ON [s].[LedgerId] = [l].[Id]
WHERE [s].[Id] = @__depositAccountTransactionWrapper_DepositSchemeSubLedgerId_0
2023-08-07 20:16:02.174 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__baseTransaction_BankDetail_LedgerId_0='75'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[Id] = @__baseTransaction_BankDetail_LedgerId_0
2023-08-07 20:16:02.205 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@p0='1000.0000' (Precision = 18) (Scale = 4), @p1='1' (Nullable = true), @p2='1', @p3='Cash Deposit: Ashish Adhikari' (Size = 4000), @p4='Transaction done as WithdrawalTransaction' (Size = 4000), @p5='Salary' (Nullable = false) (Size = 4000), @p6='23', @p7='1', @p8='123456' (Size = 4000), @p9='1' (Nullable = true), @p11='1', @p10='1000.0000' (Precision = 18) (Scale = 4), @p12='0.0000' (Precision = 18) (Scale = 4), @p13='75', @p14='Transaction done as WithdrawalTransaction' (Size = 4000), @p15='23', @p16='2', @p18='18', @p17='1000.0000' (Precision = 18) (Scale = 4), @p20='75', @p19='0.0000' (Precision = 18) (Scale = 4), @p21='1000.0000' (Precision = 18) (Scale = 4), @p22='Transaction done as WithdrawalTransaction' (Size = 4000), @p23='56', @p24='23', @p25='1', @p27='56', @p26='1000.0000' (Precision = 18) (Scale = 4)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DepositAccountTransactions] ([BalanceAfterTransaction], [CollectedByEmployeeId], [DepositAccountId], [Narration], [Remarks], [Source], [TransactionId], [TransactionType], [WithDrawalChequeNumber], [WithDrawalType])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
UPDATE [DepositAccounts] SET [PrincipalAmount] = @p10
OUTPUT 1
WHERE [Id] = @p11;
INSERT INTO [LedgerTransactions] ([BalanceAfterTransaction], [LedgerId], [Remarks], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p12, @p13, @p14, @p15, @p16);
UPDATE [Ledgers] SET [CurrentBalance] = @p17
OUTPUT 1
WHERE [Id] = @p18;
UPDATE [Ledgers] SET [CurrentBalance] = @p19
OUTPUT 1
WHERE [Id] = @p20;
INSERT INTO [SubLedgerTransactions] ([BalanceAfterTransaction], [Remarks], [SubLedgerId], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p21, @p22, @p23, @p24, @p25);
UPDATE [SubLedgers] SET [CurrentBalance] = @p26
OUTPUT 1
WHERE [Id] = @p27;
2023-08-07 20:16:02.218 +05:45 [INF] 8/7/2023 8:16:02 PM: Releasing the locks...
2023-08-07 20:16:02.218 +05:45 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-08-07 20:16:02.219 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeWithDrawal (MicroFinance) in 3144.5935ms
2023-08-07 20:16:02.219 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeWithDrawal (MicroFinance)'
2023-08-07 20:16:02.219 +05:45 [INF] HTTP POST /Transaction/makeWithDrawal responded 200 in 3145.6312 ms
2023-08-07 20:16:02.220 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/makeWithDrawal application/json 328 - 200 - text/plain;+charset=utf-8 3146.9511ms
2023-08-07 20:36:40.807 +05:45 [INF] Executed DbCommand (66ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 20:36:40.946 +05:45 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 20:36:40.959 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 20:36:40.961 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 20:36:41.029 +05:45 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 20:36:41.071 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 20:36:41.445 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:41.702 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 20:36:41.704 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 20:36:41.706 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 20:36:41.708 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 20:36:41.713 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 20:36:41.714 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 20:36:41.995 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-07 20:36:42.010 +05:45 [WRN] The foreign key property 'ShareAccount.ClientId1' was created in shadow state because a conflicting property with the simple name 'ClientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-08-07 20:36:42.026 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 20:36:42.026 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 20:36:42.164 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 20:36:42.168 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 20:36:42.169 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 20:36:42.173 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 20:36:42.186 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 20:36:42.200 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 20:36:42.205 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.209 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.216 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.230 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.241 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.246 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.251 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.255 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.259 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.265 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.275 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.280 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.283 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.287 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.291 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.296 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.300 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.305 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.311 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:36:42.499 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-07 20:36:42.680 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-07 20:36:42.681 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-07 20:36:42.685 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-07 20:36:42.706 +05:45 [INF] Hosting environment: Development
2023-08-07 20:36:42.706 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-07 20:39:42.903 +05:45 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 20:39:43.027 +05:45 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 20:39:43.041 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 20:39:43.043 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 20:39:43.142 +05:45 [INF] Executed DbCommand (74ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 20:39:43.182 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 20:39:43.516 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:43.712 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 20:39:43.714 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 20:39:43.715 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 20:39:43.716 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 20:39:43.720 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 20:39:43.721 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 20:39:43.970 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-07 20:39:43.982 +05:45 [WRN] The foreign key property 'ShareAccount.ClientId1' was created in shadow state because a conflicting property with the simple name 'ClientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-08-07 20:39:43.997 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 20:39:43.997 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 20:39:44.147 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 20:39:44.149 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 20:39:44.171 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 20:39:44.173 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 20:39:44.176 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 20:39:44.180 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 20:39:44.184 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.190 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.194 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.205 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.213 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.216 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.220 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.223 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.226 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.228 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.236 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.239 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.241 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.244 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.246 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.251 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.254 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.257 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.261 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 20:39:44.374 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-07 20:39:44.521 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-07 20:39:44.521 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-07 20:39:44.525 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-07 20:39:44.526 +05:45 [INF] Hosting environment: Development
2023-08-07 20:39:44.526 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-07 20:40:10.218 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-07 20:40:10.522 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 306.4386ms
2023-08-07 20:40:10.864 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-07 20:40:11.253 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 388.4428ms
2023-08-07 21:15:59.566 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-07 21:15:59.715 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:15:59.717 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:16:00.117 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:16:00.118 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:16:11.829 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-07 21:16:11.964 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:16:11.966 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:16:12.624 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:16:12.661 +05:45 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:16:12.668 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:16:12.669 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:16:12.689 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:16:12.712 +05:45 [INF] Applying migration '20230807153100_Share Transaction1.1'.
2023-08-07 21:16:12.851 +05:45 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE [ShareAccounts] DROP CONSTRAINT [FK_ShareAccounts_Clients_ClientId1];
2023-08-07 21:16:12.854 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP INDEX [IX_ShareAccounts_ClientId] ON [ShareAccounts];
2023-08-07 21:16:12.856 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP INDEX [IX_ShareAccounts_ClientId1] ON [ShareAccounts];
2023-08-07 21:16:12.880 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var0 sysname;
SELECT @var0 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[ShareAccounts]') AND [c].[name] = N'ClientId1');
IF @var0 IS NOT NULL EXEC(N'ALTER TABLE [ShareAccounts] DROP CONSTRAINT [' + @var0 + '];');
ALTER TABLE [ShareAccounts] DROP COLUMN [ClientId1];
2023-08-07 21:16:12.887 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_ShareAccounts_ClientId] ON [ShareAccounts] ([ClientId]);
2023-08-07 21:16:12.889 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20230807153100_Share Transaction1.1', N'7.0.5');
2023-08-07 21:16:37.473 +05:45 [INF] Executed DbCommand (83ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:16:37.620 +05:45 [INF] Executed DbCommand (70ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:16:37.638 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:16:37.639 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:16:37.680 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:16:37.718 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:16:38.078 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.343 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:16:38.345 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:16:38.346 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:16:38.347 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:16:38.359 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:16:38.360 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:16:38.634 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-07 21:16:38.654 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:16:38.655 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:16:38.781 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:16:38.784 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:16:38.827 +05:45 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:16:38.828 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:16:38.831 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:16:38.836 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:16:38.840 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.846 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.852 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.869 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.886 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.901 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.906 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.908 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.911 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.914 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.928 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.934 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.939 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.942 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.946 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.951 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.956 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.963 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:38.967 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:16:39.128 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-07 21:16:39.300 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-07 21:16:39.300 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-07 21:16:39.305 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-07 21:16:39.306 +05:45 [INF] Hosting environment: Development
2023-08-07 21:16:39.306 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-07 21:19:14.969 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/ClientSetup/createNewClient multipart/form-data;+boundary=----WebKitFormBoundaryqZYA2JrCZndgNdNa 8217
2023-08-07 21:19:15.090 +05:45 [INF] CORS policy execution successful.
2023-08-07 21:19:15.532 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.ClientSetup.ClientSetupController.CreateClient (MicroFinance)'
2023-08-07 21:19:15.928 +05:45 [INF] Route matched with {action = "CreateClient", controller = "ClientSetup"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateClient(MicroFinance.Dtos.ClientSetup.CreateClientDto) on controller MicroFinance.Controllers.ClientSetup.ClientSetupController (MicroFinance).
2023-08-07 21:19:16.437 +05:45 [INF] Executed DbCommand (82ms) [Parameters=[@__id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-07 21:19:16.755 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[@__branchCode_0='001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-07 21:19:16.892 +05:45 [INF] 8/7/2023 9:19:16 PM Creating new Client Prem Adhikari
2023-08-07 21:19:16.938 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='17'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[Id] = @__p_0
2023-08-07 21:19:16.998 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Type]
FROM [ClientTypes] AS [c]
WHERE [c].[Id] = @__p_0
2023-08-07 21:19:17.012 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Code]
FROM [ClientGroups] AS [c]
WHERE [c].[Id] = @__p_0
2023-08-07 21:19:17.028 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Code]
FROM [ClientUnits] AS [c]
WHERE [c].[Id] = @__p_0
2023-08-07 21:19:17.476 +05:45 [INF] Executed DbCommand (20ms) [Parameters=[@p0='001' (Nullable = false) (Size = 4000), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3=NULL (DbType = DateTime2), @p4=NULL (Size = 4000), @p5=NULL (Size = 8000) (DbType = Binary), @p6=NULL (Size = 4000), @p7=NULL (DbType = Int32), @p8=NULL (Size = 4000), @p9=NULL (DbType = DateTime2), @p10=NULL (Size = 4000), @p11=NULL (Size = 4000), @p12=NULL (Size = 4000), @p13=NULL (Size = 4000), @p14=NULL (Size = 4000), @p15='Prem' (Nullable = false) (Size = 4000), @p16=NULL (DbType = Int32), @p17=NULL (Size = 4000), @p18=NULL (Size = 4000), @p19='1' (Nullable = true), @p20=NULL (Size = 450), @p21=NULL (Size = 4000), @p22=NULL (Size = 4000), @p23='Adhikari' (Nullable = false) (Size = 4000), @p24=NULL (DbType = Int32), @p25='Nath' (Size = 4000), @p26=NULL (Size = 4000), @p27=NULL (Size = 4000), @p28=NULL (Size = 4000), @p29=NULL (Size = 4000), @p30=NULL (Size = 4000), @p31=NULL (Size = 4000), @p32=NULL (Size = 4000), @p33=NULL (Size = 4000), @p34=NULL (Size = 4000), @p35=NULL (Size = 4000), @p36=NULL (Size = 4000), @p37=NULL (Size = 4000), @p38=NULL (Size = 4000), @p39=NULL (Size = 4000), @p40=NULL (Size = 8000) (DbType = Binary), @p41=NULL (Size = 4000), @p42=NULL (DbType = Int32), @p43='17' (Nullable = true), @p44=NULL (Size = 8000) (DbType = Binary), @p45=NULL (Size = 4000), @p46=NULL (DbType = Int32), @p47=NULL (Size = 4000), @p48=NULL (Size = 4000), @p49=NULL (Size = 4000), @p50=NULL (Size = 4000), @p51='2', @p52='1' (Nullable = true), @p53=NULL (Size = 4000), @p54=NULL (Size = 4000), @p55='admin' (Nullable = false) (Size = 4000), @p56='2023-08-07T21:19:16.8573917+05:45', @p57='b927006e-986f-4896-8313-457c8af5d369' (Nullable = false) (Size = 4000), @p58='True', @p59='True', @p60=NULL (DbType = Boolean), @p61='True', @p62=NULL (DbType = Int32), @p63=NULL (DbType = Int32), @p64=NULL (Size = 4000), @p65=NULL (DbType = DateTime2), @p66=NULL (Size = 4000), @p67=NULL (Size = 4000), @p68=NULL (Size = 4000), @p69=NULL (Size = 4000), @p70=NULL (Size = 4000), @p71=NULL (Size = 4000), @p72=NULL (Size = 4000), @p73=NULL (Size = 4000), @p74=NULL (Size = 8000) (DbType = Binary), @p75=NULL (Size = 4000), @p76=NULL (DbType = Int32), @p77=NULL (Size = 4000), @p78=NULL (DbType = Int32), @p79=NULL (DbType = Int32), @p80=NULL (Size = 4000), @p81=NULL (Size = 4000), @p82=NULL (Size = 4000), @p83=NULL (Size = 4000), @p84=NULL (Size = 4000), @p85=NULL (Size = 4000), @p86='2022-01-01T00:00:00.0000000', @p87=NULL (DbType = Int32), @p88=NULL (Size = 4000), @p89=NULL (Size = 4000), @p90=NULL (Size = 4000), @p91=NULL (Size = 4000), @p92=NULL (Size = 4000), @p93=NULL (Size = 4000), @p94=NULL (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Clients] ([BranchCode], [ClientAccountPurposeNepali], [ClientCastCode], [ClientCitizenShipIssueDate], [ClientCitizenShipIssueDistrict], [ClientCitizenshipFileData], [ClientCitizenshipFileName], [ClientCitizenshipFileType], [ClientCitizenshipNumber], [ClientDateOfBirth], [ClientEducationStatus], [ClientEmail], [ClientFatherInLaw], [ClientFatherName], [ClientFatherNameNepali], [ClientFirstName], [ClientGenderCode], [ClientGrandFatherName], [ClientGrandFatherNameNepali], [ClientGroupId], [ClientId], [ClientIfMemberOfOtherParty], [ClientIncomeSource], [ClientLastName], [ClientMartialStatusCode], [ClientMiddleName], [ClientMobileNumber1], [ClientMobileNumber2], [ClientMotherInLaw], [ClientMotherName], [ClientMotherNameNepali], [ClientNameOfDaughters], [ClientNameOfSons], [ClientNationality], [ClientNationalityIdStatus], [ClientNepaliName], [ClientOccupation], [ClientOtherInfo], [ClientOtherInfo2], [ClientPanNumber], [ClientPhotoFileData], [ClientPhotoFileName], [ClientPhotoFileType], [ClientShareTypeInfoId], [ClientSignatureFileData], [ClientSignatureFileName], [ClientSignatureFileType], [ClientSpouseName], [ClientSpouseOccupation], [ClientTelephoneNumber1], [ClientTelephoneNumber2], [ClientTypeId], [ClientUnitId], [ClientVotingId], [ClientWebsite], [CreatedBy], [CreatedOn], [CreatorId], [IsActive], [IsKYMUpdated], [IsModified], [IsShareAllowed], [KYMTypeId], [ModificationCount], [ModifiedBy], [ModifiedOn], [ModifierId], [NomineeAddress], [NomineeCitizenshipNumber], [NomineeContactNumber], [NomineeIntroducedBy], [NomineeName], [NomineeNepaliName], [NomineeNepaliRelation], [NomineePhotoFileData], [NomineePhotoFileName], [NomineePhotoFileType], [NomineeRelation], [PermanentDistrictCode], [PermanentStateCode], [PermanentToleVillage], [PermanentToleVillageNepali], [PermanentVdcMunicipality], [PermanentVdcMunicipalityNepali], [PermanentWardNumber], [PermanentWardNumberNepali], [RegistrationDate], [TemporaryDistrictCode], [TemporaryStateCode], [TemporaryToleVillage], [TemporaryToleVillageNepali], [TemporaryVdcMunicipality], [TemporaryVdcMunicipalityNepali], [TemporaryWardNumber], [TemporaryWardNumberNepali])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84, @p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94);
2023-08-07 21:19:17.529 +05:45 [INF] 8/7/2023 9:19:17 PM: New Client has been created by employee admin. Sending to assign unique client number...
2023-08-07 21:19:17.556 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[@p1='2', @p0='00002' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Clients] SET [ClientId] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2023-08-07 21:19:17.561 +05:45 [INF] 8/7/2023 9:19:17 PM: 00002 number has been assiged to newly created client
2023-08-07 21:19:17.612 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[@p0='2', @p1='0' (Precision = 18) (Scale = 2), @p2='True'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [ShareAccounts] ([ClientId], [CurrentShareBalance], [IsActive])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2023-08-07 21:19:17.653 +05:45 [INF] Executing ObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-07 21:19:17.793 +05:45 [INF] Executed action MicroFinance.Controllers.ClientSetup.ClientSetupController.CreateClient (MicroFinance) in 1859.7926ms
2023-08-07 21:19:17.796 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.ClientSetup.ClientSetupController.CreateClient (MicroFinance)'
2023-08-07 21:19:17.803 +05:45 [INF] HTTP POST /ClientSetup/createNewClient responded 200 in 2707.2255 ms
2023-08-07 21:19:17.822 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/ClientSetup/createNewClient multipart/form-data;+boundary=----WebKitFormBoundaryqZYA2JrCZndgNdNa 8217 - 200 - application/json;+charset=utf-8 2856.2215ms
2023-08-07 21:24:11.775 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/Share?id=2&isClientId=false - -
2023-08-07 21:24:11.784 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Share.ShareController.GetActiveShareAccount (MicroFinance)'
2023-08-07 21:24:11.788 +05:45 [INF] Route matched with {action = "GetActiveShareAccount", controller = "Share"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.Share.ShareAccountDto]] GetActiveShareAccount(Int32, Boolean) on controller MicroFinance.Controllers.Share.ShareController (MicroFinance).
2023-08-07 21:24:15.335 +05:45 [INF] 8/7/2023 9:24:15 PM: admin is requesting for share account of 'Share Account' Id of 2
2023-08-07 21:24:15.800 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[@__id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[ClientId], [c].[ClientFirstName], [c].[ClientLastName], [s].[CurrentShareBalance], [s].[IsActive], CAST([c].[ClientShareTypeInfoId] AS int)
FROM [ShareAccounts] AS [s]
INNER JOIN [Clients] AS [c] ON [s].[ClientId] = [c].[Id]
WHERE [s].[IsActive] = CAST(1 AS bit) AND [s].[Id] = @__id_0
2023-08-07 21:24:15.804 +05:45 [INF] 8/7/2023 9:24:15 PM: Send Share account details of Ashim Adhikari where ShareId and ClientId are 2 and 1 respec. to admin
2023-08-07 21:24:15.809 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.Share.ShareAccountDto'.
2023-08-07 21:24:15.862 +05:45 [INF] Executed action MicroFinance.Controllers.Share.ShareController.GetActiveShareAccount (MicroFinance) in 4074.1227ms
2023-08-07 21:24:15.863 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Share.ShareController.GetActiveShareAccount (MicroFinance)'
2023-08-07 21:24:15.863 +05:45 [INF] HTTP GET /Share responded 200 in 4078.8911 ms
2023-08-07 21:24:15.863 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/Share?id=2&isClientId=false - - - 200 - application/json;+charset=utf-8 4088.2579ms
2023-08-07 21:24:35.253 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/Share/shareKitta - -
2023-08-07 21:24:35.255 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Share.ShareController.GetShareKitta (MicroFinance)'
2023-08-07 21:24:35.257 +05:45 [INF] Route matched with {action = "GetShareKitta", controller = "Share"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] GetShareKitta() on controller MicroFinance.Controllers.Share.ShareController (MicroFinance).
2023-08-07 21:24:35.267 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[CurrentKitta], [s].[IsActive], [s].[PriceOfOneKitta]
FROM [ShareKittas] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2023-08-07 21:24:35.479 +05:45 [INF] Executed action MicroFinance.Controllers.Share.ShareController.GetShareKitta (MicroFinance) in 222.248ms
2023-08-07 21:24:35.480 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Share.ShareController.GetShareKitta (MicroFinance)'
2023-08-07 21:24:35.578 +05:45 [INF] HTTP GET /Share/shareKitta responded 401 in 323.3578 ms
2023-08-07 21:24:35.578 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/Share/shareKitta - - - 401 - application/json 325.1901ms
2023-08-07 21:31:03.870 +05:45 [INF] Executed DbCommand (79ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:31:04.030 +05:45 [INF] Executed DbCommand (85ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:31:04.048 +05:45 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:31:04.054 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:31:04.080 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:31:04.111 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:31:04.457 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:04.705 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:31:04.707 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:31:04.709 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:31:04.712 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:31:04.718 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:31:04.721 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:31:04.996 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-07 21:31:05.021 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:31:05.021 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:31:05.181 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:31:05.184 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:31:05.186 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:31:05.188 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:31:05.192 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:31:05.197 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:31:05.203 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.208 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.214 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.226 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.236 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.240 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.244 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.247 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.250 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.252 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.260 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.263 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.266 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.270 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.273 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.278 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.287 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.293 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.298 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:31:05.441 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-07 21:31:05.593 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-07 21:31:05.593 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-07 21:31:05.597 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-07 21:31:05.597 +05:45 [INF] Hosting environment: Development
2023-08-07 21:31:05.598 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-07 21:33:00.828 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 350
2023-08-07 21:33:00.905 +05:45 [INF] CORS policy execution successful.
2023-08-07 21:33:00.916 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:33:00.945 +05:45 [INF] Route matched with {action = "MakeShareTransaction", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeShareTransaction(MicroFinance.Dtos.Transactions.ShareTransaction.MakeShareTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 21:33:01.170 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance) in 219.728ms
2023-08-07 21:33:01.171 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:33:01.366 +05:45 [INF] HTTP POST /Transaction/share responded 401 in 454.4721 ms
2023-08-07 21:33:01.373 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 350 - 401 - application/json 549.7957ms
2023-08-07 21:33:35.470 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-07 21:33:35.627 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 157.4898ms
2023-08-07 21:33:35.967 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-07 21:33:36.361 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 393.5539ms
2023-08-07 21:34:47.487 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 346
2023-08-07 21:34:47.491 +05:45 [INF] CORS policy execution successful.
2023-08-07 21:34:47.491 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:34:47.492 +05:45 [INF] Route matched with {action = "MakeShareTransaction", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeShareTransaction(MicroFinance.Dtos.Transactions.ShareTransaction.MakeShareTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 21:34:47.493 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance) in 1.4322ms
2023-08-07 21:34:47.494 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:34:47.515 +05:45 [INF] HTTP POST /Transaction/share responded 401 in 24.1007 ms
2023-08-07 21:34:47.516 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 346 - 401 - application/json 29.0496ms
2023-08-07 21:36:03.342 +05:45 [INF] Executed DbCommand (61ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:36:03.469 +05:45 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:36:03.482 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:36:03.484 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:36:03.510 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:36:03.540 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:36:03.872 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.065 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:36:04.066 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:36:04.067 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:36:04.068 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:36:04.070 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:36:04.071 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:36:04.323 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-07 21:36:04.341 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:36:04.342 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:36:04.499 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:36:04.503 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:36:04.505 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:36:04.506 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:36:04.509 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:36:04.514 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:36:04.519 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.525 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.530 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.541 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.550 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.553 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.557 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.560 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.563 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.566 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.577 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.592 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.596 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.610 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.613 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.617 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.622 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.626 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.631 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:36:04.741 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-07 21:36:04.891 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-07 21:36:04.891 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-07 21:36:04.896 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-07 21:36:04.897 +05:45 [INF] Hosting environment: Development
2023-08-07 21:36:04.897 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-07 21:36:13.550 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 346
2023-08-07 21:36:13.616 +05:45 [INF] CORS policy execution successful.
2023-08-07 21:36:13.627 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:36:13.656 +05:45 [INF] Route matched with {action = "MakeShareTransaction", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeShareTransaction(MicroFinance.Dtos.Transactions.ShareTransaction.MakeShareTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 21:36:14.063 +05:45 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2023-08-07 21:36:14.108 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance) in 445.5387ms
2023-08-07 21:36:14.109 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:36:14.113 +05:45 [INF] HTTP POST /Transaction/share responded 400 in 490.9484 ms
2023-08-07 21:36:14.121 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 346 - 400 - application/problem+json;+charset=utf-8 573.7009ms
2023-08-07 21:36:51.403 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 263
2023-08-07 21:36:51.407 +05:45 [INF] CORS policy execution successful.
2023-08-07 21:36:51.413 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:36:51.413 +05:45 [INF] Route matched with {action = "MakeShareTransaction", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeShareTransaction(MicroFinance.Dtos.Transactions.ShareTransaction.MakeShareTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 21:36:51.478 +05:45 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2023-08-07 21:36:51.479 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance) in 65.9332ms
2023-08-07 21:36:51.480 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:36:51.480 +05:45 [INF] HTTP POST /Transaction/share responded 400 in 67.2445 ms
2023-08-07 21:36:51.480 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 263 - 400 - application/problem+json;+charset=utf-8 77.5260ms
2023-08-07 21:37:05.932 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 262
2023-08-07 21:37:05.934 +05:45 [INF] CORS policy execution successful.
2023-08-07 21:37:05.934 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:37:05.935 +05:45 [INF] Route matched with {action = "MakeShareTransaction", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeShareTransaction(MicroFinance.Dtos.Transactions.ShareTransaction.MakeShareTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 21:37:20.713 +05:45 [INF] Executed DbCommand (62ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:37:20.839 +05:45 [INF] Executed DbCommand (57ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:37:20.853 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:37:20.854 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:37:20.882 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:37:20.914 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:37:21.255 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:21.508 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:37:21.510 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:37:21.512 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:37:21.513 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:37:21.523 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:37:21.524 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:37:21.780 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-07 21:37:21.800 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:37:21.800 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:37:21.941 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:37:21.947 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:37:21.971 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:37:21.973 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:37:21.978 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:37:21.985 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:37:21.994 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.001 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.008 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.019 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.026 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.029 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.034 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.042 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.051 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.054 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.065 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.070 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.074 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.077 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.081 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.085 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.089 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.093 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.097 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:37:22.219 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-07 21:37:22.368 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-07 21:37:22.368 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-07 21:37:22.372 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-07 21:37:22.373 +05:45 [INF] Hosting environment: Development
2023-08-07 21:37:22.373 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-07 21:39:12.792 +05:45 [INF] Executed DbCommand (67ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:39:12.923 +05:45 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:39:12.937 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:39:12.938 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:39:12.966 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:39:12.995 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:39:13.382 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:13.616 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:39:13.617 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:39:13.618 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:39:13.620 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:39:13.624 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:39:13.625 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:39:13.880 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-07 21:39:13.900 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:39:13.901 +05:45 [WRN] No store type was specified for the decimal property 'CurrentKitta' on entity type 'ShareKitta'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-07 21:39:14.018 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:39:14.020 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:39:14.042 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-07 21:39:14.044 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-07 21:39:14.047 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-07 21:39:14.051 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-07 21:39:14.055 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.060 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.065 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.075 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.081 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.084 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.089 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.092 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.094 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.097 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.106 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.109 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.112 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.115 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.118 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.123 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.127 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.131 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.135 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-07 21:39:14.246 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-07 21:39:14.390 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-07 21:39:14.390 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-07 21:39:14.395 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-07 21:39:14.395 +05:45 [INF] Hosting environment: Development
2023-08-07 21:39:14.395 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-07 21:39:20.621 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 262
2023-08-07 21:39:20.687 +05:45 [INF] CORS policy execution successful.
2023-08-07 21:39:20.698 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:39:20.729 +05:45 [INF] Route matched with {action = "MakeShareTransaction", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeShareTransaction(MicroFinance.Dtos.Transactions.ShareTransaction.MakeShareTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 21:39:21.138 +05:45 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2023-08-07 21:39:21.184 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance) in 447.9648ms
2023-08-07 21:39:21.185 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:39:21.189 +05:45 [INF] HTTP POST /Transaction/share responded 400 in 494.8798 ms
2023-08-07 21:39:21.194 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 262 - 400 - application/problem+json;+charset=utf-8 576.8405ms
2023-08-07 21:39:46.749 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 226
2023-08-07 21:39:46.754 +05:45 [INF] CORS policy execution successful.
2023-08-07 21:39:46.755 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:39:46.755 +05:45 [INF] Route matched with {action = "MakeShareTransaction", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeShareTransaction(MicroFinance.Dtos.Transactions.ShareTransaction.MakeShareTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 21:40:35.849 +05:45 [INF] 8/7/2023 9:40:35 PM: admin is requesting for share account of 'Share Account' Id of 2
2023-08-07 21:40:36.287 +05:45 [INF] Executed DbCommand (59ms) [Parameters=[@__id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[ClientId], [c].[ClientFirstName], [c].[ClientLastName], [s].[CurrentShareBalance], [s].[IsActive], CAST([c].[ClientShareTypeInfoId] AS int)
FROM [ShareAccounts] AS [s]
INNER JOIN [Clients] AS [c] ON [s].[ClientId] = [c].[Id]
WHERE [s].[IsActive] = CAST(1 AS bit) AND [s].[Id] = @__id_0
2023-08-07 21:40:36.323 +05:45 [INF] 8/7/2023 9:40:36 PM: Send Share account details of Ashim Adhikari where ShareId and ClientId are 2 and 1 respec. to admin
2023-08-07 21:40:38.709 +05:45 [INF] 8/7/2023 9:40:38 PM: admin requested to fetch client details of Id: 1
2023-08-07 21:40:38.844 +05:45 [INF] Executed DbCommand (28ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [c0].[Id], [c0].[Type], [c1].[Id], [c1].[Code], [c2].[Id], [c2].[Code], [c3].[Id], [c3].[Type]
FROM [Clients] AS [c]
LEFT JOIN [Ledgers] AS [l] ON [c].[ClientShareTypeInfoId] = [l].[Id]
INNER JOIN [ClientTypes] AS [c0] ON [c].[ClientTypeId] = [c0].[Id]
LEFT JOIN [ClientGroups] AS [c1] ON [c].[ClientGroupId] = [c1].[Id]
LEFT JOIN [ClientUnits] AS [c2] ON [c].[ClientUnitId] = [c2].[Id]
LEFT JOIN [ClientKYMTypes] AS [c3] ON [c].[KYMTypeId] = [c3].[Id]
WHERE [c].[Id] = @__id_0
2023-08-07 21:40:39.232 +05:45 [INF] 8/7/2023 9:40:39 PM: admin sending detail of Ashim Adhikari client (Id: 1 to admin)
2023-08-07 21:40:42.717 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[CurrentKitta], [s].[IsActive], [s].[PriceOfOneKitta]
FROM [ShareKittas] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2023-08-07 21:40:42.867 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance) in 56110.792ms
2023-08-07 21:40:42.869 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:40:42.951 +05:45 [INF] HTTP POST /Transaction/share responded 401 in 56197.0458 ms
2023-08-07 21:40:42.968 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 226 - 401 - application/json 56218.8131ms
2023-08-07 21:41:02.811 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Share/shareKitta application/json 28
2023-08-07 21:41:02.821 +05:45 [INF] CORS policy execution successful.
2023-08-07 21:41:02.822 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Share.ShareController.CreateShareKitta (MicroFinance)'
2023-08-07 21:41:02.825 +05:45 [INF] Route matched with {action = "CreateShareKitta", controller = "Share"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.ResponseDto]] CreateShareKitta(MicroFinance.Dtos.Share.CreateShareKittaDto) on controller MicroFinance.Controllers.Share.ShareController (MicroFinance).
2023-08-07 21:41:02.920 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[CurrentKitta], [s].[IsActive], [s].[PriceOfOneKitta]
FROM [ShareKittas] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2023-08-07 21:41:03.217 +05:45 [INF] Executed DbCommand (14ms) [Parameters=[@p0='0' (Precision = 18) (Scale = 2), @p1='True', @p2='100'], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [ShareKittas] ([CurrentKitta], [IsActive], [PriceOfOneKitta])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2023-08-07 21:41:03.266 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.ResponseDto'.
2023-08-07 21:41:03.276 +05:45 [INF] Executed action MicroFinance.Controllers.Share.ShareController.CreateShareKitta (MicroFinance) in 450.5558ms
2023-08-07 21:41:03.277 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Share.ShareController.CreateShareKitta (MicroFinance)'
2023-08-07 21:41:03.278 +05:45 [INF] HTTP POST /Share/shareKitta responded 200 in 456.3069 ms
2023-08-07 21:41:03.278 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Share/shareKitta application/json 28 - 200 - application/json;+charset=utf-8 489.2533ms
2023-08-07 21:41:36.025 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 226
2023-08-07 21:41:36.029 +05:45 [INF] CORS policy execution successful.
2023-08-07 21:41:36.036 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:41:36.036 +05:45 [INF] Route matched with {action = "MakeShareTransaction", controller = "Transaction"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.String]] MakeShareTransaction(MicroFinance.Dtos.Transactions.ShareTransaction.MakeShareTransactionDto) on controller MicroFinance.Controllers.Transactions.TransactionController (MicroFinance).
2023-08-07 21:41:46.531 +05:45 [INF] 8/7/2023 9:41:46 PM: admin is requesting for share account of 'Share Account' Id of 2
2023-08-07 21:41:46.560 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[ClientId], [c].[ClientFirstName], [c].[ClientLastName], [s].[CurrentShareBalance], [s].[IsActive], CAST([c].[ClientShareTypeInfoId] AS int)
FROM [ShareAccounts] AS [s]
INNER JOIN [Clients] AS [c] ON [s].[ClientId] = [c].[Id]
WHERE [s].[IsActive] = CAST(1 AS bit) AND [s].[Id] = @__id_0
2023-08-07 21:41:46.630 +05:45 [INF] 8/7/2023 9:41:46 PM: Send Share account details of Ashim Adhikari where ShareId and ClientId are 2 and 1 respec. to admin
2023-08-07 21:41:47.879 +05:45 [INF] 8/7/2023 9:41:47 PM: admin requested to fetch client details of Id: 1
2023-08-07 21:41:47.885 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[BranchCode], [c].[ClientAccountPurposeNepali], [c].[ClientCastCode], [c].[ClientCitizenShipIssueDate], [c].[ClientCitizenShipIssueDistrict], [c].[ClientCitizenshipFileData], [c].[ClientCitizenshipFileName], [c].[ClientCitizenshipFileType], [c].[ClientCitizenshipNumber], [c].[ClientDateOfBirth], [c].[ClientEducationStatus], [c].[ClientEmail], [c].[ClientFatherInLaw], [c].[ClientFatherName], [c].[ClientFatherNameNepali], [c].[ClientFirstName], [c].[ClientGenderCode], [c].[ClientGrandFatherName], [c].[ClientGrandFatherNameNepali], [c].[ClientGroupId], [c].[ClientId], [c].[ClientIfMemberOfOtherParty], [c].[ClientIncomeSource], [c].[ClientLastName], [c].[ClientMartialStatusCode], [c].[ClientMiddleName], [c].[ClientMobileNumber1], [c].[ClientMobileNumber2], [c].[ClientMotherInLaw], [c].[ClientMotherName], [c].[ClientMotherNameNepali], [c].[ClientNameOfDaughters], [c].[ClientNameOfSons], [c].[ClientNationality], [c].[ClientNationalityIdStatus], [c].[ClientNepaliName], [c].[ClientOccupation], [c].[ClientOtherInfo], [c].[ClientOtherInfo2], [c].[ClientPanNumber], [c].[ClientPhotoFileData], [c].[ClientPhotoFileName], [c].[ClientPhotoFileType], [c].[ClientShareTypeInfoId], [c].[ClientSignatureFileData], [c].[ClientSignatureFileName], [c].[ClientSignatureFileType], [c].[ClientSpouseName], [c].[ClientSpouseOccupation], [c].[ClientTelephoneNumber1], [c].[ClientTelephoneNumber2], [c].[ClientTypeId], [c].[ClientUnitId], [c].[ClientVotingId], [c].[ClientWebsite], [c].[CreatedBy], [c].[CreatedOn], [c].[CreatorId], [c].[IsActive], [c].[IsKYMUpdated], [c].[IsModified], [c].[IsShareAllowed], [c].[KYMTypeId], [c].[ModificationCount], [c].[ModifiedBy], [c].[ModifiedOn], [c].[ModifierId], [c].[NomineeAddress], [c].[NomineeCitizenshipNumber], [c].[NomineeContactNumber], [c].[NomineeIntroducedBy], [c].[NomineeName], [c].[NomineeNepaliName], [c].[NomineeNepaliRelation], [c].[NomineePhotoFileData], [c].[NomineePhotoFileName], [c].[NomineePhotoFileType], [c].[NomineeRelation], [c].[PermanentDistrictCode], [c].[PermanentStateCode], [c].[PermanentToleVillage], [c].[PermanentToleVillageNepali], [c].[PermanentVdcMunicipality], [c].[PermanentVdcMunicipalityNepali], [c].[PermanentWardNumber], [c].[PermanentWardNumberNepali], [c].[RegistrationDate], [c].[TemporaryDistrictCode], [c].[TemporaryStateCode], [c].[TemporaryToleVillage], [c].[TemporaryToleVillageNepali], [c].[TemporaryVdcMunicipality], [c].[TemporaryVdcMunicipalityNepali], [c].[TemporaryWardNumber], [c].[TemporaryWardNumberNepali], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [c0].[Id], [c0].[Type], [c1].[Id], [c1].[Code], [c2].[Id], [c2].[Code], [c3].[Id], [c3].[Type]
FROM [Clients] AS [c]
LEFT JOIN [Ledgers] AS [l] ON [c].[ClientShareTypeInfoId] = [l].[Id]
INNER JOIN [ClientTypes] AS [c0] ON [c].[ClientTypeId] = [c0].[Id]
LEFT JOIN [ClientGroups] AS [c1] ON [c].[ClientGroupId] = [c1].[Id]
LEFT JOIN [ClientUnits] AS [c2] ON [c].[ClientUnitId] = [c2].[Id]
LEFT JOIN [ClientKYMTypes] AS [c3] ON [c].[KYMTypeId] = [c3].[Id]
WHERE [c].[Id] = @__id_0
2023-08-07 21:41:47.919 +05:45 [INF] 8/7/2023 9:41:47 PM: admin sending detail of Ashim Adhikari client (Id: 1 to admin)
2023-08-07 21:41:54.943 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[CurrentKitta], [s].[IsActive], [s].[PriceOfOneKitta]
FROM [ShareKittas] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2023-08-07 21:42:24.729 +05:45 [INF] Executed DbCommand (72ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreatedBy], [c].[CreatedOn], [c].[IsActive], [c].[IsLocked], [c].[ModifiedBy], [c].[ModifiedOn], [c].[Month], [c].[MonthName], [c].[NumberOfDay], [c].[RunningDay], [c].[Year]
FROM [Calendars] AS [c]
WHERE [c].[IsActive] = CAST(1 AS bit)
2023-08-07 21:45:24.633 +05:45 [INF] Executed DbCommand (13ms) [Parameters=[@p0='One Thousand' (Size = 4000), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3='001' (Nullable = false) (Size = 4000), @p4='2022/1/1' (Nullable = false) (Size = 4000), @p5=NULL (Size = 4000), @p6='admin' (Nullable = false) (Size = 4000), @p7='b927006e-986f-4896-8313-457c8af5d369' (Nullable = false) (Size = 4000), @p8=NULL (Size = 4000), @p9=NULL (Size = 4000), @p10=NULL (Size = 4000), @p11='1' (Nullable = true), @p12='2023-08-07T21:42:24.7962896+05:45', @p13=NULL (DbType = DateTime2), @p14='ShareIssueTransaction' (Size = 4000), @p15='1000' (Precision = 18) (Scale = 4), @p16=NULL (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([AmountInWords], [BankChequeNumber], [BankDetailId], [BranchCode], [CompanyCalendarCreationDate], [CompanyCalendarModificationDate], [CreatedBy], [CreatorId], [ModifiedBy], [ModifierBranchCode], [ModifierId], [PaymentType], [RealWorldCreationDate], [RealWorldModificationDate], [Remarks], [TransactionAmount], [VoucherNumber])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16);
2023-08-07 21:45:24.700 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@p17='24', @p0='One Thousand' (Size = 4000), @p1=NULL (Size = 4000), @p2=NULL (DbType = Int32), @p3='001' (Nullable = false) (Size = 4000), @p4='2022/1/1' (Nullable = false) (Size = 4000), @p5=NULL (Size = 4000), @p6='admin' (Nullable = false) (Size = 4000), @p7='b927006e-986f-4896-8313-457c8af5d369' (Nullable = false) (Size = 4000), @p8=NULL (Size = 4000), @p9=NULL (Size = 4000), @p10=NULL (Size = 4000), @p11='1' (Nullable = true), @p12='2023-08-07T21:42:24.7962896+05:45', @p13=NULL (DbType = DateTime2), @p14='ShareIssueTransaction' (Size = 4000), @p15='1000' (Precision = 18) (Scale = 4), @p16='080/081VCH24001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Transactions] SET [AmountInWords] = @p0, [BankChequeNumber] = @p1, [BankDetailId] = @p2, [BranchCode] = @p3, [CompanyCalendarCreationDate] = @p4, [CompanyCalendarModificationDate] = @p5, [CreatedBy] = @p6, [CreatorId] = @p7, [ModifiedBy] = @p8, [ModifierBranchCode] = @p9, [ModifierId] = @p10, [PaymentType] = @p11, [RealWorldCreationDate] = @p12, [RealWorldModificationDate] = @p13, [Remarks] = @p14, [TransactionAmount] = @p15, [VoucherNumber] = @p16
OUTPUT 1
WHERE [Id] = @p17;
2023-08-07 21:46:28.879 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='2'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[ClientId], [s].[CurrentShareBalance], [s].[IsActive]
FROM [ShareAccounts] AS [s]
WHERE [s].[Id] = @__p_0
2023-08-07 21:47:46.233 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName]
FROM [Ledgers] AS [l]
WHERE [l].[LedgerCode] = 1
2023-08-07 21:48:38.887 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[@p0='2000.0000' (Precision = 18) (Scale = 4), @p1='1', @p2='Transaction done as ShareIssueTransaction' (Size = 4000), @p3='24', @p4='1', @p6='1', @p5='2000.0000' (Precision = 18) (Scale = 4), @p8='2', @p7='1000.00' (Precision = 18) (Scale = 2), @p9='1000.00' (Precision = 18) (Scale = 4), @p10='Deposit Ashish' (Size = 4000), @p11=NULL (DbType = Int32), @p12='Share is Issue' (Size = 4000), @p13='2', @p14='123456' (Size = 4000), @p15='1', @p16='24', @p17='2', @p18=NULL (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [LedgerTransactions] ([BalanceAfterTransaction], [LedgerId], [Remarks], [TransactionId], [TransactionType])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
UPDATE [Ledgers] SET [CurrentBalance] = @p5
OUTPUT 1
WHERE [Id] = @p6;
UPDATE [ShareAccounts] SET [CurrentShareBalance] = @p7
OUTPUT 1
WHERE [Id] = @p8;
INSERT INTO [ShareTransactions] ([BalanceAfterTransaction], [Narration], [PaymentDepositAccountId], [Remarks], [ShareAccountId], [ShareCertificateNumber], [ShareTransactionType], [TransactionId], [TransactionType], [TransferToDepositAccountId])
OUTPUT INSERTED.[Id]
VALUES (@p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18);
2023-08-07 21:49:00.263 +05:45 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-08-07 21:49:00.264 +05:45 [INF] Executed action MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance) in 444227.954ms
2023-08-07 21:49:00.265 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Transactions.TransactionController.MakeShareTransaction (MicroFinance)'
2023-08-07 21:49:00.266 +05:45 [INF] HTTP POST /Transaction/share responded 200 in 444233.2031 ms
2023-08-07 21:49:00.266 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/Transaction/share application/json 226 - 200 - text/plain;+charset=utf-8 444253.1836ms
