2023-08-05 18:32:42.147 +05:45 [INF] Executed DbCommand (118ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:32:42.479 +05:45 [INF] Executed DbCommand (88ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:32:42.521 +05:45 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:32:42.545 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:32:42.607 +05:45 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-05 18:32:42.665 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-05 18:32:43.273 +05:45 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:43.601 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:32:43.603 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:32:43.605 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:32:43.607 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:32:43.615 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-05 18:32:43.616 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-05 18:32:44.047 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-05 18:32:44.086 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-05 18:32:44.293 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:32:44.298 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:32:44.300 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:32:44.303 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:32:44.311 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-05 18:32:44.318 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-05 18:32:44.329 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.340 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.353 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.376 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.397 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.406 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.416 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.422 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.429 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.436 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.453 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.460 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.469 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.478 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.487 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.500 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.513 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.528 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.539 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:32:44.856 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-05 18:32:45.136 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-05 18:32:45.136 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-05 18:32:45.143 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-05 18:32:45.145 +05:45 [INF] Hosting environment: Development
2023-08-05 18:32:45.145 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-05 18:33:01.218 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-05 18:33:01.297 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 401 0 - 85.9693ms
2023-08-05 18:33:05.899 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-05 18:33:06.330 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 430.7911ms
2023-08-05 18:33:06.405 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui-bundle.js - -
2023-08-05 18:33:06.407 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui-standalone-preset.js - -
2023-08-05 18:33:06.651 +05:45 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-08-05 18:33:06.651 +05:45 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-08-05 18:33:06.657 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui-bundle.js - - - 200 1092889 application/javascript 251.3529ms
2023-08-05 18:33:06.657 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui-standalone-preset.js - - - 200 337162 application/javascript 249.2538ms
2023-08-05 18:33:06.920 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-05 18:33:07.472 +05:45 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - MicroFinance.Controllers.Share.ShareController.GetActiveShareAccount (MicroFinance). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at MicroFinance.Middleware.SwaggerBasicAuthMiddleware.InvokeAsync(HttpContext context) in /media/ashish/New Volume/FinTechProject/MicroFinance/MiddleWare/SwaggerBasicAuthMiddleware.cs:line 32
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-08-05 18:33:07.545 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 625.2255ms
2023-08-05 18:34:33.680 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-05 18:34:33.691 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 21.1013ms
2023-08-05 18:34:34.062 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-05 18:34:34.229 +05:45 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Ambiguous HTTP method for action - MicroFinance.Controllers.Share.ShareController.GetActiveShareAccount (MicroFinance). Actions require an explicit HttpMethod binding for Swagger/OpenAPI 3.0
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at MicroFinance.Middleware.SwaggerBasicAuthMiddleware.InvokeAsync(HttpContext context) in /media/ashish/New Volume/FinTechProject/MicroFinance/MiddleWare/SwaggerBasicAuthMiddleware.cs:line 32
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-08-05 18:34:34.232 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 169.8636ms
2023-08-05 18:34:56.746 +05:45 [INF] Executed DbCommand (106ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:34:56.966 +05:45 [INF] Executed DbCommand (99ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:34:56.989 +05:45 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:34:56.991 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:34:57.036 +05:45 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-05 18:34:57.086 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-05 18:34:57.653 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:57.979 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:34:57.981 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:34:57.984 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:34:57.985 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:34:57.989 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-05 18:34:57.990 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-05 18:34:58.393 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-05 18:34:58.424 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-05 18:34:58.628 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:34:58.632 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:34:58.635 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:34:58.637 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:34:58.641 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-05 18:34:58.649 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-05 18:34:58.656 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.665 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.674 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.692 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.706 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.710 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.717 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.721 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.725 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.729 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.739 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.743 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.746 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.750 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.756 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.768 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.777 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.783 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.789 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:34:58.993 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-05 18:34:59.244 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-05 18:34:59.245 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-05 18:34:59.251 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-05 18:34:59.252 +05:45 [INF] Hosting environment: Development
2023-08-05 18:34:59.252 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-05 18:35:05.211 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-05 18:35:05.602 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 395.3433ms
2023-08-05 18:35:05.858 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-05 18:35:06.404 +05:45 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Conflicting method/path combination "GET Share" for actions - MicroFinance.Controllers.Share.ShareController.GetActiveShareAccount (MicroFinance),MicroFinance.Controllers.Share.ShareController.GetAllActiveShareAccount (MicroFinance). Actions require a unique method/path combination for Swagger/OpenAPI 3.0. Use ConflictingActionsResolver as a workaround
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at MicroFinance.Middleware.SwaggerBasicAuthMiddleware.InvokeAsync(HttpContext context) in /media/ashish/New Volume/FinTechProject/MicroFinance/MiddleWare/SwaggerBasicAuthMiddleware.cs:line 32
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-08-05 18:35:06.462 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 604.1720ms
2023-08-05 18:35:16.883 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-05 18:35:16.887 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 3.9203ms
2023-08-05 18:35:17.139 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-05 18:35:17.253 +05:45 [ERR] An unhandled exception has occurred while executing the request.
Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Conflicting method/path combination "GET Share" for actions - MicroFinance.Controllers.Share.ShareController.GetActiveShareAccount (MicroFinance),MicroFinance.Controllers.Share.ShareController.GetAllActiveShareAccount (MicroFinance). Actions require a unique method/path combination for Swagger/OpenAPI 3.0. Use ConflictingActionsResolver as a workaround
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GenerateOperations(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GeneratePaths(IEnumerable`1 apiDescriptions, SchemaRepository schemaRepository)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerDocumentWithoutFilters(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenerator.GetSwaggerAsync(String documentName, String host, String basePath)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at MicroFinance.Middleware.SwaggerBasicAuthMiddleware.InvokeAsync(HttpContext context) in /media/ashish/New Volume/FinTechProject/MicroFinance/MiddleWare/SwaggerBasicAuthMiddleware.cs:line 32
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2023-08-05 18:35:17.254 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 500 - text/plain;+charset=utf-8 115.0470ms
2023-08-05 18:35:49.575 +05:45 [INF] Executed DbCommand (115ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:35:49.818 +05:45 [INF] Executed DbCommand (101ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:35:49.847 +05:45 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:35:49.871 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:35:49.920 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-05 18:35:49.986 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-05 18:35:50.608 +05:45 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:50.990 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:35:50.994 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:35:50.997 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:35:51.007 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:35:51.014 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-05 18:35:51.015 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-05 18:35:51.407 +05:45 [WRN] Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.
2023-08-05 18:35:51.440 +05:45 [WRN] No store type was specified for the decimal property 'CurrentShareBalance' on entity type 'ShareAccount'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2023-08-05 18:35:51.613 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:35:51.617 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:35:51.620 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-08-05 18:35:51.623 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-08-05 18:35:51.627 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-08-05 18:35:51.634 +05:45 [INF] No migrations were applied. The database is already up to date.
2023-08-05 18:35:51.642 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DebitOrCredits] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.650 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AccountTypes] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.658 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [GroupTypes] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.671 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Ledgers] AS [l]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.685 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [SubLedgers] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.691 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [BankTypes] AS [b]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.698 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.705 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientKYMTypes] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.722 +05:45 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientUnits] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.734 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [ClientGroups] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.751 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [States] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.757 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Casts] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.770 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Districts] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.774 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [MaritalStatuses] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.777 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Genders] AS [g]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.783 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositPostingSchemes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.789 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountStatuses] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.794 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositAccountTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.801 +05:45 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [DepositSchemeCalculationTypes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-08-05 18:35:51.999 +05:45 [INF] User profile is available. Using '/home/ashish/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-08-05 18:35:52.264 +05:45 [INF] Now listening on: https://localhost:5001
2023-08-05 18:35:52.264 +05:45 [INF] Now listening on: http://localhost:5000
2023-08-05 18:35:52.270 +05:45 [INF] Application started. Press Ctrl+C to shut down.
2023-08-05 18:35:52.271 +05:45 [INF] Hosting environment: Development
2023-08-05 18:35:52.272 +05:45 [INF] Content root path: /media/ashish/New Volume/FinTechProject/MicroFinance/
2023-08-05 18:35:56.743 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - -
2023-08-05 18:35:57.129 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - - - 200 - text/html;charset=utf-8 392.9553ms
2023-08-05 18:35:57.383 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - -
2023-08-05 18:35:57.964 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 580.8947ms
2023-08-05 18:37:10.533 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73
2023-08-05 18:37:10.538 +05:45 [INF] CORS policy execution successful.
2023-08-05 18:37:11.164 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-05 18:37:11.213 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-08-05 18:37:12.278 +05:45 [INF] Executed DbCommand (183ms) [Parameters=[@__userName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-05 18:37:12.665 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__userName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-05 18:37:12.738 +05:45 [INF] Executed DbCommand (26ms) [Parameters=[@__branchCode_0='001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-05 18:37:12.816 +05:45 [WRN] Invalid password for user.
2023-08-05 18:37:12.816 +05:45 [WRN] User failed to provide the correct password.
2023-08-05 18:37:12.840 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-08-05 18:37:13.129 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[@p22='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p23='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Double), @p5='?' (Size = 256), @p6='?' (DbType = Boolean), @p7='?' (DbType = Int32), @p8='?' (DbType = Boolean), @p9='?' (DbType = Double), @p10='?' (DbType = Boolean), @p11='?' (DbType = DateTimeOffset), @p12='?' (Size = 4000), @p13='?' (DbType = DateTime2), @p14='?' (Size = 256), @p15='?' (Size = 256), @p16='?' (Size = 4000), @p17='?' (Size = 4000), @p18='?' (DbType = Boolean), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [CreatedBy] = @p2, [CreatedOn] = @p3, [DepositLimit] = @p4, [Email] = @p5, [EmailConfirmed] = @p6, [EmployeeId] = @p7, [IsActive] = @p8, [LoanLimit] = @p9, [LockoutEnabled] = @p10, [LockoutEnd] = @p11, [ModifiedBy] = @p12, [ModifiedOn] = @p13, [NormalizedEmail] = @p14, [NormalizedUserName] = @p15, [PasswordHash] = @p16, [PhoneNumber] = @p17, [PhoneNumberConfirmed] = @p18, [SecurityStamp] = @p19, [TwoFactorEnabled] = @p20, [UserName] = @p21
OUTPUT 1
WHERE [Id] = @p22 AND [ConcurrencyStamp] = @p23;
2023-08-05 18:37:13.171 +05:45 [ERR] 8/5/2023 6:37:13 PM Invalid Login Failed > admin
2023-08-05 18:37:13.368 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 2147.1525ms
2023-08-05 18:37:13.371 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-05 18:37:13.514 +05:45 [INF] HTTP POST /FinanceCompany/login responded 401 in 2963.8764 ms
2023-08-05 18:37:13.538 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 73 - 401 - application/json 3004.4170ms
2023-08-05 18:37:24.241 +05:45 [INF] Request starting HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 74
2023-08-05 18:37:24.247 +05:45 [INF] CORS policy execution successful.
2023-08-05 18:37:24.248 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-05 18:37:24.249 +05:45 [INF] Route matched with {action = "Login", controller = "FinanceCompany"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.UserManagement.TokenResponseDto]] Login(MicroFinance.Dtos.UserManagement.UserLoginDto) on controller MicroFinance.Controllers.UserManagement.FinanceCompanyController (MicroFinance).
2023-08-05 18:37:24.296 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__userName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-05 18:37:24.405 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__userName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[UserName] = @__userName_0
2023-08-05 18:37:24.485 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-05 18:37:24.549 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-08-05 18:37:24.637 +05:45 [INF] Executed DbCommand (44ms) [Parameters=[@p22='?' (Size = 450), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p23='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Double), @p5='?' (Size = 256), @p6='?' (DbType = Boolean), @p7='?' (DbType = Int32), @p8='?' (DbType = Boolean), @p9='?' (DbType = Double), @p10='?' (DbType = Boolean), @p11='?' (DbType = DateTimeOffset), @p12='?' (Size = 4000), @p13='?' (DbType = DateTime2), @p14='?' (Size = 256), @p15='?' (Size = 256), @p16='?' (Size = 4000), @p17='?' (Size = 4000), @p18='?' (DbType = Boolean), @p19='?' (Size = 4000), @p20='?' (DbType = Boolean), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [CreatedBy] = @p2, [CreatedOn] = @p3, [DepositLimit] = @p4, [Email] = @p5, [EmailConfirmed] = @p6, [EmployeeId] = @p7, [IsActive] = @p8, [LoanLimit] = @p9, [LockoutEnabled] = @p10, [LockoutEnd] = @p11, [ModifiedBy] = @p12, [ModifiedOn] = @p13, [NormalizedEmail] = @p14, [NormalizedUserName] = @p15, [PasswordHash] = @p16, [PhoneNumber] = @p17, [PhoneNumberConfirmed] = @p18, [SecurityStamp] = @p19, [TwoFactorEnabled] = @p20, [UserName] = @p21
OUTPUT 1
WHERE [Id] = @p22 AND [ConcurrencyStamp] = @p23;
2023-08-05 18:37:24.642 +05:45 [INF] 8/5/2023 6:37:24 PM User Logged In > admin
2023-08-05 18:37:24.693 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-08-05 18:37:25.273 +05:45 [INF] Executing OkObjectResult, writing value of type 'MicroFinance.Dtos.UserManagement.TokenResponseDto'.
2023-08-05 18:37:25.292 +05:45 [INF] Executed action MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance) in 1043.3276ms
2023-08-05 18:37:25.292 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.UserManagement.FinanceCompanyController.Login (MicroFinance)'
2023-08-05 18:37:25.293 +05:45 [INF] HTTP POST /FinanceCompany/login responded 200 in 1045.3942 ms
2023-08-05 18:37:25.293 +05:45 [INF] Request finished HTTP/1.1 POST http://localhost:5000/FinanceCompany/login application/json 74 - 200 - application/json;+charset=utf-8 1052.0388ms
2023-08-05 18:37:38.252 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/AccountSetup/getAllAccounttypes - -
2023-08-05 18:37:38.261 +05:45 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-08-05 18:37:38.276 +05:45 [INF] AuthenticationScheme: UserToken was challenged.
2023-08-05 18:37:38.276 +05:45 [INF] HTTP GET /AccountSetup/getAllAccounttypes responded 401 in 23.3072 ms
2023-08-05 18:37:38.278 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/AccountSetup/getAllAccounttypes - - - 401 0 - 26.1436ms
2023-08-05 18:37:46.311 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/AccountSetup/getAllAccounttypes - -
2023-08-05 18:37:46.450 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.AccountSetup.AccountSetupController.GetAccountTypes (MicroFinance)'
2023-08-05 18:37:46.474 +05:45 [INF] Route matched with {action = "GetAccountTypes", controller = "AccountSetup"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[MicroFinance.Dtos.AccountSetup.MainLedger.AccountTypeDto]]] GetAccountTypes() on controller MicroFinance.Controllers.AccountSetup.AccountSetupController (MicroFinance).
2023-08-05 18:37:46.502 +05:45 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-05 18:37:46.507 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[@__branchCode_0='001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-05 18:37:46.543 +05:45 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Name]
FROM [AccountTypes] AS [a]
2023-08-05 18:37:46.592 +05:45 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MicroFinance.Dtos.AccountSetup.MainLedger.AccountTypeDto, MicroFinance, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-08-05 18:37:46.599 +05:45 [INF] Executed action MicroFinance.Controllers.AccountSetup.AccountSetupController.GetAccountTypes (MicroFinance) in 124.4998ms
2023-08-05 18:37:46.599 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.AccountSetup.AccountSetupController.GetAccountTypes (MicroFinance)'
2023-08-05 18:37:46.601 +05:45 [INF] HTTP GET /AccountSetup/getAllAccounttypes responded 200 in 285.1642 ms
2023-08-05 18:37:46.602 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/AccountSetup/getAllAccounttypes - - - 200 - application/json;+charset=utf-8 290.8741ms
2023-08-05 18:37:51.526 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/AccountSetup/getAllGrouptypes - -
2023-08-05 18:37:51.527 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.AccountSetup.AccountSetupController.GetGroupTypes (MicroFinance)'
2023-08-05 18:37:51.533 +05:45 [INF] Route matched with {action = "GetGroupTypes", controller = "AccountSetup"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[MicroFinance.Dtos.AccountSetup.MainLedger.GroupTypeDto]]] GetGroupTypes() on controller MicroFinance.Controllers.AccountSetup.AccountSetupController (MicroFinance).
2023-08-05 18:37:51.557 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-05 18:37:51.634 +05:45 [INF] Executed DbCommand (5ms) [Parameters=[@__branchCode_0='001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-05 18:37:51.701 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule], [a].[Id], [a].[Name]
FROM [GroupTypes] AS [g]
INNER JOIN [AccountTypes] AS [a] ON [g].[AccountTypeId] = [a].[Id]
2023-08-05 18:37:51.759 +05:45 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MicroFinance.Dtos.AccountSetup.MainLedger.GroupTypeDto, MicroFinance, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-08-05 18:37:51.783 +05:45 [INF] Executed action MicroFinance.Controllers.AccountSetup.AccountSetupController.GetGroupTypes (MicroFinance) in 250.0416ms
2023-08-05 18:37:51.784 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.AccountSetup.AccountSetupController.GetGroupTypes (MicroFinance)'
2023-08-05 18:37:51.784 +05:45 [INF] HTTP GET /AccountSetup/getAllGrouptypes responded 200 in 257.6046 ms
2023-08-05 18:37:51.785 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/AccountSetup/getAllGrouptypes - - - 200 - application/json;+charset=utf-8 258.3407ms
2023-08-05 18:38:15.510 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/AccountSetup/getAllBankSetup - -
2023-08-05 18:38:15.540 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.AccountSetup.AccountSetupController.GetAllBankSetup (MicroFinance)'
2023-08-05 18:38:15.556 +05:45 [INF] Route matched with {action = "GetAllBankSetup", controller = "AccountSetup"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[MicroFinance.Dtos.AccountSetup.MainLedger.BankSetupDetailsDto]]] GetAllBankSetup() on controller MicroFinance.Controllers.AccountSetup.AccountSetupController (MicroFinance).
2023-08-05 18:38:15.581 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-05 18:38:15.617 +05:45 [INF] Executed DbCommand (6ms) [Parameters=[@__branchCode_0='001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-05 18:38:15.667 +05:45 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [b0].[Id], [b0].[Name]
FROM [BankSetups] AS [b]
INNER JOIN [Ledgers] AS [l] ON [b].[LedgerId] = [l].[Id]
INNER JOIN [BankTypes] AS [b0] ON [b].[BankTypeId] = [b0].[Id]
2023-08-05 18:38:15.681 +05:45 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MicroFinance.Dtos.AccountSetup.MainLedger.BankSetupDto, MicroFinance, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-08-05 18:38:15.702 +05:45 [INF] Executed action MicroFinance.Controllers.AccountSetup.AccountSetupController.GetAllBankSetup (MicroFinance) in 145.537ms
2023-08-05 18:38:15.702 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.AccountSetup.AccountSetupController.GetAllBankSetup (MicroFinance)'
2023-08-05 18:38:15.703 +05:45 [INF] HTTP GET /AccountSetup/getAllBankSetup responded 200 in 163.2645 ms
2023-08-05 18:38:15.703 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/AccountSetup/getAllBankSetup - - - 200 - application/json;+charset=utf-8 203.9921ms
2023-08-05 18:38:33.598 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/AccountSetup/bankSetup/ledger?ledgerId=1 - -
2023-08-05 18:38:33.599 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.AccountSetup.AccountSetupController.GetBankSetupByLedger (MicroFinance)'
2023-08-05 18:38:33.605 +05:45 [INF] Route matched with {action = "GetBankSetupByLedger", controller = "AccountSetup"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[MicroFinance.Dtos.AccountSetup.MainLedger.BankSetupDetailsDto]]] GetBankSetupByLedger(Int32) on controller MicroFinance.Controllers.AccountSetup.AccountSetupController (MicroFinance).
2023-08-05 18:38:33.649 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-05 18:38:33.781 +05:45 [INF] Executed DbCommand (24ms) [Parameters=[@__branchCode_0='001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-05 18:38:33.817 +05:45 [INF] Executed DbCommand (9ms) [Parameters=[@__ledgerId_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT [b].[Id], [b].[AccountNumber], [b].[BankBranch], [b].[BankTypeId], [b].[BranchCode], [b].[InterestRate], [b].[LedgerId], [b].[Name], [b].[NepaliName], [b].[TotalInterestBalance], [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [b0].[Id], [b0].[Name]
FROM [BankSetups] AS [b]
INNER JOIN [Ledgers] AS [l] ON [b].[LedgerId] = [l].[Id]
INNER JOIN [BankTypes] AS [b0] ON [b].[BankTypeId] = [b0].[Id]
WHERE [b].[LedgerId] = @__ledgerId_0
2023-08-05 18:38:33.818 +05:45 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MicroFinance.Dtos.AccountSetup.MainLedger.BankSetupDto, MicroFinance, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-08-05 18:38:33.818 +05:45 [INF] Executed action MicroFinance.Controllers.AccountSetup.AccountSetupController.GetBankSetupByLedger (MicroFinance) in 213.0516ms
2023-08-05 18:38:33.819 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.AccountSetup.AccountSetupController.GetBankSetupByLedger (MicroFinance)'
2023-08-05 18:38:33.819 +05:45 [INF] HTTP GET /AccountSetup/bankSetup/ledger responded 200 in 220.0696 ms
2023-08-05 18:38:33.819 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/AccountSetup/bankSetup/ledger?ledgerId=1 - - - 200 - application/json;+charset=utf-8 220.8226ms
2023-08-05 18:38:42.504 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/AccountSetup/getAllLedgers - -
2023-08-05 18:38:42.505 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.AccountSetup.AccountSetupController.GetLedgers (MicroFinance)'
2023-08-05 18:38:42.509 +05:45 [INF] Route matched with {action = "GetLedgers", controller = "AccountSetup"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[MicroFinance.Dtos.AccountSetup.MainLedger.LedgerDto]]] GetLedgers() on controller MicroFinance.Controllers.AccountSetup.AccountSetupController (MicroFinance).
2023-08-05 18:38:42.554 +05:45 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreatedBy], [a].[CreatedOn], [a].[DepositLimit], [a].[Email], [a].[EmailConfirmed], [a].[EmployeeId], [a].[IsActive], [a].[LoanLimit], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[ModifiedBy], [a].[ModifiedOn], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [e].[Id], [e].[BranchCode], [e].[CitizenShipFileData], [e].[CitizenShipFileName], [e].[CitizenShipFileType], [e].[CreatedBy], [e].[CreatedOn], [e].[DateOfJoining], [e].[Designation], [e].[Email], [e].[Facilities], [e].[GenderCode], [e].[Grade], [e].[ModifiedBy], [e].[ModifiedOn], [e].[Name], [e].[OtherFacilities], [e].[PANNumber], [e].[PFAllowed], [e].[PhoneNumber], [e].[ProfilePicFileData], [e].[ProfilePicFileName], [e].[ProfilePicFileType], [e].[ProvidentPostingAccount], [e].[SalaryAmount], [e].[SalaryPostingAccount], [e].[SignatureFileData], [e].[SignatureFileName], [e].[SignatureFileType], [e].[Tax]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Employees] AS [e] ON [a].[EmployeeId] = [e].[Id]
WHERE [a].[Id] = @__id_0
2023-08-05 18:38:42.642 +05:45 [INF] Executed DbCommand (3ms) [Parameters=[@__branchCode_0='001' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [b].[Id], [b].[BranchCode], [b].[BranchName], [b].[CreatedBy], [b].[CreatedOn], [b].[IsActive], [b].[ModifiedBy], [b].[ModifiedOn]
FROM [Branches] AS [b]
WHERE [b].[BranchCode] = @__branchCode_0
2023-08-05 18:38:42.674 +05:45 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [l].[Id], [l].[CurrentBalance], [l].[DepreciationRate], [l].[EntryDate], [l].[GroupTypeId], [l].[HisabNumber], [l].[IsBank], [l].[IsSubLedgerActive], [l].[LedgerCode], [l].[Name], [l].[NepaliName], [g].[Id], [g].[AccountTypeId], [g].[CharKhataNumber], [g].[EntryDate], [g].[Name], [g].[NepaliName], [g].[Schedule], [a].[Id], [a].[Name]
FROM [Ledgers] AS [l]
INNER JOIN [GroupTypes] AS [g] ON [l].[GroupTypeId] = [g].[Id]
INNER JOIN [AccountTypes] AS [a] ON [g].[AccountTypeId] = [a].[Id]
2023-08-05 18:38:42.707 +05:45 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[MicroFinance.Dtos.AccountSetup.MainLedger.LedgerDto, MicroFinance, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-08-05 18:38:42.714 +05:45 [INF] Executed action MicroFinance.Controllers.AccountSetup.AccountSetupController.GetLedgers (MicroFinance) in 204.4098ms
2023-08-05 18:38:42.714 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.AccountSetup.AccountSetupController.GetLedgers (MicroFinance)'
2023-08-05 18:38:42.714 +05:45 [INF] HTTP GET /AccountSetup/getAllLedgers responded 200 in 209.7501 ms
2023-08-05 18:38:42.714 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/AccountSetup/getAllLedgers - - - 200 - application/json;+charset=utf-8 210.3089ms
2023-08-05 18:39:25.369 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/Share?id=1&isClientId=true - -
2023-08-05 18:39:25.370 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Share.ShareController.GetActiveShareAccount (MicroFinance)'
2023-08-05 18:39:25.377 +05:45 [INF] Route matched with {action = "GetActiveShareAccount", controller = "Share"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.Share.ShareAccountDto]] GetActiveShareAccount(Int32, Boolean) on controller MicroFinance.Controllers.Share.ShareController (MicroFinance).
2023-08-05 18:39:45.839 +05:45 [INF] 8/5/2023 6:39:45 PM: admin is requesting for share account of 'Client' Id of 1
2023-08-05 18:44:37.193 +05:45 [ERR] Failed executing DbCommand (30ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[ClientId], [c].[ClientFirstName], [c].[ClientLastName], [s].[CurrentShareBalance], [s].[IsActive], CAST([c].[ClientShareTypeInfoId] AS int)
FROM [ShareAccounts] AS [s]
LEFT JOIN [Clients] AS [c] ON [s].[ClientId] = [c].[Id]
WHERE [s].[IsActive] = CAST(1 AS bit) AND [s].[ClientId] = @__id_0
2023-08-05 18:44:37.242 +05:45 [ERR] An exception occurred while iterating over the results of a query for context type 'MicroFinance.DBContext.ApplicationDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'ShareAccounts'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__208_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:aca28f57-3116-4aa2-8729-695b7f547e31
Error Number:208,State:1,Class:16
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'ShareAccounts'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__208_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:aca28f57-3116-4aa2-8729-695b7f547e31
Error Number:208,State:1,Class:16
2023-08-05 18:44:37.475 +05:45 [INF] Executed action MicroFinance.Controllers.Share.ShareController.GetActiveShareAccount (MicroFinance) in 312098.0724ms
2023-08-05 18:44:37.476 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Share.ShareController.GetActiveShareAccount (MicroFinance)'
2023-08-05 18:44:37.585 +05:45 [INF] HTTP GET /Share responded 401 in 312215.5339 ms
2023-08-05 18:44:37.585 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/Share?id=1&isClientId=true - - - 401 - application/json 312216.4918ms
2023-08-05 18:44:51.478 +05:45 [INF] Request starting HTTP/1.1 GET http://localhost:5000/Share?id=1&isClientId=true - -
2023-08-05 18:44:51.479 +05:45 [INF] Executing endpoint 'MicroFinance.Controllers.Share.ShareController.GetActiveShareAccount (MicroFinance)'
2023-08-05 18:44:51.479 +05:45 [INF] Route matched with {action = "GetActiveShareAccount", controller = "Share"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[MicroFinance.Dtos.Share.ShareAccountDto]] GetActiveShareAccount(Int32, Boolean) on controller MicroFinance.Controllers.Share.ShareController (MicroFinance).
2023-08-05 18:44:58.860 +05:45 [INF] 8/5/2023 6:44:58 PM: admin is requesting for share account of 'Client' Id of 1
2023-08-05 18:45:13.768 +05:45 [ERR] Failed executing DbCommand (158ms) [Parameters=[@__id_0='1'], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[Id], [s].[ClientId], [c].[ClientFirstName], [c].[ClientLastName], [s].[CurrentShareBalance], [s].[IsActive], CAST([c].[ClientShareTypeInfoId] AS int)
FROM [ShareAccounts] AS [s]
LEFT JOIN [Clients] AS [c] ON [s].[ClientId] = [c].[Id]
WHERE [s].[IsActive] = CAST(1 AS bit) AND [s].[ClientId] = @__id_0
2023-08-05 18:45:13.771 +05:45 [ERR] An exception occurred while iterating over the results of a query for context type 'MicroFinance.DBContext.ApplicationDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'ShareAccounts'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__208_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:aca28f57-3116-4aa2-8729-695b7f547e31
Error Number:208,State:1,Class:16
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'ShareAccounts'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__208_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:aca28f57-3116-4aa2-8729-695b7f547e31
Error Number:208,State:1,Class:16
2023-08-05 18:45:13.963 +05:45 [INF] Executed action MicroFinance.Controllers.Share.ShareController.GetActiveShareAccount (MicroFinance) in 22483.9225ms
2023-08-05 18:45:13.964 +05:45 [INF] Executed endpoint 'MicroFinance.Controllers.Share.ShareController.GetActiveShareAccount (MicroFinance)'
2023-08-05 18:45:14.065 +05:45 [INF] HTTP GET /Share responded 401 in 22586.3058 ms
2023-08-05 18:45:14.065 +05:45 [INF] Request finished HTTP/1.1 GET http://localhost:5000/Share?id=1&isClientId=true - - - 401 - application/json 22587.0978ms
